{"meta":{"version":1,"warehouse":"4.0.1"},"models":{"Asset":[{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/gitalk.css","path":"css/gitalk.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/default.png","path":"img/default.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/loading.gif","path":"img/loading.gif","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/police_beian.png","path":"img/police_beian.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/boot.js","path":"js/boot.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/color-schema.js","path":"js/color-schema.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/events.js","path":"js/events.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/img-lazyload.js","path":"js/img-lazyload.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/leancloud.js","path":"js/leancloud.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/plugins.js","path":"js/plugins.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/xml/local-search.xml","path":"xml/local-search.xml","modified":0,"renderable":1},{"_id":"source/images/about/default.jpg","path":"images/about/default.jpg","modified":0,"renderable":0},{"_id":"source/images/about/WeChatQRCode.jpg","path":"images/about/WeChatQRCode.jpg","modified":0,"renderable":0},{"_id":"source/images/post/Use-Primevue-Steps-component-vue3/1.gif","path":"images/post/Use-Primevue-Steps-component-vue3/1.gif","modified":0,"renderable":0},{"_id":"source/images/post/Use-Primevue-Steps-component-vue3/2.jpg","path":"images/post/Use-Primevue-Steps-component-vue3/2.jpg","modified":0,"renderable":0},{"_id":"source/images/post/Use-Primevue-Steps-component-vue3/3.png","path":"images/post/Use-Primevue-Steps-component-vue3/3.png","modified":0,"renderable":0},{"_id":"source/images/post/Use-Primevue-Steps-component-vue3/4.png","path":"images/post/Use-Primevue-Steps-component-vue3/4.png","modified":0,"renderable":0},{"_id":"source/images/post/Use-Primevue-Steps-component-vue3/5.gif","path":"images/post/Use-Primevue-Steps-component-vue3/5.gif","modified":0,"renderable":0},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight-dark.styl","path":"css/highlight-dark.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight.styl","path":"css/highlight.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/fluid.png","path":"img/fluid.png","modified":0,"renderable":1},{"_id":"source/images/post/primevue-cover.png","path":"images/post/primevue-cover.png","modified":0,"renderable":0},{"_id":"source/images/post/selenium-cover.jpg","path":"images/post/selenium-cover.jpg","modified":0,"renderable":0},{"_id":"source/images/post/music-cover.jpg","path":"images/post/music-cover.jpg","modified":0,"renderable":0},{"_id":"source/images/post/logo.jpg","path":"images/post/logo.jpg","modified":0,"renderable":0},{"_id":"source/images/post/bug-diary-cover.png","path":"images/post/bug-diary-cover.png","modified":0,"renderable":0},{"_id":"source/images/post/docker-container-etc-hosts-file-reset-bug/01.png","path":"images/post/docker-container-etc-hosts-file-reset-bug/01.png","modified":0,"renderable":0},{"_id":"source/images/post/docker-container-etc-hosts-file-reset-bug/02.png","path":"images/post/docker-container-etc-hosts-file-reset-bug/02.png","modified":0,"renderable":0},{"_id":"source/images/post/ce25d5b1573d11ed95612cfda1215af5.png","path":"images/post/ce25d5b1573d11ed95612cfda1215af5.png","modified":0,"renderable":0},{"_id":"source/images/post/pypi-cover.png","path":"images/post/pypi-cover.png","modified":1,"renderable":0},{"_id":"source/images/post/docker-cover.png","path":"images/post/docker-cover.png","modified":1,"renderable":0}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"c3fa98760fef0900f9f5c6b93fee7d25ba13780b","modified":1652406786007},{"_id":"themes/landscape/.npmignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1652347377997},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1652347378042},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1652347378649},{"_id":"themes/landscape/_config.yml","hash":"79ac6b9ed6a4de5a21ea53fc3f5a3de92e2475ff","modified":1652347378994},{"_id":"themes/landscape/package.json","hash":"544f21a0b2c7034998b36ae94dba6e3e0f39f228","modified":1652347378702},{"_id":"themes/landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1652347378996},{"_id":"themes/landscape/README.md","hash":"37fae88639ef60d63bd0de22314d7cc4c5d94b07","modified":1652347378724},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1652347378997},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1652347379003},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1652347379008},{"_id":"themes/landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1652347379007},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1652347379009},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1652347379012},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1652347379015},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1652347379016},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1652347379018},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1652347379021},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1652347379025},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1652347378218},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1652347378245},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1652347378353},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1652347378364},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1652347378402},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1652347378412},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1652347378498},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1652347378643},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1652347378173},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1652347378262},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1652347378310},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":1652347378295},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"950ddd91db8718153b329b96dc14439ab8463ba5","modified":1652347378191},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1652347378380},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"d0d753d39038284d52b10e5075979cc97db9cd20","modified":1652347378157},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1652347378446},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1652347378224},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1652347378426},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1652347378241},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1652347378471},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1652347378210},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1652347378504},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1652347378554},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"7e749050be126eadbc42decfbea75124ae430413","modified":1652347378338},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"5abf77aec957d9445fc71a8310252f0013c84578","modified":1652347378328},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1652347378695},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1652347378566},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1652347378558},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1652347378762},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1652347378796},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1652347378691},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1652347378910},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1652347378687},{"_id":"themes/landscape/source/css/_variables.styl","hash":"628e307579ea46b5928424313993f17b8d729e92","modified":1652347378934},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1652347378237},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1652347378255},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1652347378273},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1652347378454},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1652347378518},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1652347378388},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1652347378964},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1652347378128},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1652347378668},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1652347378674},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1652347378081},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1652347378677},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1652347378942},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1652347378937},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1652347378943},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1652347378939},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1652347378956},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1652347378949},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1652347378952},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1652347378958},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1652347378959},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1652347378962},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1652347378875},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1652347378954},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1652347378947},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1652347378747},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1652347378545},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1652347378734},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1652347378072},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1652347378980},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1652347378986},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1652347378973},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1652347378627},{"_id":"themes/Fan/.DS_Store","hash":"559116ba736e1a7c72930d80bb335325cedd3b87","modified":1652347601614},{"_id":"themes/Fan/_config.yml","hash":"7ebe00e254bae4daf2d0ee145997e87563ad3b7e","modified":1652347601615},{"_id":"themes/Fan/README.md","hash":"f0d93ac736e54787e8ee58f900593b5bea740e94","modified":1652347601615},{"_id":"themes/Fan/languages/zh-Hans.yml","hash":"e78d91f2f87be26ccfbe0d2c7c49e0e190fa6f04","modified":1652347601616},{"_id":"themes/Fan/source/.DS_Store","hash":"03f880cf665d138fb75baab7801628c9f68b8fe9","modified":1652347601633},{"_id":"themes/Fan/scripts/merge.js","hash":"f6c6c3a03feb4ddc305d9d31159e2fbf03c70759","modified":1652347601632},{"_id":"themes/Fan/source/favicon.ico","hash":"7014dbb0e00397c7252ca30eb127f1b0cb4024ab","modified":1652347601681},{"_id":"themes/Fan/source/avatar.png","hash":"7014dbb0e00397c7252ca30eb127f1b0cb4024ab","modified":1652347601634},{"_id":"themes/Fan/layout/.DS_Store","hash":"c85af75fcd2314ec1ab5d89ca83d3f4acf25fd58","modified":1652347601617},{"_id":"themes/Fan/layout/archive.pug","hash":"6cd5df3581786018adbf548484e492b4ca6b81f7","modified":1652347601617},{"_id":"themes/Fan/layout/category.pug","hash":"508723d628fd978cb83d8968133ce3b8f300c912","modified":1652347601618},{"_id":"themes/Fan/layout/page.pug","hash":"503f166892176e3e0d13919d59f1320fffd06aef","modified":1652347601630},{"_id":"themes/Fan/layout/index.pug","hash":"9cef749bc41c9a9d2deb285cae3d78173dd1b728","modified":1652347601629},{"_id":"themes/Fan/layout/post.pug","hash":"b59303df411f4c83d60fd212e55f686454e11807","modified":1652347601631},{"_id":"themes/Fan/layout/tag.pug","hash":"08ef46f8f45ec212679e8869f10d6f37bda41bd4","modified":1652347601631},{"_id":"themes/Fan/source/css/.DS_Store","hash":"7e7384d1b14ac5d7635c8dd414be1ef17dc95918","modified":1652347601653},{"_id":"themes/Fan/source/css/const.styl","hash":"c73cb78f3e59d0db8fd575df3478c9f57b48ab08","modified":1652347601663},{"_id":"themes/Fan/source/css/fan.styl","hash":"4e7baafabb4d9b9921d67e98c089456882e86f89","modified":1652347601664},{"_id":"themes/Fan/source/images/top.svg","hash":"8e4c4e1962244b83d0e51b6c6ea7fcae4125c01f","modified":1652347601683},{"_id":"themes/Fan/source/images/avatar.png","hash":"a44601fac9a81dd7e392d05ea5ddc65c96b051df","modified":1652347601682},{"_id":"themes/Fan/source/js/canvas_bg.js","hash":"9ee2ddedb3a245e03f16a8b8520c3c60dd50791c","modified":1652347601684},{"_id":"themes/Fan/source/js/copy.js","hash":"ffb5913bae1cf74dcb2cc73085d964899e7c1e61","modified":1652347601686},{"_id":"themes/Fan/source/js/scroll.js","hash":"2d6c75890a8d0ddc00f392a34ec86c64e4fc45ee","modified":1652347601688},{"_id":"themes/Fan/source/js/.DS_Store","hash":"383d4614a97920b21f245e0b6a8f84b88159b7ba","modified":1652347601684},{"_id":"themes/Fan/source/images/ufo.svg","hash":"43a7dce93a36b70a9d689ef0c448d09790ce17f5","modified":1652347601683},{"_id":"themes/Fan/source/js/fan.js","hash":"66ed426fd5b84122e7055cef493a38aedbdc93e3","modified":1652347601686},{"_id":"themes/Fan/source/js/sidebar.js","hash":"1a1238907b3e4497a89ca1443952e7de99beb362","modified":1652347601689},{"_id":"themes/Fan/source/js/utils.js","hash":"6b94ed83ea245f79c6399d7e8edd756d95963279","modified":1652347601693},{"_id":"themes/Fan/layout/includes/.DS_Store","hash":"f85a53869324c79cc786612d3be40b0cd9e18dd2","modified":1652347601618},{"_id":"themes/Fan/layout/includes/additional-js.pug","hash":"eff2cd417926c1fbcf95771ab60422b284506741","modified":1652347601619},{"_id":"themes/Fan/layout/includes/footer.pug","hash":"3876f50a93964549a0192f6d983ab8f0ebd05227","modified":1652347601623},{"_id":"themes/Fan/layout/includes/head.pug","hash":"e81816c6345059019a76ed2509416ed472520f8a","modified":1652347601624},{"_id":"themes/Fan/layout/includes/header.pug","hash":"eb6b5be1e85f2070e0762c3262f56bcb01616af2","modified":1652347601625},{"_id":"themes/Fan/layout/includes/config.pug","hash":"f54ee03c2c29947d3ffb93a7dd6f81577b212766","modified":1652347601622},{"_id":"themes/Fan/layout/includes/recent-posts.pug","hash":"523b8798e9c38e19951d9461480cd09692815f66","modified":1652347601626},{"_id":"themes/Fan/layout/includes/layout.pug","hash":"5ecc8ec455655a51c94e9deb44b1c7bfec73e697","modified":1652347601625},{"_id":"themes/Fan/layout/includes/pagination.pug","hash":"75d05ae271efbdc42c0899fb5f7e9bf7e6858230","modified":1652347601626},{"_id":"themes/Fan/layout/includes/sidebar.pug","hash":"ae6f126c09e91f464b13526ad1b4bb0fee84ee10","modified":1652347601629},{"_id":"themes/Fan/source/css/_global/index.styl","hash":"271b6f07d9ffa35561ba3edbd16382666bf5fa35","modified":1652347601654},{"_id":"themes/Fan/source/css/_layout/_layout.styl","hash":"f7162d1d2a602301f17f861581a21fa41e1a72c0","modified":1652347601655},{"_id":"themes/Fan/source/css/_layout/footer.styl","hash":"a15c17f12af1c3d6f73eafe8303e3934ae452034","modified":1652347601655},{"_id":"themes/Fan/source/css/_layout/header.styl","hash":"5995e600030fe364c30dded4e0d31ae16318c0a0","modified":1652347601656},{"_id":"themes/Fan/source/css/_layout/pagination.styl","hash":"7ff3bbc6762e1ea57e5523c1532e50fdea9e7cf4","modified":1652347601657},{"_id":"themes/Fan/source/css/_layout/page.styl","hash":"71f079e06bd1b71d9b238f8179204084989b2e49","modified":1652347601657},{"_id":"themes/Fan/source/css/_layout/post.styl","hash":"a9046246b3fb036d3d2c1da791d8ab0f785edd31","modified":1652347601658},{"_id":"themes/Fan/source/css/_layout/sidebar.styl","hash":"ed713af39a0f6bdc37e0d21721d9e3b74db5eb42","modified":1652347601659},{"_id":"themes/Fan/source/css/_layout/recent_posts.styl","hash":"7e5db99c58b8a30660f9f0c59ace02734f3451bc","modified":1652347601659},{"_id":"themes/Fan/source/css/_comments/gitment.styl","hash":"573c609c9a0aa0247a02a46d74615a42ca294723","modified":1652347601653},{"_id":"themes/Fan/source/css/_layout/tag.styl","hash":"a5315e2e923e3d27052321877d7b349c80aeea66","modified":1652347601660},{"_id":"themes/Fan/source/css/_search/algolia.styl","hash":"edba0627757cceb477208606350bb1757f895454","modified":1652347601662},{"_id":"themes/Fan/source/css/min_screen_highlight/highlight.styl","hash":"b1dbc86ef8ca54452b2698b1ecdb1df259c158c8","modified":1652347601667},{"_id":"themes/Fan/source/css/_search/index.styl","hash":"c9f4f09d1924e509045dc812383b189ebaa8b2ad","modified":1652347601662},{"_id":"themes/Fan/source/css/highlight/diff.styl","hash":"eadcf0882a28301d3337ca17d682c55157ded1df","modified":1652347601665},{"_id":"themes/Fan/source/css/min_screen_highlight/theme.styl","hash":"5623f8bc4f655ffcf79e75878042344628f4a7f2","modified":1652347601668},{"_id":"themes/Fan/source/css/highlight/highlight.styl","hash":"e9b08ee0104a6516765e80faa0feff67ca24eb39","modified":1652347601665},{"_id":"themes/Fan/source/css/min_screen_layout/_layout.styl","hash":"eaa26fd3230db96f432063d085a92d5be8ba5a99","modified":1652347601669},{"_id":"themes/Fan/source/css/highlight/theme.styl","hash":"4e130c857790abfe8a8cc2cc1e94034a7641b7cf","modified":1652347601667},{"_id":"themes/Fan/source/css/min_screen_layout/page.styl","hash":"f06530d8778822986efeb6b79c0ecbd573ec8e6d","modified":1652347601672},{"_id":"themes/Fan/source/css/min_screen_layout/footer.styl","hash":"2385ec7961ffec95575072274323c3fc7ee6dcaf","modified":1652347601670},{"_id":"themes/Fan/source/css/min_screen_layout/pagination.styl","hash":"3671c5f4306442c57e8e7f8d84a055e2c4fd5887","modified":1652347601672},{"_id":"themes/Fan/source/css/min_screen_layout/header.styl","hash":"0a72967805f301e612db1b7949469d24966d5d36","modified":1652347601671},{"_id":"themes/Fan/source/css/min_screen_layout/recent_posts.styl","hash":"52a5729ecc09082242e956a88c0187cbefd6a360","modified":1652347601674},{"_id":"themes/Fan/source/css/min_screen_layout/sidebar.styl","hash":"509574887a06a7345a681301ac7e15bbef4b8c51","modified":1652347601674},{"_id":"themes/Fan/source/css/min_screen_layout/post.styl","hash":"8f45bd7fb2300aa04809caabf290e7306494753c","modified":1652347601673},{"_id":"themes/Fan/source/css/min_screen_layout/tag.styl","hash":"8b41b20fe666f4444ef152ef0c3f7be014f1127c","modified":1652347601675},{"_id":"themes/Fan/source/css/min_screen_search/index.styl","hash":"3c970d80c65607753175c65ea2c750197124bd1a","modified":1652347601676},{"_id":"themes/Fan/source/css/min_screen_search/algolia.styl","hash":"9d4e21ee89afe13a0a3aa8b867cb0977013b4fd2","modified":1652347601675},{"_id":"themes/Fan/source/css/thirdparty/reset.styl","hash":"3ab32c75344058f848ff5708efa4d681ca5c9cfa","modified":1652347601680},{"_id":"themes/Fan/source/css/thirdparty/fontawesome.styl","hash":"8c57895ce739b853eb53d86e9fd5b29e7b61ba48","modified":1652347601679},{"_id":"themes/Fan/source/css/thirdparty/jquery.mCustomScrollbar.min.css","hash":"fac9b521062feb5250c04d62128a8c3ddb312632","modified":1652347601680},{"_id":"themes/Fan/source/js/comments/gitment.js","hash":"1ebec7bbe9b7886b9b03a43794cd6e627148b25c","modified":1652347601685},{"_id":"themes/Fan/source/js/search/algolia.js","hash":"0daa85e86dfb17e2c44bb99316c9d4e021a2713e","modified":1652347601689},{"_id":"themes/Fan/source/js/mathjax/mathjax.js","hash":"fe64ddb40be2b8bc66acabfd7547163c88cc93d8","modified":1652347601687},{"_id":"themes/Fan/source/js/thirdparty/jquery.mCustomScrollbar.concat.min.js","hash":"e6ac207cdb6c4591f2d39f2a645f6dbf42534f89","modified":1652347601692},{"_id":"themes/Fan/source/js/thirdparty/velocity.min.js","hash":"15a9dc404e02f2cd9b46cc71293b65671976567b","modified":1652347601692},{"_id":"themes/Fan/layout/includes/comments/gitment.pug","hash":"258e6ffcd02b624d92dc9648e8c00d4d507b7ece","modified":1652347601620},{"_id":"themes/Fan/layout/includes/count/busuanzi.pug","hash":"4196c371cd9284da2f0b651fb5139c587c53e7fe","modified":1652347601623},{"_id":"themes/Fan/layout/includes/comments/index.pug","hash":"570df2d0401f1b6f185e0825232a9f68b0ab680d","modified":1652347601621},{"_id":"themes/Fan/layout/includes/comments/valine.pug","hash":"a4dec952c4ed7c5618771bf4ba51f7eb0ea21f92","modified":1652347601621},{"_id":"themes/Fan/layout/includes/search/index.pug","hash":"10b51e2baef8d99780add3ab99905a5c8a084cf0","modified":1652347601628},{"_id":"themes/Fan/layout/includes/search/algolia.pug","hash":"91be9f3fbd566e903d638204aa673c449bd87c17","modified":1652347601627},{"_id":"themes/Fan/source/css/thirdparty/fa-solid-900.woff","hash":"6d320e1a3820a7998051c4feec4dad22760e485e","modified":1652347601678},{"_id":"themes/Fan/source/js/thirdparty/jquery-3.3.1.min.js","hash":"0c3192b500a4fd550e483cf77a49806a5872185b","modified":1652347601691},{"_id":"themes/Fan/source/blog_demo.png","hash":"cb0d6552fb3f260be0551412580310fb5177b5ca","modified":1652347601651},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1652348520158},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_tag/tag.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1652348520189},{"_id":"node_modules/hexo-theme-fluid/.editorconfig","hash":"33218fbd623feb43edf5f99f15965392cecc44a6","modified":1652348519937},{"_id":"node_modules/hexo-theme-fluid/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1652348519971},{"_id":"node_modules/hexo-theme-fluid/.eslintrc","hash":"4bc2b19ce2b8c4d242f97d4ccf2d741e68ab0097","modified":1652348519970},{"_id":"node_modules/hexo-theme-fluid/LICENSE","hash":"26f9356fd6e84b5a88df6d9014378f41b65ba209","modified":1659346153315},{"_id":"node_modules/hexo-theme-fluid/README.md","hash":"6d752df6f2278033dc2512a7d5be22c8a8eb665a","modified":1659346153958},{"_id":"node_modules/hexo-theme-fluid/README_en.md","hash":"ca8fd19a4948de1f253616a62c0e8a7d81f692f5","modified":1652348520126},{"_id":"node_modules/hexo-theme-fluid/_config.yml","hash":"ebe26856c4cc286df3181136b5b391dd2e5f5ec7","modified":1659346155222},{"_id":"node_modules/hexo-theme-fluid/package.json","hash":"0bc354a01c5e6e9de43bf67456dc16c59d400139","modified":1659346153955},{"_id":"node_modules/hexo-theme-fluid/languages/de.yml","hash":"0e7d455d9e004ff15d8924b7a0c35cea25ee5b1d","modified":1659346155225},{"_id":"node_modules/hexo-theme-fluid/languages/eo.yml","hash":"a556251cc50a5680578c03f1efbf252b1f4ab860","modified":1659346155230},{"_id":"node_modules/hexo-theme-fluid/languages/en.yml","hash":"cb11b39f44ea069652c9647179606b6cecc98d50","modified":1659346155228},{"_id":"node_modules/hexo-theme-fluid/languages/zh-CN.yml","hash":"f96a22f989897ecddc69d5867a206e1cf6b8f610","modified":1659346155252},{"_id":"node_modules/hexo-theme-fluid/languages/ja.yml","hash":"3dd6d20f8d26585a7c154a8e59fe8d5d902f4c6a","modified":1659346155250},{"_id":"node_modules/hexo-theme-fluid/languages/zh-TW.yml","hash":"596d031dff3826ae8e4ffc8931fff28977b73247","modified":1659346155258},{"_id":"node_modules/hexo-theme-fluid/layout/404.ejs","hash":"9569c5c8f67d2783f372f671c57b93a00dc63c2f","modified":1659346153328},{"_id":"node_modules/hexo-theme-fluid/layout/archive.ejs","hash":"7c1f44005849791feae4abaa10fae4cb983d3277","modified":1659346153360},{"_id":"node_modules/hexo-theme-fluid/layout/about.ejs","hash":"163bee643e6a38912d3ae70923c83c48d57222e7","modified":1659346153331},{"_id":"node_modules/hexo-theme-fluid/layout/categories.ejs","hash":"13859726c27b6c79b5876ec174176d0f9c1ee164","modified":1659346153370},{"_id":"node_modules/hexo-theme-fluid/layout/index.ejs","hash":"b15d13877827e99e0ff783a6b13b13cca90bfe8c","modified":1659346153439},{"_id":"node_modules/hexo-theme-fluid/layout/category.ejs","hash":"f099161b738a16a32253f42085b5444f902018ed","modified":1659346153389},{"_id":"node_modules/hexo-theme-fluid/layout/layout.ejs","hash":"7e0023474128fbe4d68c467704c41f1712432415","modified":1659346153444},{"_id":"node_modules/hexo-theme-fluid/layout/links.ejs","hash":"1cac32ec4579aaf7b9fa39d317497331d4c5e1dd","modified":1659346153446},{"_id":"node_modules/hexo-theme-fluid/layout/page.ejs","hash":"ed5007a3feb8f14d3d2843271bfb298eb0c56219","modified":1659346153481},{"_id":"node_modules/hexo-theme-fluid/layout/post.ejs","hash":"505bcc06e55066b7cc5551d9ac0694e7713bfab5","modified":1659346153534},{"_id":"node_modules/hexo-theme-fluid/layout/tag.ejs","hash":"9d686364c4d16a1a9219471623af452035c5b966","modified":1659346153584},{"_id":"node_modules/hexo-theme-fluid/layout/tags.ejs","hash":"1d06af34b6cf1d8a20d2eb565e309326ceba309f","modified":1652348520039},{"_id":"node_modules/hexo-theme-fluid/.github/ISSUE_TEMPLATE/bug_report.md","hash":"16d33eb89ecf90f4046720fde5395d972c7ba1fd","modified":1652348520119},{"_id":"node_modules/hexo-theme-fluid/.github/ISSUE_TEMPLATE/bug_report_zh.md","hash":"af977ed0792508bb0766ea8afe82d34ef1e8fb3c","modified":1652348520117},{"_id":"node_modules/hexo-theme-fluid/.github/ISSUE_TEMPLATE/feature_request.md","hash":"c134dd57ffd269b93402ccfffe7dbe0f0b583bec","modified":1652348520121},{"_id":"node_modules/hexo-theme-fluid/.github/ISSUE_TEMPLATE/feature_request_zh.md","hash":"ed08574b196447376dd74411cca664ac9227a5d4","modified":1652348520120},{"_id":"node_modules/hexo-theme-fluid/.github/ISSUE_TEMPLATE/question.md","hash":"ab5eab9e3ff889c4ba7fd82846e7f5b7ae15bebc","modified":1652348520124},{"_id":"node_modules/hexo-theme-fluid/.github/ISSUE_TEMPLATE/question_zh.md","hash":"e24b470f7aa8044499a4f5e39634e5dc43899011","modified":1652348520122},{"_id":"node_modules/hexo-theme-fluid/.github/workflows/limit.yaml","hash":"f8bd2edeb4424ee7a055b31583445d5d5dff91a4","modified":1652348520193},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/archive-list.ejs","hash":"53a4f6029373a40394a87aba9284696a71610f90","modified":1652348519987},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/beian.ejs","hash":"58b4bbe36386de4305a8da5ffd7d56802df23049","modified":1652348519990},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/footer.ejs","hash":"a62278c38a310da495d96c39abacacef266945cb","modified":1652348520001},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/head.ejs","hash":"f7f3494ed001e8cdcdc3e8a1d2cd1195cff2ded5","modified":1652348520005},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/css.ejs","hash":"c363829a4b80f74fc1c565e41f6dab41c95006ea","modified":1652348519997},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/nav.ejs","hash":"e71b3c4aa263163597d31b1f91e5a1a877084cfd","modified":1652348520020},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/paginator.ejs","hash":"0f38a2c238169edcb63fc46c23bfc529ff3859b7","modified":1652348520025},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/post-meta.ejs","hash":"32a17edadeed40da6db21d2d8031bd47d2fc9bf4","modified":1652348520026},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/scripts.ejs","hash":"0ee838b6fcd895d21a29d9d67dbb99b752d623d1","modified":1652348520034},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/search.ejs","hash":"cdd7919fa01f6ef7ccc09938d662ff3d77f5d999","modified":1652348520036},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/statistics.ejs","hash":"920bc618d357d48d2b96f8758f6ae8f9488fc4d8","modified":1652348520038},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/toc.ejs","hash":"3d2fb5552f373e5a0c56bc356702d807bcbcb411","modified":1652348520040},{"_id":"node_modules/hexo-theme-fluid/scripts/events/index.js","hash":"79de5a379b28cad759a49048351c7f6b8915bd7d","modified":1659346153869},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/locals.js","hash":"58d0fec976f6b1d35e7ea03edc45414088acf05c","modified":1652348520094},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/post-filter.js","hash":"d516b9db63067f9ea9c72cc75ae4ff358417e77d","modified":1659346153929},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/export-config.js","hash":"47e6dba7652a621a54067413490a11c8a89e3d7b","modified":1659346153844},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/url.js","hash":"2a6a8288176d0e0f6ec008056bf2745a86e8943e","modified":1652348520108},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/page.js","hash":"4607607445233b3029ef20ed5e91de0da0a7f9c5","modified":1652348520099},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/utils.js","hash":"226f99b465ff513de075a8e78b321d6cb62592ca","modified":1659346153943},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/wordcount.js","hash":"b917b893b1777e6ffcb53188f9f5644510e5f20d","modified":1652348520112},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/pages.js","hash":"d9971f15fbb6b775e3d31a1b9b45011959395010","modified":1652348520101},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/local-search.js","hash":"fc2c50405b771b06b7f6cfc4e9de97b992691555","modified":1652348520090},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/button.js","hash":"3eb43a8cdea0a64576ad6b31b4df6c2bf5698d4c","modified":1652348520060},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/checkbox.js","hash":"4938610c3543a921a341bc074626d511cb1a4b45","modified":1659346153799},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/group-image.js","hash":"4aeebb797026f1df25646a5d69f7fde79b1bcd26","modified":1652348520078},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/label.js","hash":"f05a6d32cca79535b22907dc03edb9d3fa2d8176","modified":1652348520084},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/compare-versions.js","hash":"dbbc928c914fc2bd242cd66aa0c45971aec13a5d","modified":1652348520068},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/object.js","hash":"33b57e4decdc5e75c518859f168c8ba80b2c665b","modified":1659346153910},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/url-join.js","hash":"718aab5e7b2059a06b093ca738de420d9afa44ba","modified":1652348520107},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/mermaid.js","hash":"75160561e1ef3603b6d2ad2938464ab1cb77fd38","modified":1652348520097},{"_id":"node_modules/hexo-theme-fluid/source/css/main.styl","hash":"855ae5fe229c51afa57f7645f6997a27a705d7e4","modified":1659346155167},{"_id":"node_modules/hexo-theme-fluid/source/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1652348519978},{"_id":"node_modules/hexo-theme-fluid/source/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1652348520131},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/note.js","hash":"f52f3a005b41f48b4da274ac64710177c8d4502f","modified":1652348520098},{"_id":"node_modules/hexo-theme-fluid/source/img/favicon.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1652348520138},{"_id":"node_modules/hexo-theme-fluid/source/img/default.png","hash":"167a12978d80371cf578c8a2e45c24a2eb25b6fb","modified":1659346155089},{"_id":"node_modules/hexo-theme-fluid/source/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1652348520056},{"_id":"node_modules/hexo-theme-fluid/source/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1652348520140},{"_id":"node_modules/hexo-theme-fluid/source/js/boot.js","hash":"2848f8eb5081a7f0550fbd76dc06d3ff877f1913","modified":1659346153789},{"_id":"node_modules/hexo-theme-fluid/source/js/color-schema.js","hash":"ba63f7c3324bc1fdd050a90add9d8faaffc27e07","modified":1659346153807},{"_id":"node_modules/hexo-theme-fluid/source/js/events.js","hash":"f05a569a9fd6da2fda69a2cf8e276ba81580faf3","modified":1659346153838},{"_id":"node_modules/hexo-theme-fluid/source/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1652348520082},{"_id":"node_modules/hexo-theme-fluid/source/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1659346153883},{"_id":"node_modules/hexo-theme-fluid/source/js/local-search.js","hash":"cebcda5991b6a9ab9307c69542389ce9013f04f7","modified":1659346153894},{"_id":"node_modules/hexo-theme-fluid/source/js/plugins.js","hash":"2333494add51e5e1374602a4e81f0be36a05d4c2","modified":1659346153926},{"_id":"node_modules/hexo-theme-fluid/source/js/utils.js","hash":"45cc86f099db0a2c36ad49711ce66c2d598a2ab1","modified":1659346153947},{"_id":"node_modules/hexo-theme-fluid/source/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1652348520191},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/comments/changyan.ejs","hash":"c9b2d68ed3d375f1953e7007307d2a3f75ed6249","modified":1652348519994},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/comments/cusdis.ejs","hash":"5f9dc012be27040bbe874d0c093c0d53958cc987","modified":1652348519998},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/comments/disqus.ejs","hash":"aab4a4d24c55231a37db308ae94414319cecdd9b","modified":1652348519999},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/comments/gitalk.ejs","hash":"843bc141a4545eb20d1c92fb63c85d459b4271ec","modified":1652348520002},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/comments/livere.ejs","hash":"2264758fed57542a7389c7aa9f00f1aefa17eb87","modified":1652348520014},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/comments/remark42.ejs","hash":"d4e9532feeb02aed61bd15eda536b5b631454dac","modified":1652348520032},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/comments/twikoo.ejs","hash":"1af53bc0be642610a3a4d4e7c05287854a821508","modified":1652348520042},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/comments/utterances.ejs","hash":"e1ed6530dfd7310f91060a75766a93ac3c39be3a","modified":1652348520044},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/comments/valine.ejs","hash":"4052ab2a8f78efa92f0fe17abe8f66135943390a","modified":1652348520045},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/comments/waline.ejs","hash":"21e00443054802e893aac1f668b69d5bb4b39b3a","modified":1652348520048},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/plugins/analytics.ejs","hash":"557077a8825fffc0a2c7fe2b29f319287950244f","modified":1652348519985},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/plugins/math.ejs","hash":"df6941bd3b860180d01fd39ee859ed2d42f4d1f0","modified":1652348520017},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/plugins/mermaid.ejs","hash":"10ed1f9a611449d37736e17c4e251127b38b3772","modified":1652348520018},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/plugins/nprogress.ejs","hash":"4c2d39ce816b8a6dcd6b53113c8695f8bd650a23","modified":1652348520021},{"_id":"node_modules/hexo-theme-fluid/layout/_partial/plugins/typed.ejs","hash":"e8e01c5db46b383748855452aecd70fcda99f598","modified":1652348520043},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/compatible-configs.js","hash":"ef474d1fa5bbafc52619ced0f9dc7eaf2affb363","modified":1659346153817},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/hello.js","hash":"44c5eb97b98813a07c659d6afedd17fad63b1821","modified":1659346153852},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/footnote.js","hash":"2ec2ae03c79bb1ae7ac3fcf7e00fb52d1af2898d","modified":1659346153846},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/lazyload.js","hash":"9ba0d4bc224e22af8a5a48d6ff13e5a0fcfee2a4","modified":1652348520085},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/merge-configs.js","hash":"7c944c43b2ece5dd84859bd9d1fe955d13427387","modified":1659346153900},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/highlight.js","hash":"0f02df2244e275595e72163498d42f42bcf0de5e","modified":1659346153863},{"_id":"node_modules/hexo-theme-fluid/source/css/_functions/base.styl","hash":"2e46f3f4e2c9fe34c1ff1c598738fc7349ae8188","modified":1652348520149},{"_id":"node_modules/hexo-theme-fluid/source/css/_mixins/base.styl","hash":"542e306ee9494e8a78e44d6d7d409605d94caeb3","modified":1652348520150},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/pages.styl","hash":"b8e887bc7fb3b765a1f8ec9448eff8603a41984f","modified":1652348520175},{"_id":"node_modules/hexo-theme-fluid/source/css/_variables/base.styl","hash":"4ed5f0ae105ef4c7dd92eaf652ceda176c38e502","modified":1659346155122},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_archive/archive.styl","hash":"c475e6681546d30350eaed11f23081ecae80c375","modified":1659346155109},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_about/about.styl","hash":"97fe42516ea531fdad771489b68aa8b2a7f6ae46","modified":1652348520142},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/base.styl","hash":"643284c567665f96915f0b64e59934dda315f74d","modified":1659346155118},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/color-schema.styl","hash":"61279540c2623ea4bf93e40613d41380839b92d3","modified":1659346155136},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/inline.styl","hash":"411a3fa3f924a87e00ff04d18b5c83283b049a4d","modified":1659346155160},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/keyframes.styl","hash":"94065ea50f5bef7566d184f2422f6ac20866ba22","modified":1652348520170},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/rewrite.styl","hash":"a2993f23701de9a83e3f428300e62c5c52b4ff4b","modified":1652348520183},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/categories.styl","hash":"1ab7db37c2f7dc7ccdb994dcb41c16a4c8920397","modified":1652348520158},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_index/index.styl","hash":"0acbd71633bcc7191672ea4e1b2277bea350d73b","modified":1659346155159},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_links/links.styl","hash":"5c7f2044e3f1da05a3229537c06bd879836f8d6e","modified":1659346155166},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/post.styl","hash":"5e86487de0f16c30ca3e16460ab94b57620e31c5","modified":1652348520177},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_tag/tags.styl","hash":"65bfc01c76abc927fa1a23bf2422892b0d566c3f","modified":1652348520189},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/tag_plugin.styl","hash":"b89b96c8a6a433a6f372b42710554b05cab85a24","modified":1652348520187},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/banner.styl","hash":"7a0bd629bc234fc75e3cc8e3715ffada92f09e73","modified":1659346155110},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/copy-btn.styl","hash":"9f932ca3f9625c13aa5353f58319881e62c0c653","modified":1652348520162},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/board.styl","hash":"4397037fc3f0033dbe546c33cd9dbdabd8cb1632","modified":1659346155125},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/footer.styl","hash":"2caaca71dd1ff63d583099ed817677dd267b457e","modified":1659346155146},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/footnote.styl","hash":"ae9289cc89649af2042907f8a003303b987f3404","modified":1652348520164},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/header.styl","hash":"896179810e1ee986208ae2d57a44719f6b839bde","modified":1659346155150},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/qrcode.styl","hash":"78704a94c0436097abfb0e0a57abeb3429c749b7","modified":1652348520179},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/scroll-btn.styl","hash":"f0e429a27fa8a7658fcbddbb4d4dbe4afa12499a","modified":1659346155199},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/search.styl","hash":"10f7e91a91e681fb9fe46f9df7707b9ef78707c8","modified":1652348520185},{"_id":"source/about/index.md","hash":"bc94d0abe5b47f762890476d26eb2afb1fd76ccd","modified":1652349235363},{"_id":"source/images/about/default.jpg","hash":"f9aa2b4faf3fb903804d7999dc727c4dfb2d9d80","modified":1652349327884},{"_id":"source/_images/about/default.jpg","hash":"f9aa2b4faf3fb903804d7999dc727c4dfb2d9d80","modified":1652349327884},{"_id":"source/images/about/WeChatQRCode.jpg","hash":"77c5ae4ce5f54a2944afd24ada655a3baed321dc","modified":1652407044936},{"_id":"source/_posts/FrequentlyUsedWebsites.md","hash":"41c71f9689ef45f80a549e15d078ba96429a9144","modified":1652425544684},{"_id":"source/_posts/selenium-waits-for-the-page-to-load.md","hash":"33e69efb087e2afdecb4270777ed35b1f830081c","modified":1660636674308},{"_id":"source/_posts/song-list.md","hash":"f3bab3dfeca35a89c3e7d45dcb3776626685de2f","modified":1660636845237},{"_id":"public/local-search.xml","hash":"686e4da883f04a2a5764e438b1c6e1a48ba8162b","modified":1655521536833},{"_id":"public/about/index.html","hash":"07a584601799a1e229f55dd68094544e827744db","modified":1655521536833},{"_id":"public/2022/06/17/song-list/index.html","hash":"98e749aed21431f8d86cdaa0374d7af62a652223","modified":1655521536833},{"_id":"public/2022/05/12/hello-world/index.html","hash":"e80cd1c184e55b00e8bb28f8a11fbbb8984ea7da","modified":1655521536833},{"_id":"public/categories/其他/index.html","hash":"45f2fe245407631f235ec17eeaa41d54bb98fa02","modified":1655521536833},{"_id":"public/categories/开发/index.html","hash":"4390936b5c0b025e970a2f1b4ed9266f14306bb1","modified":1655521536833},{"_id":"public/categories/开发/技巧/index.html","hash":"7e200e44ad5d95f9aeb55eb5cc0ba623ace2f279","modified":1655521536833},{"_id":"public/archives/index.html","hash":"632ea93052836b0d74e07b8c8cc5bb78e5d86fe1","modified":1655521536833},{"_id":"public/archives/2022/index.html","hash":"bcb4fc95d0a161761deddd3cd5d9588526e6e4df","modified":1655521536833},{"_id":"public/archives/2022/05/index.html","hash":"51f4f4ae9cfcc0212685779eb95106060698ed9f","modified":1655521536833},{"_id":"public/archives/2022/06/index.html","hash":"efd5246c9ed6dca67008005b82dd16bb82867c37","modified":1655521536833},{"_id":"public/index.html","hash":"e2adc4387d613faa2a01aee8ee0da827c4ee4564","modified":1655521536833},{"_id":"public/tags/网易云/index.html","hash":"2194c1bcb0b8d7fbd7d236efb1bcc3fd169114fe","modified":1655521536833},{"_id":"public/tags/selenium/index.html","hash":"2e1b3a24a2f06268835c5309772ccc34a522b68c","modified":1655521536833},{"_id":"public/tags/爬虫/index.html","hash":"ea717ba2483deaa9af444b493f65179acef65257","modified":1655521536833},{"_id":"public/404.html","hash":"b345dfc8f5aefbbd34c723cdd5f5ed0db4a0eca2","modified":1655521536833},{"_id":"public/tags/index.html","hash":"469ed048759ad81002131041324ee55515de5005","modified":1655521536833},{"_id":"public/categories/index.html","hash":"b486fd804eae8cf267abe786646f7c78938cacf7","modified":1655521536833},{"_id":"public/2022/06/17/selenium-waits-for-the-page-to-load/index.html","hash":"3139c7733caaf730690022b208ecafd445240c26","modified":1655521536833},{"_id":"public/links/index.html","hash":"a3728d684d9c7c88f65f7f8e78dd8d7c8746e214","modified":1655521536833},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1655521536833},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1655521536833},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1655521536833},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1655521536833},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1655521536833},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1655521536833},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1655521536833},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1655521536833},{"_id":"public/img/favicon.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1655521536833},{"_id":"public/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1655521536833},{"_id":"public/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1655521536833},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1655521536833},{"_id":"public/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1655521536833},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1655521536833},{"_id":"public/images/about/WeChatQRCode.jpg","hash":"77c5ae4ce5f54a2944afd24ada655a3baed321dc","modified":1655521536833},{"_id":"public/img/default.png","hash":"7bb2b8ee07db305bcadee2985b81b942027ae940","modified":1655521536833},{"_id":"public/images/about/default.jpg","hash":"f9aa2b4faf3fb903804d7999dc727c4dfb2d9d80","modified":1655521536833},{"_id":"public/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1655521536833},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1655521536833},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1655521536833},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1655521536833},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1655521536833},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1655521536833},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1655521536833},{"_id":"public/js/boot.js","hash":"3de344ee619da989f6dccf7c2ae459fe91075983","modified":1655521536833},{"_id":"public/js/color-schema.js","hash":"f1fdd512f3ef92ff5db4a49f5a3143d5ddea9858","modified":1655521536833},{"_id":"public/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1655521536833},{"_id":"public/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1655521536833},{"_id":"public/js/local-search.js","hash":"633f0142c657805359b0197f287e12ae4bcde731","modified":1655521536833},{"_id":"public/js/leancloud.js","hash":"53987b7a668ea0623370eb83ed5311766221b557","modified":1655521536833},{"_id":"public/js/plugins.js","hash":"d058f30bd09b28769c4d8313428ff23dfc8d52dd","modified":1655521536833},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1655521536833},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1655521536833},{"_id":"public/css/style.css","hash":"d4cfa90089c78a8b791252afae9fafa3b5658900","modified":1655521536833},{"_id":"public/css/main.css","hash":"63bc59b8ca4b03afa2b93883143c349d461b1052","modified":1655521536833},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1655521536833},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1655521536833},{"_id":"public/js/utils.js","hash":"4a43f2700e91937650bef511fd438825b001c4c6","modified":1655521536833},{"_id":"public/js/events.js","hash":"4b9d2676c9544db9cc40a8c7d18456792299ba86","modified":1655521536833},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1655521536833},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1655521536833},{"_id":"source/_posts/Use-Primevue-Steps-component-vue3.md","hash":"94b4efe49a17b01eec21bf2798e45849eb51b782","modified":1659410777137},{"_id":"source/images/post/Use-Primevue-Steps-component-vue3/1.gif","hash":"e94b991fcce41bb8eae8c861b8903465bd788c7e","modified":1659325930250},{"_id":"source/images/post/Use-Primevue-Steps-component-vue3/3.png","hash":"e847be54f496383149f8d21196e3305a980620f5","modified":1659334418321},{"_id":"source/images/post/Use-Primevue-Steps-component-vue3/4.png","hash":"00b31780fafea42a04fdd670522fe16865076576","modified":1659334787669},{"_id":"source/images/post/Use-Primevue-Steps-component-vue3/2.jpg","hash":"c846afd477f2c1ed2480e4139d06310beedcbc79","modified":1659330807860},{"_id":"source/images/post/Use-Primevue-Steps-component-vue3/5.gif","hash":"355fc10a990461adb318be28adc371faf281c3ba","modified":1659338216789},{"_id":"node_modules/hexo-theme-fluid/languages/es.yml","hash":"7112594259c88c04714be152af7fd377687dad40","modified":1659346155248},{"_id":"node_modules/hexo-theme-fluid/languages/zh-HK.yml","hash":"80ed400a7adaa92ea54fc7f5d534c9af795bed00","modified":1659346155255},{"_id":"node_modules/hexo-theme-fluid/layout/.DS_Store","hash":"e2295dbe42d85b294e6f3aeefaf3623bd31759ed","modified":1659346153102},{"_id":"node_modules/hexo-theme-fluid/scripts/.DS_Store","hash":"daec53fd4601c37ca272321ba2eb594d9b0a43ac","modified":1659346153282},{"_id":"node_modules/hexo-theme-fluid/source/.DS_Store","hash":"e11e97632e6d13d5b9dccadcc514268f3c039508","modified":1659346153301},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/archive-list.ejs","hash":"7520fbf91f762207c2ab06b2c293235cd5b23905","modified":1659346153355},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/category-chains.ejs","hash":"18309584aab83bc4deb20723ebad832149dd2e24","modified":1659346153382},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/category-list.ejs","hash":"a591fedbc5759fb00152304f9ea486dfba3a246a","modified":1659346153385},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments.ejs","hash":"24ef242aa01e5f5bc397cf3f83ae48b1e8353dab","modified":1659346153397},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/css.ejs","hash":"85f6e051550907681ab4ed2e268ac8f6e9ebf931","modified":1659346153403},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer.ejs","hash":"10ccfb8eef4e16182183c9a3e175c90d5b6397d3","modified":1659346153419},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/head.ejs","hash":"776949aa697dffd54e9b1957d9245028879509a3","modified":1659346153432},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header.ejs","hash":"0d5e397d30051e5fbabe7b47cfd1f1e6a5820af1","modified":1659346153434},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/markdown-plugins.ejs","hash":"fc4bdf7de0cf1a66d0e5e4fba1b31d6f7ed49468","modified":1659346153450},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/paginator.ejs","hash":"0f38a2c238169edcb63fc46c23bfc529ff3859b7","modified":1659346153531},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/scripts.ejs","hash":"da5810785105e5075861593c7ac22c7aa9665a72","modified":1659346153568},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/search.ejs","hash":"70e1c929e084ca8a2648cedabf29b372511ea2b8","modified":1659346153571},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/default-injects.js","hash":"b2013ae8e189cd07ebc8a2ff48a78e153345210f","modified":1659346153832},{"_id":"node_modules/hexo-theme-fluid/scripts/events/.DS_Store","hash":"80308812974d7cb7e001cd8f64ff9fced30ff139","modified":1659346153295},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/date.js","hash":"9bda6382f61b40a20c24af466fe10c8366ebb74c","modified":1659346153824},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/engine.js","hash":"d3a231d106795ce99cb0bc77eb65f9ae44515933","modified":1659346153834},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/import.js","hash":"ca53e8dbf7d44cfd372cfa79ac60f35a7d5b0076","modified":1659346153867},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/injects.js","hash":"1ad2ae6b11bd8806ee7dd6eb7140d8b54a95d613","modified":1659346153876},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/scope.js","hash":"43620b0944ffb67ea1fa6cc838f65a7351222eb0","modified":1659346153934},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1659346153298},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/resolve.js","hash":"8c4a8b62aa8608f12f1e9046231dff04859dc3e9","modified":1659346153932},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight-dark.styl","hash":"45695ef75c31a4aa57324dd408b7e2327a337018","modified":1659346155152},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight.styl","hash":"a9efc52a646a9e585439c768557e3e3c9e3326dc","modified":1659346155156},{"_id":"node_modules/hexo-theme-fluid/source/img/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1659346153305},{"_id":"node_modules/hexo-theme-fluid/source/img/fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1659346155094},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/changyan.ejs","hash":"c9b2d68ed3d375f1953e7007307d2a3f75ed6249","modified":1659346153393},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/cusdis.ejs","hash":"5f9dc012be27040bbe874d0c093c0d53958cc987","modified":1659346153406},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/disqus.ejs","hash":"aab4a4d24c55231a37db308ae94414319cecdd9b","modified":1659346153411},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/giscus.ejs","hash":"95f8b866b158eff9352c381c243b332a155a5110","modified":1659346153423},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/gitalk.ejs","hash":"843bc141a4545eb20d1c92fb63c85d459b4271ec","modified":1659346153427},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/livere.ejs","hash":"2264758fed57542a7389c7aa9f00f1aefa17eb87","modified":1659346153447},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/remark42.ejs","hash":"d4e9532feeb02aed61bd15eda536b5b631454dac","modified":1659346153560},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/twikoo.ejs","hash":"e6820fb7f13662c42f8433ec95404238f4c1860c","modified":1659346153594},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/utterances.ejs","hash":"c7ccf7f28308334a6da6f5425b141a24b5eca0e2","modified":1659346153600},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/valine.ejs","hash":"19ba937553dddd317f827d682661a1066a7b1f30","modified":1659346153602},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/waline.ejs","hash":"12727da7cf3ac83443270f550be4d1c06135b52b","modified":1659346153608},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer/beian.ejs","hash":"4fb9b5dd3f3e41a586d6af44e5069afe7c81fff2","modified":1659346153367},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer/statistics.ejs","hash":"454d8dd4c39f9494ebeb03ca0746f5bc122af76a","modified":1659346153581},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header/banner.ejs","hash":"e07757b59e7b89eea213d0e595cb5932f812fd32","modified":1659346153364},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header/navigation.ejs","hash":"38990ed9dbccd88342ee4b4cb5e60818e9eb8e8a","modified":1659346153477},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/analytics.ejs","hash":"1327395a4dde1ea06c476b047fb110bcd269149f","modified":1659346153334},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/anchorjs.ejs","hash":"953552425f0b86c98d1026fdb04e716fdff356e7","modified":1659346153351},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/encrypt.ejs","hash":"cbcf6905f4990a22895a848e29dd4c05592a9043","modified":1659346153413},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/fancybox.ejs","hash":"9d1ea2a46b8c8ad8c168594d578f40764818ef13","modified":1659346153415},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/code-widget.ejs","hash":"3a505cba37942badf62a56bbb8b605b72af330aa","modified":1659346153395},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/highlight.ejs","hash":"7529dd215b09d3557804333942377b9e20fa554e","modified":1659346153435},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/math.ejs","hash":"94c1ce6e312932e876886ba24b082ae34515a038","modified":1659346153452},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/mermaid.ejs","hash":"3b3b0be9f7624ff72fbb2da6ae3663adcfb7d118","modified":1659346153453},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/nprogress.ejs","hash":"4c2d39ce816b8a6dcd6b53113c8695f8bd650a23","modified":1659346153479},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/typed.ejs","hash":"51faef29f8e464bcb2e73049b428b88c8dd8b40a","modified":1659346153597},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/copyright.ejs","hash":"e74fb49526ddb14fee2c6360a560d17f57262ef7","modified":1659346153400},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/category-bar.ejs","hash":"88420e83c0968f7da69aa423f42d3033891c9229","modified":1659346153379},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/meta-bottom.ejs","hash":"7079b27a7bc15a7dfa9209f6be6051bdec49ebad","modified":1659346153456},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/meta-top.ejs","hash":"ce6e9f578f4faa45840abddf8f46af3f4b69c177","modified":1659346153461},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/sidebar-left.ejs","hash":"9992c99b3eb728ad195970e1b84d665f2c8691c4","modified":1659346153573},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/sidebar-right.ejs","hash":"d5fcc9b60e02f869a29a8c17a16a6028ecc1e6d8","modified":1659346153577},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/toc.ejs","hash":"91a1de823492d9225f9daa3ef59efbca345456a0","modified":1659346153590},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/injects.js","hash":"5ae4b07204683e54b5a1b74e931702bbce2ac23e","modified":1659346153872},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-bar.styl","hash":"99e8e25e84d513b869a17140f63a5c1e48a0e7e1","modified":1659346155128},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-chain.styl","hash":"0cdf7ef50dfd0669d3b257821384ff31cd81b7c9","modified":1659346155129},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-list.styl","hash":"7edfe1b571ecca7d08f5f4dbcf76f4ffdcfbf0b5","modified":1659346155132},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/comment.styl","hash":"780f3788e7357bcd3f3262d781cb91bb53976a93","modified":1659346155140},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/highlight.styl","hash":"7054d79c9d5966fc57baf0adcdf3b19275987b62","modified":1659346155155},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/markdown.styl","hash":"1e3d3a82721e7c10bcfcecec6d81cf2979039452","modified":1659346155172},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/post-page.styl","hash":"127bb5391370afe7fef2a297084d76406bc5e902","modified":1659346155189},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/post-tag.styl","hash":"27f70062415ccf66a9b6f4952db124fc1471fda5","modified":1659346155191},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/anchorjs.styl","hash":"e0cebda4a6f499aff75e71417d88caa7ceb13b94","modified":1659346155106},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/code-widget.styl","hash":"b66ab013f0f37d724a149b85b3c7432afcf460ad","modified":1659346155134},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/copyright.styl","hash":"26f71a9cd60d96bb0cb5bbdf58150b8e524d9707","modified":1659346155144},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/modal.styl","hash":"adf6c1e5c8e1fb41c77ce6e2258001df61245aa2","modified":1659346155174},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/noscript.styl","hash":"0cf2f2bb44f456150d428016675d5876a9d2e2aa","modified":1659346155178},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/pagination.styl","hash":"8bb1b68e5f3552cb48c2ffa31edbc53646a8fb4c","modified":1659346155182},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/toc.styl","hash":"9e7452aa2372153f25d7a4675c9d36d281a65d24","modified":1659346155209},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/ngrogress.styl","hash":"5d225357b4a58d46118e6616377168336ed44cb2","modified":1659346155176},{"_id":"source/images/post/primevue-cover.png","hash":"4554a6954909a0288fd037364e3154a023a0fa5e","modified":1659347657237},{"_id":"source/images/post/selenium-cover.jpg","hash":"af78cfa35c019352b94e769c5545f5fe99354dea","modified":1659348025585},{"_id":"source/images/post/music-cover.jpg","hash":"4c183e74c32aa381c33802a9d82c7253fcccb5d9","modified":1659348353613},{"_id":"source/images/post/logo.jpg","hash":"7e819ffe330b9ec546fb4bab18a1d22441ad4a66","modified":1659348994083},{"_id":"source/_posts/docker-container-etc-hosts-file-reset-bug.md","hash":"a49ce82c02220e6bf99994f94f513a2f21966d46","modified":1660646125921},{"_id":"source/images/post/bug-diary-cover.png","hash":"8abcb0b433591e0d613ce861a7f1b45f15c2db25","modified":1660637556530},{"_id":"source/images/post/docker-container-etc-hosts-file-reset-bug/02.png","hash":"a06ef830e54bb74cd374d7aa2b73fca51becdd2d","modified":1660643291936},{"_id":"source/images/post/docker-container-etc-hosts-file-reset-bug/01.png","hash":"66d67a986292dec0d30c861cd2690bde5b70ab54","modified":1660640731922},{"_id":"source/_posts/VMwareESXi-Thin-Provisioned-ExcessBugs.md","hash":"448e0d4010e4676e742fae07a34633ca82bd5a90","modified":1665196980488},{"_id":"source/_posts/docker-engine-install.md","hash":"407e30e9a2d77a3207f4187aed591a91cc92a424","modified":1667017428557},{"_id":"source/_posts/搭建私有pypi.md","hash":"ecd1da78ab154bca85d9747cbd1b983922c5ea53","modified":1667017145945},{"_id":"source/images/post/ce25d5b1573d11ed95612cfda1215af5.png","hash":"f449b238099e07cf5e59bcc5ca17233b05040fd9","modified":1667015916238},{"_id":"source/images/post/docker-cover.png","hash":"7cd5d1dd44f0e0012e41f83e147bd6a917262633","modified":1667017400296},{"_id":"source/images/post/pypi-cover.png","hash":"ac56558b9db151b5a3fcf753f6d61f18024da4da","modified":1667017122321}],"Category":[{"name":"常用网站","_id":"cl34139b90001rcuc3v3c0xp0"},{"name":"其他","_id":"cl4i94ysv000330ucdfh751oq"},{"name":"歌单","parent":"cl4i94ysv000330ucdfh751oq","_id":"cl4i94ysv000430uchyr898qo"},{"name":"开发","_id":"cl4i9bdr0000c30uc37w78sn8"},{"name":"技巧","parent":"cl4i9bdr0000c30uc37w78sn8","_id":"cl4i9bdr0000d30uc7rnp1e68"},{"name":"前端","_id":"cl6a4veyg0001dcuchsmfcmgt"},{"name":"PrimeVue框架","parent":"cl6a4veyg0001dcuchsmfcmgt","_id":"cl6a4veyl0004dcuc4ne9emvz"},{"name":"前端","parent":"cl4i9bdr0000c30uc37w78sn8","_id":"cl6a5ea4p0000hwuc4i56bqlc"},{"name":"PrimeVue框架","parent":"cl6a5ea4p0000hwuc4i56bqlc","_id":"cl6a5ea4r0001hwuc6iudauh0"},{"name":"爬虫","parent":"cl4i9bdr0000c30uc37w78sn8","_id":"cl6vw8gnr0000uouccwjagptd"},{"name":"Bug日记","_id":"cl6vxs6yy00012sucf9ih51jd"},{"name":"Docker","parent":"cl4i9bdr0000c30uc37w78sn8","_id":"cl8zdtq960003h4uc51nrbc75"},{"name":"建设","_id":"cl9tdr23e0001a8ucayec86d1"}],"Data":[],"Page":[{"title":"关于我","date":"2022-05-12T09:53:19.000Z","layout":"about","_content":"","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2022-05-12 17:53:19\nlayout: about\n---\n","updated":"2022-05-12T09:53:55.363Z","path":"about/index.html","_id":"cl32tumwe0000fouc6ocj7af8","comments":1,"content":"","site":{"data":{}},"wordcount":0,"excerpt":"","more":""}],"Post":[{"title":"Hello World","_content":"\n# 🚩 我的博客/知识库诞生了","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\n\n# 🚩 我的博客/知识库诞生了","slug":"hello-world","published":1,"date":"2022-05-12T09:23:51.423Z","updated":"2022-05-13T01:53:06.007Z","_id":"cl32t2v2v00007cuchk9l4gys","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"🚩-我的博客-x2F-知识库诞生了\"><a href=\"#🚩-我的博客-x2F-知识库诞生了\" class=\"headerlink\" title=\"🚩 我的博客&#x2F;知识库诞生了\"></a>🚩 我的博客&#x2F;知识库诞生了</h1>","site":{"data":{}},"wordcount":18,"excerpt":"","more":"<h1 id=\"🚩-我的博客-x2F-知识库诞生了\"><a href=\"#🚩-我的博客-x2F-知识库诞生了\" class=\"headerlink\" title=\"🚩 我的博客&#x2F;知识库诞生了\"></a>🚩 我的博客&#x2F;知识库诞生了</h1>"},{"title":"个人歌单","index_img":"/images/post/music-cover.jpg","date":"2022-06-17T09:29:47.000Z","_content":"\n<div style=\"display:flex; flex-direction:row; flex-wrap:wrap; justify-content:center;\">\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=29753364&auto=1&height=66\"></iframe>\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=1501126567&auto=1&height=66\"></iframe>\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=1901838921&auto=1&height=66\"></iframe>\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=298250&auto=1&height=66\"></iframe>\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=1460946254&auto=1&height=66\"></iframe>\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=31421001&auto=1&height=66\"></iframe>\n\n</div>","source":"_posts/song-list.md","raw":"---\ntitle: 个人歌单\nindex_img: /images/post/music-cover.jpg\ndate: 2022-06-17 17:29:47\ncategories:\n- 其他\ntags: \n- 网易云\n---\n\n<div style=\"display:flex; flex-direction:row; flex-wrap:wrap; justify-content:center;\">\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=29753364&auto=1&height=66\"></iframe>\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=1501126567&auto=1&height=66\"></iframe>\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=1901838921&auto=1&height=66\"></iframe>\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=298250&auto=1&height=66\"></iframe>\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=1460946254&auto=1&height=66\"></iframe>\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=31421001&auto=1&height=66\"></iframe>\n\n</div>","slug":"song-list","published":1,"updated":"2022-08-16T08:00:45.237Z","_id":"cl4i928gt000030ucewgs01w0","comments":1,"layout":"post","photos":[],"link":"","content":"<div style=\"display:flex; flex-direction:row; flex-wrap:wrap; justify-content:center;\">\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=29753364&auto=1&height=66\"></iframe>\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=1501126567&auto=1&height=66\"></iframe>\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=1901838921&auto=1&height=66\"></iframe>\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=298250&auto=1&height=66\"></iframe>\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=1460946254&auto=1&height=66\"></iframe>\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=31421001&auto=1&height=66\"></iframe>\n\n</div>","site":{"data":{}},"wordcount":0,"excerpt":"","more":"<div style=\"display:flex; flex-direction:row; flex-wrap:wrap; justify-content:center;\">\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=29753364&auto=1&height=66\"></iframe>\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=1501126567&auto=1&height=66\"></iframe>\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=1901838921&auto=1&height=66\"></iframe>\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=298250&auto=1&height=66\"></iframe>\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=1460946254&auto=1&height=66\"></iframe>\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=31421001&auto=1&height=66\"></iframe>\n\n</div>"},{"title":"selenium -- 等待网页加载完成","index_img":"/images/post/selenium-cover.jpg","date":"2022-06-17T09:35:12.000Z","_content":"\n\n# selenium -- 等待网页加载完成\n\n使用elenium做项目时候通常需要等待网页完全加载后再执行某些操作\n\n例如需要爬取一个动态表格的数据，需要等待JS完全加载后从后端拿到数据渲染\n\n> 环境:\n> 系统: Windows10\n> Python: Python 3.8.7\n> Selenium: 4.2.0\n\n\n## 1、Selenium等待方式\n\n> 详情请查看官方文档: [https://www.selenium.dev/zh-cn/documentation/webdriver/waits/](https://www.selenium.dev/zh-cn/documentation/webdriver/waits/)\n\n\n### 1.1、显式等待(Explicit wait)\n\n根据等待条件进行等待, 只有等待条件为 `true` 时再继续执行，反正将一直等待直到超时\n\n\n### 1.2、隐式等待(Implicit wait)\n\n全局等待, 只有网页完全加载时才继续执行, 否则将一直等待直到超时\n\n\n### 1.3、流畅等待(Fluent Wait)\n\n多配置版等待，可以配置 最长等待时间, 轮询频率, 忽略等待时出现的特定类型的异常(例如在页面上搜索元素时出现的 `NoSuchElementException` 异常)等\n\n\n\n## 2、等待页面加载完成的方法\n\n### 2.1、使用隐式等待\n\n了解了Selenium的各种等待方法后，很自然地选择了 `隐式等待` ，因为它是全局地，并且会循环检查页面元素是否加载，否则将会一直等待，直到超时或者加载完成\n\n```python\ndriver = Firefox()\n\n# 等待页面加载, 超过10秒抛出异常\ndriver.implicitly_wait(10)\n\n# 后续操作\ndriver.get(\"https://www.baidu.com\")\nmy_dynamic_element = driver.find_element(By.ID, \"myDynamicElement\")\n```\n\n### 2.2、使用显式等待 + JS动态插入元素检查\n\n还有一种方法是利用显式等待配置JS动他插入元素地方式来实现, 原理：\n\n使用JS动态插入一个div元素作为标记元素, 然后使用显式等待, 等待条件为标记元素出现 \n\n```python\nimport uuid\n\n# 为标记元素生成一个UUID\nmarkElementId = uuid.uuid1().hex\n\n# 在Body元素下插入标记元素\njsCode = '''\nlet div = document.createElement('div');\ndiv.setAttribute('id', '@@ID@@');\ndiv.setAttribute('style', 'width: 0px; height: 0px;');\nlet body = document.getElementsByTagName('body')[0];\nbody.appendChild(div);\n'''.replace('@@ID@@', markElementId)\n\n# 等待页面加载完成\ntry:\n    # 执行JS\n    self.brower.execute_script(jsCode)\n    # 如果检测到标注元素, 视为页面加载完成, 否则一直等待, 直到超时\n    wait = WebDriverWait(self.brower, 10)\n    wait.until(lambda b : b.find_element(By.ID, markElementId))\nexcept Exception as err:\n    print('页面加载超时')\n```\n\n","source":"_posts/selenium-waits-for-the-page-to-load.md","raw":"---\ntitle: selenium -- 等待网页加载完成\nindex_img: /images/post/selenium-cover.jpg\ndate: 2022-06-17 17:35:12\ncategories:\n- 开发\n- 爬虫\ntags: \n- selenium\n- 爬虫\n---\n\n\n# selenium -- 等待网页加载完成\n\n使用elenium做项目时候通常需要等待网页完全加载后再执行某些操作\n\n例如需要爬取一个动态表格的数据，需要等待JS完全加载后从后端拿到数据渲染\n\n> 环境:\n> 系统: Windows10\n> Python: Python 3.8.7\n> Selenium: 4.2.0\n\n\n## 1、Selenium等待方式\n\n> 详情请查看官方文档: [https://www.selenium.dev/zh-cn/documentation/webdriver/waits/](https://www.selenium.dev/zh-cn/documentation/webdriver/waits/)\n\n\n### 1.1、显式等待(Explicit wait)\n\n根据等待条件进行等待, 只有等待条件为 `true` 时再继续执行，反正将一直等待直到超时\n\n\n### 1.2、隐式等待(Implicit wait)\n\n全局等待, 只有网页完全加载时才继续执行, 否则将一直等待直到超时\n\n\n### 1.3、流畅等待(Fluent Wait)\n\n多配置版等待，可以配置 最长等待时间, 轮询频率, 忽略等待时出现的特定类型的异常(例如在页面上搜索元素时出现的 `NoSuchElementException` 异常)等\n\n\n\n## 2、等待页面加载完成的方法\n\n### 2.1、使用隐式等待\n\n了解了Selenium的各种等待方法后，很自然地选择了 `隐式等待` ，因为它是全局地，并且会循环检查页面元素是否加载，否则将会一直等待，直到超时或者加载完成\n\n```python\ndriver = Firefox()\n\n# 等待页面加载, 超过10秒抛出异常\ndriver.implicitly_wait(10)\n\n# 后续操作\ndriver.get(\"https://www.baidu.com\")\nmy_dynamic_element = driver.find_element(By.ID, \"myDynamicElement\")\n```\n\n### 2.2、使用显式等待 + JS动态插入元素检查\n\n还有一种方法是利用显式等待配置JS动他插入元素地方式来实现, 原理：\n\n使用JS动态插入一个div元素作为标记元素, 然后使用显式等待, 等待条件为标记元素出现 \n\n```python\nimport uuid\n\n# 为标记元素生成一个UUID\nmarkElementId = uuid.uuid1().hex\n\n# 在Body元素下插入标记元素\njsCode = '''\nlet div = document.createElement('div');\ndiv.setAttribute('id', '@@ID@@');\ndiv.setAttribute('style', 'width: 0px; height: 0px;');\nlet body = document.getElementsByTagName('body')[0];\nbody.appendChild(div);\n'''.replace('@@ID@@', markElementId)\n\n# 等待页面加载完成\ntry:\n    # 执行JS\n    self.brower.execute_script(jsCode)\n    # 如果检测到标注元素, 视为页面加载完成, 否则一直等待, 直到超时\n    wait = WebDriverWait(self.brower, 10)\n    wait.until(lambda b : b.find_element(By.ID, markElementId))\nexcept Exception as err:\n    print('页面加载超时')\n```\n\n","slug":"selenium-waits-for-the-page-to-load","published":1,"updated":"2022-08-16T07:57:54.308Z","_id":"cl4i997bq000730uc840z3753","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"selenium-–-等待网页加载完成\"><a href=\"#selenium-–-等待网页加载完成\" class=\"headerlink\" title=\"selenium – 等待网页加载完成\"></a>selenium – 等待网页加载完成</h1><p>使用elenium做项目时候通常需要等待网页完全加载后再执行某些操作</p>\n<p>例如需要爬取一个动态表格的数据，需要等待JS完全加载后从后端拿到数据渲染</p>\n<blockquote>\n<p>环境:<br>系统: Windows10<br>Python: Python 3.8.7<br>Selenium: 4.2.0</p>\n</blockquote>\n<h2 id=\"1、Selenium等待方式\"><a href=\"#1、Selenium等待方式\" class=\"headerlink\" title=\"1、Selenium等待方式\"></a>1、Selenium等待方式</h2><blockquote>\n<p>详情请查看官方文档: <a href=\"https://www.selenium.dev/zh-cn/documentation/webdriver/waits/\">https://www.selenium.dev/zh-cn/documentation/webdriver/waits/</a></p>\n</blockquote>\n<h3 id=\"1-1、显式等待-Explicit-wait\"><a href=\"#1-1、显式等待-Explicit-wait\" class=\"headerlink\" title=\"1.1、显式等待(Explicit wait)\"></a>1.1、显式等待(Explicit wait)</h3><p>根据等待条件进行等待, 只有等待条件为 <code>true</code> 时再继续执行，反正将一直等待直到超时</p>\n<h3 id=\"1-2、隐式等待-Implicit-wait\"><a href=\"#1-2、隐式等待-Implicit-wait\" class=\"headerlink\" title=\"1.2、隐式等待(Implicit wait)\"></a>1.2、隐式等待(Implicit wait)</h3><p>全局等待, 只有网页完全加载时才继续执行, 否则将一直等待直到超时</p>\n<h3 id=\"1-3、流畅等待-Fluent-Wait\"><a href=\"#1-3、流畅等待-Fluent-Wait\" class=\"headerlink\" title=\"1.3、流畅等待(Fluent Wait)\"></a>1.3、流畅等待(Fluent Wait)</h3><p>多配置版等待，可以配置 最长等待时间, 轮询频率, 忽略等待时出现的特定类型的异常(例如在页面上搜索元素时出现的 <code>NoSuchElementException</code> 异常)等</p>\n<h2 id=\"2、等待页面加载完成的方法\"><a href=\"#2、等待页面加载完成的方法\" class=\"headerlink\" title=\"2、等待页面加载完成的方法\"></a>2、等待页面加载完成的方法</h2><h3 id=\"2-1、使用隐式等待\"><a href=\"#2-1、使用隐式等待\" class=\"headerlink\" title=\"2.1、使用隐式等待\"></a>2.1、使用隐式等待</h3><p>了解了Selenium的各种等待方法后，很自然地选择了 <code>隐式等待</code> ，因为它是全局地，并且会循环检查页面元素是否加载，否则将会一直等待，直到超时或者加载完成</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\">driver = Firefox()<br><br><span class=\"hljs-comment\"># 等待页面加载, 超过10秒抛出异常</span><br>driver.implicitly_wait(<span class=\"hljs-number\">10</span>)<br><br><span class=\"hljs-comment\"># 后续操作</span><br>driver.get(<span class=\"hljs-string\">&quot;https://www.baidu.com&quot;</span>)<br>my_dynamic_element = driver.find_element(By.ID, <span class=\"hljs-string\">&quot;myDynamicElement&quot;</span>)<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"2-2、使用显式等待-JS动态插入元素检查\"><a href=\"#2-2、使用显式等待-JS动态插入元素检查\" class=\"headerlink\" title=\"2.2、使用显式等待 + JS动态插入元素检查\"></a>2.2、使用显式等待 + JS动态插入元素检查</h3><p>还有一种方法是利用显式等待配置JS动他插入元素地方式来实现, 原理：</p>\n<p>使用JS动态插入一个div元素作为标记元素, 然后使用显式等待, 等待条件为标记元素出现 </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> uuid<br><br><span class=\"hljs-comment\"># 为标记元素生成一个UUID</span><br>markElementId = uuid.uuid1().<span class=\"hljs-built_in\">hex</span><br><br><span class=\"hljs-comment\"># 在Body元素下插入标记元素</span><br>jsCode = <span class=\"hljs-string\">&#x27;&#x27;&#x27;</span><br><span class=\"hljs-string\">let div = document.createElement(&#x27;div&#x27;);</span><br><span class=\"hljs-string\">div.setAttribute(&#x27;id&#x27;, &#x27;@@ID@@&#x27;);</span><br><span class=\"hljs-string\">div.setAttribute(&#x27;style&#x27;, &#x27;width: 0px; height: 0px;&#x27;);</span><br><span class=\"hljs-string\">let body = document.getElementsByTagName(&#x27;body&#x27;)[0];</span><br><span class=\"hljs-string\">body.appendChild(div);</span><br><span class=\"hljs-string\">&#x27;&#x27;&#x27;</span>.replace(<span class=\"hljs-string\">&#x27;@@ID@@&#x27;</span>, markElementId)<br><br><span class=\"hljs-comment\"># 等待页面加载完成</span><br><span class=\"hljs-keyword\">try</span>:<br>    <span class=\"hljs-comment\"># 执行JS</span><br>    self.brower.execute_script(jsCode)<br>    <span class=\"hljs-comment\"># 如果检测到标注元素, 视为页面加载完成, 否则一直等待, 直到超时</span><br>    wait = WebDriverWait(self.brower, <span class=\"hljs-number\">10</span>)<br>    wait.until(<span class=\"hljs-keyword\">lambda</span> b : b.find_element(By.ID, markElementId))<br><span class=\"hljs-keyword\">except</span> Exception <span class=\"hljs-keyword\">as</span> err:<br>    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;页面加载超时&#x27;</span>)<br></code></pre></td></tr></table></figure>\n\n","site":{"data":{}},"wordcount":1477,"excerpt":"","more":"<h1 id=\"selenium-–-等待网页加载完成\"><a href=\"#selenium-–-等待网页加载完成\" class=\"headerlink\" title=\"selenium – 等待网页加载完成\"></a>selenium – 等待网页加载完成</h1><p>使用elenium做项目时候通常需要等待网页完全加载后再执行某些操作</p>\n<p>例如需要爬取一个动态表格的数据，需要等待JS完全加载后从后端拿到数据渲染</p>\n<blockquote>\n<p>环境:<br>系统: Windows10<br>Python: Python 3.8.7<br>Selenium: 4.2.0</p>\n</blockquote>\n<h2 id=\"1、Selenium等待方式\"><a href=\"#1、Selenium等待方式\" class=\"headerlink\" title=\"1、Selenium等待方式\"></a>1、Selenium等待方式</h2><blockquote>\n<p>详情请查看官方文档: <a href=\"https://www.selenium.dev/zh-cn/documentation/webdriver/waits/\">https://www.selenium.dev/zh-cn/documentation/webdriver/waits/</a></p>\n</blockquote>\n<h3 id=\"1-1、显式等待-Explicit-wait\"><a href=\"#1-1、显式等待-Explicit-wait\" class=\"headerlink\" title=\"1.1、显式等待(Explicit wait)\"></a>1.1、显式等待(Explicit wait)</h3><p>根据等待条件进行等待, 只有等待条件为 <code>true</code> 时再继续执行，反正将一直等待直到超时</p>\n<h3 id=\"1-2、隐式等待-Implicit-wait\"><a href=\"#1-2、隐式等待-Implicit-wait\" class=\"headerlink\" title=\"1.2、隐式等待(Implicit wait)\"></a>1.2、隐式等待(Implicit wait)</h3><p>全局等待, 只有网页完全加载时才继续执行, 否则将一直等待直到超时</p>\n<h3 id=\"1-3、流畅等待-Fluent-Wait\"><a href=\"#1-3、流畅等待-Fluent-Wait\" class=\"headerlink\" title=\"1.3、流畅等待(Fluent Wait)\"></a>1.3、流畅等待(Fluent Wait)</h3><p>多配置版等待，可以配置 最长等待时间, 轮询频率, 忽略等待时出现的特定类型的异常(例如在页面上搜索元素时出现的 <code>NoSuchElementException</code> 异常)等</p>\n<h2 id=\"2、等待页面加载完成的方法\"><a href=\"#2、等待页面加载完成的方法\" class=\"headerlink\" title=\"2、等待页面加载完成的方法\"></a>2、等待页面加载完成的方法</h2><h3 id=\"2-1、使用隐式等待\"><a href=\"#2-1、使用隐式等待\" class=\"headerlink\" title=\"2.1、使用隐式等待\"></a>2.1、使用隐式等待</h3><p>了解了Selenium的各种等待方法后，很自然地选择了 <code>隐式等待</code> ，因为它是全局地，并且会循环检查页面元素是否加载，否则将会一直等待，直到超时或者加载完成</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\">driver = Firefox()<br><br><span class=\"hljs-comment\"># 等待页面加载, 超过10秒抛出异常</span><br>driver.implicitly_wait(<span class=\"hljs-number\">10</span>)<br><br><span class=\"hljs-comment\"># 后续操作</span><br>driver.get(<span class=\"hljs-string\">&quot;https://www.baidu.com&quot;</span>)<br>my_dynamic_element = driver.find_element(By.ID, <span class=\"hljs-string\">&quot;myDynamicElement&quot;</span>)<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"2-2、使用显式等待-JS动态插入元素检查\"><a href=\"#2-2、使用显式等待-JS动态插入元素检查\" class=\"headerlink\" title=\"2.2、使用显式等待 + JS动态插入元素检查\"></a>2.2、使用显式等待 + JS动态插入元素检查</h3><p>还有一种方法是利用显式等待配置JS动他插入元素地方式来实现, 原理：</p>\n<p>使用JS动态插入一个div元素作为标记元素, 然后使用显式等待, 等待条件为标记元素出现 </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> uuid<br><br><span class=\"hljs-comment\"># 为标记元素生成一个UUID</span><br>markElementId = uuid.uuid1().<span class=\"hljs-built_in\">hex</span><br><br><span class=\"hljs-comment\"># 在Body元素下插入标记元素</span><br>jsCode = <span class=\"hljs-string\">&#x27;&#x27;&#x27;</span><br><span class=\"hljs-string\">let div = document.createElement(&#x27;div&#x27;);</span><br><span class=\"hljs-string\">div.setAttribute(&#x27;id&#x27;, &#x27;@@ID@@&#x27;);</span><br><span class=\"hljs-string\">div.setAttribute(&#x27;style&#x27;, &#x27;width: 0px; height: 0px;&#x27;);</span><br><span class=\"hljs-string\">let body = document.getElementsByTagName(&#x27;body&#x27;)[0];</span><br><span class=\"hljs-string\">body.appendChild(div);</span><br><span class=\"hljs-string\">&#x27;&#x27;&#x27;</span>.replace(<span class=\"hljs-string\">&#x27;@@ID@@&#x27;</span>, markElementId)<br><br><span class=\"hljs-comment\"># 等待页面加载完成</span><br><span class=\"hljs-keyword\">try</span>:<br>    <span class=\"hljs-comment\"># 执行JS</span><br>    self.brower.execute_script(jsCode)<br>    <span class=\"hljs-comment\"># 如果检测到标注元素, 视为页面加载完成, 否则一直等待, 直到超时</span><br>    wait = WebDriverWait(self.brower, <span class=\"hljs-number\">10</span>)<br>    wait.until(<span class=\"hljs-keyword\">lambda</span> b : b.find_element(By.ID, markElementId))<br><span class=\"hljs-keyword\">except</span> Exception <span class=\"hljs-keyword\">as</span> err:<br>    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;页面加载超时&#x27;</span>)<br></code></pre></td></tr></table></figure>\n\n"},{"layout":"post","title":"Steps组件使用","index_img":"/images/post/primevue-cover.png","date":"2022-08-01T02:12:38.000Z","_content":"\n# PrimeVue框架--Steps组件使用\n\n\n## 1. 组件简介\n\n> **PrimeVue**\n> \n> Steps 组件是向导工作流中步骤的指示器。\n> \n> https://www.primefaces.org/primevue/steps\n\n通常称为 `步骤条`, `步进条`\n\n\n按理来说，组件的使用直接参考官方文档即可，不需要记录到博客。\n\n但是 PrimeVue 的步骤条与 Element 框架点区别，PrimeVue 的步骤条是基于 Vue Router 的，之前没有接触过，使用过程中踩了一两个坑，所以还是打算用博客的形式记录一下使用方法，供日后参考，而不是苦哈哈的再去研究官方文档💀\n\n\n## 2. 使用方法\n\n> **小提示**:\n> \n> 所有代码都基于Vue3项目，所以确保您拥有一个vue3项目\n>\n> 如果您没有，请使用 [Vue-CLI](https://cli.vuejs.org/zh/) 创建，参考：[https://cli.vuejs.org/zh/guide/creating-a-project.html](https://cli.vuejs.org/zh/guide/creating-a-project.html)\n\n\n**创建一个Vue3项目**\n```sh\n[mf~/project/demo] $ vue create primevue-steps\n```\n\n**选择Vue3选项**\n```sh\nVue CLI v4.5.15\n┌──────────────────────────────────────────┐\n│                                          │\n│   New version available 4.5.15 → 5.0.8   │\n│     Run npm i -g @vue/cli to update!     │\n│                                          │\n└──────────────────────────────────────────┘\n\n? Please pick a preset: \n  Default ([Vue 2] babel, eslint) \n❯ Default (Vue 3) ([Vue 3] babel, eslint) \n  Manually select features \n```\n\n**等待创建完成**\n\n```sh\nVue CLI v4.5.15\n✨  Creating project in /home/mf/project/demo/primevue-steps.\n🗃  Initializing git repository...\n⚙️  Installing CLI plugins. This might take a while...\n\n\nadded 1300 packages in 1m\n🚀  Invoking generators...\n📦  Installing additional dependencies...\n\n\nadded 71 packages in 13s\n⚓  Running completion hooks...\n\n📄  Generating README.md...\n\n🎉  Successfully created project primevue-steps.\n👉  Get started with the following commands:\n\n $ cd primevue-steps\n $ npm run serve\n\n WARN  Skipped git commit due to missing username and email in git config, or failed to sign commit.\nYou will need to perform the initial commit yourself.\n```\n\n创建完成后，切换到项目目录(`例子中是 /home/mf/project/demo/primevue-steps`)\n\n```sh\ncd primevue-steps\n```\n\n\n### 2.1 安装 Vue Router\n\n由于 steps组件 是基于 Vue Router 的，所以使用前需要安装 Vue Router\n\n```sh\nnpm install vue-router@4\n```\n\n```sh\n[mf~/project/demo/primevue-steps] (master) $ npm install vue-router@4\n\nadded 2 packages, and audited 1374 packages in 18s\n\n1 package is looking for funding\n  run `npm fund` for details\n\n25 vulnerabilities (11 moderate, 7 high, 7 critical)\n\nTo address issues that do not require attention, run:\n  npm audit fix\n\nTo address all issues (including breaking changes), run:\n  npm audit fix --force\n\nRun `npm audit` for details.\n```\n\n### 2.2 安装 PrimeVue \n\n```sh\nnpm install primevue@^3.15.0 --save\nnpm install primeicons --save\n```\n\n```sh\n[mf~/project/demo/primevue-steps] (master) $ npm install primevue@^3.15.0 --save\n\nadded 2 packages, and audited 1376 packages in 17s\n\n1 package is looking for funding\n  run `npm fund` for details\n\n25 vulnerabilities (11 moderate, 7 high, 7 critical)\n\nTo address issues that do not require attention, run:\n  npm audit fix\n\nTo address all issues (including breaking changes), run:\n  npm audit fix --force\n\nRun `npm audit` for details.\n[mf~/project/demo/primevue-steps] (master) $ npm install primeicons --save\n\nup to date, audited 1376 packages in 9s\n\n1 package is looking for funding\n  run `npm fund` for details\n\n25 vulnerabilities (11 moderate, 7 high, 7 critical)\n\nTo address issues that do not require attention, run:\n  npm audit fix\n\nTo address all issues (including breaking changes), run:\n  npm audit fix --force\n\nRun `npm audit` for details.\n[mf~/project/demo/primevue-steps] (master) $ \n```\n\n### 2.2 创建测试视图(view)\n\n在 `primevue-steps/src/` 目录下创建目录 `views`，用于存储视图（`primevue-steps/src/views`），在此目录下创建视图文件 `TestView.vue`\n\n```html\n<template>\n    <h3>PrimeVue Steps 组件测试视图</h3>\n</template>\n\n<script>\n    export default {\n        name: 'TestView',\n        components: {},\n        setup() {\n            \n        }\n    }\n</script>\n```\n\n### 2.3 为项目引入路由并为测试视图创建一个路由\n\n在 `primevue-steps/src/` 目录下创建目录 `router`，用于存储路由文件（`primevue-steps/src/router`），在此目录下创建路由文件 `index.js`\n\n```js\nimport { createRouter, createWebHistory } from \"vue-router\";\nimport HelloWorld from \"@/components/HelloWorld\"\nimport TestView from \"@/views/TestView\"\n\n// 两个路由，根路由(/) 和 测试视图路由(/tv)\n// 根路由和默认的示例HelloWorld组件绑定，用于显示我们的首页\n// 测试视图路由和我们的测试视图绑定，用于显示我们的测试视图\nconst routes = [\n    {\n        name: \"index\",\n        path: \"/\",\n        component: HelloWorld\n    }, {\n        name: \"testView\",\n        path: \"/tv\",\n        component: TestView\n    }\n]\n\nconst router = createRouter({\n    history: createWebHistory(),\n    routes\n})\n\nexport default router;\n```\n\n路由文件创建完成，在 `primevue-steps/src/main.js` 文件中导入并使用路由\n\n```js\nimport { createApp } from 'vue'\nimport App from './App.vue'\n// 导入路由\nimport router from '@/router'\n// 导入PrimeVue样式\nimport 'primeicons/primeicons.css'\nimport 'primevue/resources/primevue.min.css'\nimport 'primevue/resources/themes/saga-blue/theme.css'\n\n\ncreateApp(App).use(router).mount('#app')\n```\n\n最后在 `primevue-steps/src/App.vue` 中注释掉默认内容，插入 `<router-view></router-view>` 标签，路由所对应的组件/视图都将渲染到此处\n\n```html\n<template>\n  <!-- <img alt=\"Vue logo\" src=\"./assets/logo.png\">\n  <HelloWorld msg=\"Welcome to Your Vue.js App\"/> -->\n  <router-view></router-view>\n</template>\n\n<script>\n// import HelloWorld from './components/HelloWorld.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    // HelloWorld\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n\n```\n\n启动测试服务器\n\n```sh\n[mf~/project/demo/primevue-steps] (master) $ npm run serve\n\n DONE  Compiled successfully in 300ms                                                                                                                                                                                11:39:34 AM\n\n\n  App running at:\n  - Local:   http://localhost:8081/ \n  - Network: http://192.168.8.7:8081/\n\n\n```\n\n![](/images/post/Use-Primevue-Steps-component-vue3/1.gif)\n\n\n### 2.4 在测试视图中引入Steps组件并使用\n\n> **知识点：**\n>\n> PrimeVue中Steps组件的步骤组件切换使用嵌套路由实现，关系图如下：\n\n![](/images/post/Use-Primevue-Steps-component-vue3/2.jpg)\n\n#### 2.4.1 在测试视图中使用steps组件\n\n```html\n<template>\n    <h3>PrimeVue Steps 组件测试视图</h3>\n    <!-- \n        sreps组件本身 \n        :model=\"stepsItems\" 绑定步骤信息，每个步骤项为一个对象，指定步骤名称和要跳转的子路由地址\n        :readonly=\"true\" 只读步骤，步骤条不可点击，如果为false，则可以点击相应的步骤项跳转到的子路由\n    -->\n    <Steps :model=\"stepsItems\" :readonly=\"true\" />\n    <!-- \n        嵌套路由渲染区, 用于渲染步骤组件\n        :formData=\"formObject\" 向子路由传递数据。可选，一般用于给子路由的组件传递初始值，如果不需要可以忽略\n        @prevPage=\"prevPage($event)\" 监听子路由prevPage事件, 用于跳转到上一页(上一步)\n        @nextPage=\"nextPage($event)\" 监听子路由nextPage事件, 用于跳转到下一页(下一步)\n        @complete=\"complete\" 监听子路由complete事件，该事件触发时表示步骤完成\n    -->\n    <router-view \n        v-slot=\"{ Component }\" \n        :formData=\"formObject\" \n        @prevPage=\"prevPage($event)\" \n        @nextPage=\"nextPage($event)\"\n        @complete=\"complete($event)\"\n    >\n        <keep-alive>\n            <component :is=\"Component\" />\n        </keep-alive>\n    </router-view>\n</template>\n\n<script>\nimport { ref } from 'vue'\n// 导入router, 用于控制子路由\nimport { useRouter } from 'vue-router'\n// 导入 steps 组件\nimport Steps from 'primevue/steps'\n\nexport default {\n    name: 'TestView',\n    components: { Steps },\n    setup() {\n        // 路由实例, 控制子由跳转\n        const router = useRouter()\n        // 步骤条信息\n        const stepsItems = ref([\n            { label: '步骤1', to: '/tv/p1' },\n            { label: '步骤2', to: '/tv/p2' },\n            { label: '步骤3', to: '/tv/p3' },\n        ])\n        // 数据\n        const formObject = ref({\n            msg: 'Steps数据'\n        })\n\n        /**\n         * @function 子路由事件处理函数, 跳转到下一页(下一个步骤)\n         * @param {*} data 子路由组件传递的数据\n         */\n        const nextPage = (data) => {\n            // 这里进行子路由组件数据的处理\n            // 这里为了演示只是向控制台打印传递的数据\n            console.info(`Steps: ${stepsItems.value[data.value.index].label}传递的数据`, data.value)\n            // 跳转到下一个步骤, 下一个步骤的路由信息由stepsItems定义\n            router.push(stepsItems.value[data.value.index + 1].to);\n        }\n\n        /**\n         * @function 子路由事件处理函数, 跳转到上一页(上一个步骤)\n         * @param {*} data 子路由组件传递的数据\n         */\n        const prevPage = (data) => {\n            router.push(stepsItems.value[data.value.index - 1].to);\n        };\n\n        /**\n         * @function 子路由事件处理函数, 步骤完成\n         * @param {*} data 子路由组件传递的数据\n         */\n        const complete = (data) => {\n            // 这里做步骤完成后的操作, 这里为了演示只是进行了简单的提示,和打印控制台\n            console.info(`Steps: ${stepsItems.value[data.value.index].label}传递的数据`, data.value)\n            alert('步骤完成')\n        };\n\n        return {\n            stepsItems, formObject,\n            nextPage, prevPage, complete\n        }\n    }\n}\n</script>\n```\n\n访问 `/tv` ,可以看到步骤条已经创建。\n\n![](/images/post/Use-Primevue-Steps-component-vue3/3.png)\n\n\n#### 2.4.2 创建子路由组件\n\n在 `primevue-steps/src/components` 目录下创建路由文件三个组件提供个`steps`组件使用\n\n- P1.vue\n- P2.vue\n- P3.vue\n\n![](/images/post/Use-Primevue-Steps-component-vue3/4.png)\n\n**P1.vue**\n\n```html\n<template>\n    <div>\n        <h4>步骤一：/tv/p1</h4>\n        <!-- 下一页控制按钮 -->\n    <button @click=\"nextPage\">下一步</button>\n    </div>\n</template>\n\n<script>\nimport {ref} from 'vue'\n\nexport default {\n    name: 'P1',\n    components: { },\n    // 声明接收steps组件传递的数据\n    props: {\n        formData: Object\n    },\n    // 声明事件\n    emits: ['prevPage', 'nextPage', 'complete'],\n\n    setup(props, ctx) {\n        console.log('步骤一, Steps传递的数据:', props.formData)\n\n        // 当前组件的数据, nextPage事件发出时传递给Steps组件\n        const data = ref({\n            formData: {\n                msg: '我是步骤一'\n            },\n            index: 0\n        })\n\n        /**\n         * @function 向steps组件发出nextPage事件，让steps组件控制router跳转到下一页\n         */\n        const nextPage = () => {\n            ctx.emit('nextPage', data)\n        }\n\n        return {\n            nextPage\n        }\n    }\n\n    \n}\n</script>\n\n<style scoped>\n    div {\n        width: 100%;\n        height: 100px;\n        border-radius: 10px;\n        margin-top: 10px;\n        box-shadow: 0px 0px 10px 5px #666666;\n    }\n</style>\n```\n\n**P2.vue**\n\n```html\n<template>\n    <div>\n        <h4>步骤二：/tv/p2</h4>\n        <!-- 上一页,下一页控制按钮 -->\n        <button @click=\"prevPage\">上一步</button>\n        <button @click=\"nextPage\">下一步</button>\n    </div>\n</template>\n\n<script>\nimport {ref} from 'vue'\n\nexport default {\n    name: 'P2',\n    components: { },\n    // 声明接收steps组件传递的数据\n    props: {\n        formData: Object\n    },\n    // 声明事件\n    emits: ['prevPage', 'nextPage', 'complete'],\n\n    setup(props, ctx) {\n        console.log('步骤二, Steps传递的数据:', props.formData)\n\n        // 当前组件的数据, nextPage事件发出时传递给Steps组件\n        const data = ref({\n            formData: {\n                msg: '我是步骤二'\n            },\n            index: 1\n        })\n\n        /**\n         * @function 向steps组件发出nextPage事件，让steps组件控制router跳转到下一页\n         */\n        const nextPage = () => {\n            ctx.emit('nextPage', data)\n        }\n\n        /**\n         * @function 向steps组件发出prevPage事件，让steps组件控制router跳转到上一页\n         */\n        const prevPage = () => {\n            ctx.emit('prevPage', data)\n        }\n\n        return {\n            nextPage, prevPage\n        }\n    }\n\n    \n}\n</script>\n\n<style scoped>\n    div {\n        width: 100%;\n        height: 100px;\n        border-radius: 10px;\n        margin-top: 10px;\n        box-shadow: 0px 0px 10px 5px #666666;\n    }\n</style>\n```\n\n**P3.vue**\n\n```html\n<template>\n    <div>\n        <h4>步骤三：/tv/p3</h4>\n        <!-- 上一页,下一页控制按钮 -->\n        <button @click=\"prevPage\">上一步</button>\n        <button @click=\"complete\">完成/确定</button>\n    </div>\n</template>\n\n<script>\nimport {ref} from 'vue'\n\nexport default {\n    name: 'P3',\n    components: { },\n    // 声明接收steps组件传递的数据\n    props: {\n        formData: Object\n    },\n    // 声明事件\n    emits: ['prevPage', 'nextPage', 'complete'],\n\n    setup(props, ctx) {\n        console.log('步骤三, Steps传递的数据:', props.formData)\n\n        // 当前组件的数据, nextPage事件发出时传递给Steps组件\n        const data = ref({\n            formData: {\n                msg: '我是步骤三'\n            },\n            index: 2\n        })\n\n        /**\n         * @function 向steps组件发出prevPage事件，让steps组件控制router跳转到下一页\n         */\n        const prevPage = () => {\n            ctx.emit('prevPage', data)\n        }\n\n        /**\n         * @function 向steps组件发出complete事件，告知steps组件步骤完成\n         */\n        const complete = () => {\n            ctx.emit('complete', data)\n        }\n\n        return {\n            prevPage, complete\n        }\n    }\n\n    \n}\n</script>\n\n<style scoped>\n    div {\n        width: 100%;\n        height: 100px;\n        border-radius: 10px;\n        margin-top: 10px;\n        box-shadow: 0px 0px 10px 5px #666666;\n    }\n</style>\n```\n\n#### 2.4.3 为子路由组件指定路由地址\n\n修改路由文件 `primevue-steps/src/router/index.js`，为TestView视图添加子路由\n\n```js\nimport { createRouter, createWebHistory } from \"vue-router\";\nimport HelloWorld from \"@/components/HelloWorld\"\nimport TestView from \"@/views/TestView\"\n// 导入子路由组件\nimport P1 from \"@/components/P1\"\nimport P2 from \"@/components/P2\"\nimport P3 from \"@/components/P3\"\n\n\nconst routes = [\n    {\n        name: \"index\",\n        path: \"/\",\n        component: HelloWorld\n    }, {\n        name: \"testView\",\n        path: \"/tv\",\n        component: TestView,\n        // setps组件子路由\n        children: [\n            {path: 'p1', component: P1},\n            {path: 'p2', component: P2},\n            {path: 'p3', component: P3},\n        ]\n    }\n]\n\nconst router = createRouter({\n    history: createWebHistory(),\n    routes\n})\n\nexport default router;\n```\n\n完成后刷新页面并访问路径 `/tv/p1`，即可看到步骤页\n\n![](/images/post/Use-Primevue-Steps-component-vue3/5.gif)\n\n\n## 3. 演示Demo\n\n文章中所用的测试Demo已经推送到github：[https://github.com/mangfu26/blog-share/tree/primevue-steps](https://github.com/mangfu26/blog-share/tree/primevue-steps)\n\n你可以使用以下命令克隆使用\n\n```sh\ngit clone -b primevue-steps https://github.com/mangfu26/blog-share.git primevue-steps\n```","source":"_posts/Use-Primevue-Steps-component-vue3.md","raw":"---\nlayout: post\ntitle: Steps组件使用\nindex_img: /images/post/primevue-cover.png\ndate: 2022-08-01 10:12:38\ncategories:\n- 开发\n- 前端\n- PrimeVue框架\ntags:\n- 前端\n- PrimeVue\n---\n\n# PrimeVue框架--Steps组件使用\n\n\n## 1. 组件简介\n\n> **PrimeVue**\n> \n> Steps 组件是向导工作流中步骤的指示器。\n> \n> https://www.primefaces.org/primevue/steps\n\n通常称为 `步骤条`, `步进条`\n\n\n按理来说，组件的使用直接参考官方文档即可，不需要记录到博客。\n\n但是 PrimeVue 的步骤条与 Element 框架点区别，PrimeVue 的步骤条是基于 Vue Router 的，之前没有接触过，使用过程中踩了一两个坑，所以还是打算用博客的形式记录一下使用方法，供日后参考，而不是苦哈哈的再去研究官方文档💀\n\n\n## 2. 使用方法\n\n> **小提示**:\n> \n> 所有代码都基于Vue3项目，所以确保您拥有一个vue3项目\n>\n> 如果您没有，请使用 [Vue-CLI](https://cli.vuejs.org/zh/) 创建，参考：[https://cli.vuejs.org/zh/guide/creating-a-project.html](https://cli.vuejs.org/zh/guide/creating-a-project.html)\n\n\n**创建一个Vue3项目**\n```sh\n[mf~/project/demo] $ vue create primevue-steps\n```\n\n**选择Vue3选项**\n```sh\nVue CLI v4.5.15\n┌──────────────────────────────────────────┐\n│                                          │\n│   New version available 4.5.15 → 5.0.8   │\n│     Run npm i -g @vue/cli to update!     │\n│                                          │\n└──────────────────────────────────────────┘\n\n? Please pick a preset: \n  Default ([Vue 2] babel, eslint) \n❯ Default (Vue 3) ([Vue 3] babel, eslint) \n  Manually select features \n```\n\n**等待创建完成**\n\n```sh\nVue CLI v4.5.15\n✨  Creating project in /home/mf/project/demo/primevue-steps.\n🗃  Initializing git repository...\n⚙️  Installing CLI plugins. This might take a while...\n\n\nadded 1300 packages in 1m\n🚀  Invoking generators...\n📦  Installing additional dependencies...\n\n\nadded 71 packages in 13s\n⚓  Running completion hooks...\n\n📄  Generating README.md...\n\n🎉  Successfully created project primevue-steps.\n👉  Get started with the following commands:\n\n $ cd primevue-steps\n $ npm run serve\n\n WARN  Skipped git commit due to missing username and email in git config, or failed to sign commit.\nYou will need to perform the initial commit yourself.\n```\n\n创建完成后，切换到项目目录(`例子中是 /home/mf/project/demo/primevue-steps`)\n\n```sh\ncd primevue-steps\n```\n\n\n### 2.1 安装 Vue Router\n\n由于 steps组件 是基于 Vue Router 的，所以使用前需要安装 Vue Router\n\n```sh\nnpm install vue-router@4\n```\n\n```sh\n[mf~/project/demo/primevue-steps] (master) $ npm install vue-router@4\n\nadded 2 packages, and audited 1374 packages in 18s\n\n1 package is looking for funding\n  run `npm fund` for details\n\n25 vulnerabilities (11 moderate, 7 high, 7 critical)\n\nTo address issues that do not require attention, run:\n  npm audit fix\n\nTo address all issues (including breaking changes), run:\n  npm audit fix --force\n\nRun `npm audit` for details.\n```\n\n### 2.2 安装 PrimeVue \n\n```sh\nnpm install primevue@^3.15.0 --save\nnpm install primeicons --save\n```\n\n```sh\n[mf~/project/demo/primevue-steps] (master) $ npm install primevue@^3.15.0 --save\n\nadded 2 packages, and audited 1376 packages in 17s\n\n1 package is looking for funding\n  run `npm fund` for details\n\n25 vulnerabilities (11 moderate, 7 high, 7 critical)\n\nTo address issues that do not require attention, run:\n  npm audit fix\n\nTo address all issues (including breaking changes), run:\n  npm audit fix --force\n\nRun `npm audit` for details.\n[mf~/project/demo/primevue-steps] (master) $ npm install primeicons --save\n\nup to date, audited 1376 packages in 9s\n\n1 package is looking for funding\n  run `npm fund` for details\n\n25 vulnerabilities (11 moderate, 7 high, 7 critical)\n\nTo address issues that do not require attention, run:\n  npm audit fix\n\nTo address all issues (including breaking changes), run:\n  npm audit fix --force\n\nRun `npm audit` for details.\n[mf~/project/demo/primevue-steps] (master) $ \n```\n\n### 2.2 创建测试视图(view)\n\n在 `primevue-steps/src/` 目录下创建目录 `views`，用于存储视图（`primevue-steps/src/views`），在此目录下创建视图文件 `TestView.vue`\n\n```html\n<template>\n    <h3>PrimeVue Steps 组件测试视图</h3>\n</template>\n\n<script>\n    export default {\n        name: 'TestView',\n        components: {},\n        setup() {\n            \n        }\n    }\n</script>\n```\n\n### 2.3 为项目引入路由并为测试视图创建一个路由\n\n在 `primevue-steps/src/` 目录下创建目录 `router`，用于存储路由文件（`primevue-steps/src/router`），在此目录下创建路由文件 `index.js`\n\n```js\nimport { createRouter, createWebHistory } from \"vue-router\";\nimport HelloWorld from \"@/components/HelloWorld\"\nimport TestView from \"@/views/TestView\"\n\n// 两个路由，根路由(/) 和 测试视图路由(/tv)\n// 根路由和默认的示例HelloWorld组件绑定，用于显示我们的首页\n// 测试视图路由和我们的测试视图绑定，用于显示我们的测试视图\nconst routes = [\n    {\n        name: \"index\",\n        path: \"/\",\n        component: HelloWorld\n    }, {\n        name: \"testView\",\n        path: \"/tv\",\n        component: TestView\n    }\n]\n\nconst router = createRouter({\n    history: createWebHistory(),\n    routes\n})\n\nexport default router;\n```\n\n路由文件创建完成，在 `primevue-steps/src/main.js` 文件中导入并使用路由\n\n```js\nimport { createApp } from 'vue'\nimport App from './App.vue'\n// 导入路由\nimport router from '@/router'\n// 导入PrimeVue样式\nimport 'primeicons/primeicons.css'\nimport 'primevue/resources/primevue.min.css'\nimport 'primevue/resources/themes/saga-blue/theme.css'\n\n\ncreateApp(App).use(router).mount('#app')\n```\n\n最后在 `primevue-steps/src/App.vue` 中注释掉默认内容，插入 `<router-view></router-view>` 标签，路由所对应的组件/视图都将渲染到此处\n\n```html\n<template>\n  <!-- <img alt=\"Vue logo\" src=\"./assets/logo.png\">\n  <HelloWorld msg=\"Welcome to Your Vue.js App\"/> -->\n  <router-view></router-view>\n</template>\n\n<script>\n// import HelloWorld from './components/HelloWorld.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    // HelloWorld\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n\n```\n\n启动测试服务器\n\n```sh\n[mf~/project/demo/primevue-steps] (master) $ npm run serve\n\n DONE  Compiled successfully in 300ms                                                                                                                                                                                11:39:34 AM\n\n\n  App running at:\n  - Local:   http://localhost:8081/ \n  - Network: http://192.168.8.7:8081/\n\n\n```\n\n![](/images/post/Use-Primevue-Steps-component-vue3/1.gif)\n\n\n### 2.4 在测试视图中引入Steps组件并使用\n\n> **知识点：**\n>\n> PrimeVue中Steps组件的步骤组件切换使用嵌套路由实现，关系图如下：\n\n![](/images/post/Use-Primevue-Steps-component-vue3/2.jpg)\n\n#### 2.4.1 在测试视图中使用steps组件\n\n```html\n<template>\n    <h3>PrimeVue Steps 组件测试视图</h3>\n    <!-- \n        sreps组件本身 \n        :model=\"stepsItems\" 绑定步骤信息，每个步骤项为一个对象，指定步骤名称和要跳转的子路由地址\n        :readonly=\"true\" 只读步骤，步骤条不可点击，如果为false，则可以点击相应的步骤项跳转到的子路由\n    -->\n    <Steps :model=\"stepsItems\" :readonly=\"true\" />\n    <!-- \n        嵌套路由渲染区, 用于渲染步骤组件\n        :formData=\"formObject\" 向子路由传递数据。可选，一般用于给子路由的组件传递初始值，如果不需要可以忽略\n        @prevPage=\"prevPage($event)\" 监听子路由prevPage事件, 用于跳转到上一页(上一步)\n        @nextPage=\"nextPage($event)\" 监听子路由nextPage事件, 用于跳转到下一页(下一步)\n        @complete=\"complete\" 监听子路由complete事件，该事件触发时表示步骤完成\n    -->\n    <router-view \n        v-slot=\"{ Component }\" \n        :formData=\"formObject\" \n        @prevPage=\"prevPage($event)\" \n        @nextPage=\"nextPage($event)\"\n        @complete=\"complete($event)\"\n    >\n        <keep-alive>\n            <component :is=\"Component\" />\n        </keep-alive>\n    </router-view>\n</template>\n\n<script>\nimport { ref } from 'vue'\n// 导入router, 用于控制子路由\nimport { useRouter } from 'vue-router'\n// 导入 steps 组件\nimport Steps from 'primevue/steps'\n\nexport default {\n    name: 'TestView',\n    components: { Steps },\n    setup() {\n        // 路由实例, 控制子由跳转\n        const router = useRouter()\n        // 步骤条信息\n        const stepsItems = ref([\n            { label: '步骤1', to: '/tv/p1' },\n            { label: '步骤2', to: '/tv/p2' },\n            { label: '步骤3', to: '/tv/p3' },\n        ])\n        // 数据\n        const formObject = ref({\n            msg: 'Steps数据'\n        })\n\n        /**\n         * @function 子路由事件处理函数, 跳转到下一页(下一个步骤)\n         * @param {*} data 子路由组件传递的数据\n         */\n        const nextPage = (data) => {\n            // 这里进行子路由组件数据的处理\n            // 这里为了演示只是向控制台打印传递的数据\n            console.info(`Steps: ${stepsItems.value[data.value.index].label}传递的数据`, data.value)\n            // 跳转到下一个步骤, 下一个步骤的路由信息由stepsItems定义\n            router.push(stepsItems.value[data.value.index + 1].to);\n        }\n\n        /**\n         * @function 子路由事件处理函数, 跳转到上一页(上一个步骤)\n         * @param {*} data 子路由组件传递的数据\n         */\n        const prevPage = (data) => {\n            router.push(stepsItems.value[data.value.index - 1].to);\n        };\n\n        /**\n         * @function 子路由事件处理函数, 步骤完成\n         * @param {*} data 子路由组件传递的数据\n         */\n        const complete = (data) => {\n            // 这里做步骤完成后的操作, 这里为了演示只是进行了简单的提示,和打印控制台\n            console.info(`Steps: ${stepsItems.value[data.value.index].label}传递的数据`, data.value)\n            alert('步骤完成')\n        };\n\n        return {\n            stepsItems, formObject,\n            nextPage, prevPage, complete\n        }\n    }\n}\n</script>\n```\n\n访问 `/tv` ,可以看到步骤条已经创建。\n\n![](/images/post/Use-Primevue-Steps-component-vue3/3.png)\n\n\n#### 2.4.2 创建子路由组件\n\n在 `primevue-steps/src/components` 目录下创建路由文件三个组件提供个`steps`组件使用\n\n- P1.vue\n- P2.vue\n- P3.vue\n\n![](/images/post/Use-Primevue-Steps-component-vue3/4.png)\n\n**P1.vue**\n\n```html\n<template>\n    <div>\n        <h4>步骤一：/tv/p1</h4>\n        <!-- 下一页控制按钮 -->\n    <button @click=\"nextPage\">下一步</button>\n    </div>\n</template>\n\n<script>\nimport {ref} from 'vue'\n\nexport default {\n    name: 'P1',\n    components: { },\n    // 声明接收steps组件传递的数据\n    props: {\n        formData: Object\n    },\n    // 声明事件\n    emits: ['prevPage', 'nextPage', 'complete'],\n\n    setup(props, ctx) {\n        console.log('步骤一, Steps传递的数据:', props.formData)\n\n        // 当前组件的数据, nextPage事件发出时传递给Steps组件\n        const data = ref({\n            formData: {\n                msg: '我是步骤一'\n            },\n            index: 0\n        })\n\n        /**\n         * @function 向steps组件发出nextPage事件，让steps组件控制router跳转到下一页\n         */\n        const nextPage = () => {\n            ctx.emit('nextPage', data)\n        }\n\n        return {\n            nextPage\n        }\n    }\n\n    \n}\n</script>\n\n<style scoped>\n    div {\n        width: 100%;\n        height: 100px;\n        border-radius: 10px;\n        margin-top: 10px;\n        box-shadow: 0px 0px 10px 5px #666666;\n    }\n</style>\n```\n\n**P2.vue**\n\n```html\n<template>\n    <div>\n        <h4>步骤二：/tv/p2</h4>\n        <!-- 上一页,下一页控制按钮 -->\n        <button @click=\"prevPage\">上一步</button>\n        <button @click=\"nextPage\">下一步</button>\n    </div>\n</template>\n\n<script>\nimport {ref} from 'vue'\n\nexport default {\n    name: 'P2',\n    components: { },\n    // 声明接收steps组件传递的数据\n    props: {\n        formData: Object\n    },\n    // 声明事件\n    emits: ['prevPage', 'nextPage', 'complete'],\n\n    setup(props, ctx) {\n        console.log('步骤二, Steps传递的数据:', props.formData)\n\n        // 当前组件的数据, nextPage事件发出时传递给Steps组件\n        const data = ref({\n            formData: {\n                msg: '我是步骤二'\n            },\n            index: 1\n        })\n\n        /**\n         * @function 向steps组件发出nextPage事件，让steps组件控制router跳转到下一页\n         */\n        const nextPage = () => {\n            ctx.emit('nextPage', data)\n        }\n\n        /**\n         * @function 向steps组件发出prevPage事件，让steps组件控制router跳转到上一页\n         */\n        const prevPage = () => {\n            ctx.emit('prevPage', data)\n        }\n\n        return {\n            nextPage, prevPage\n        }\n    }\n\n    \n}\n</script>\n\n<style scoped>\n    div {\n        width: 100%;\n        height: 100px;\n        border-radius: 10px;\n        margin-top: 10px;\n        box-shadow: 0px 0px 10px 5px #666666;\n    }\n</style>\n```\n\n**P3.vue**\n\n```html\n<template>\n    <div>\n        <h4>步骤三：/tv/p3</h4>\n        <!-- 上一页,下一页控制按钮 -->\n        <button @click=\"prevPage\">上一步</button>\n        <button @click=\"complete\">完成/确定</button>\n    </div>\n</template>\n\n<script>\nimport {ref} from 'vue'\n\nexport default {\n    name: 'P3',\n    components: { },\n    // 声明接收steps组件传递的数据\n    props: {\n        formData: Object\n    },\n    // 声明事件\n    emits: ['prevPage', 'nextPage', 'complete'],\n\n    setup(props, ctx) {\n        console.log('步骤三, Steps传递的数据:', props.formData)\n\n        // 当前组件的数据, nextPage事件发出时传递给Steps组件\n        const data = ref({\n            formData: {\n                msg: '我是步骤三'\n            },\n            index: 2\n        })\n\n        /**\n         * @function 向steps组件发出prevPage事件，让steps组件控制router跳转到下一页\n         */\n        const prevPage = () => {\n            ctx.emit('prevPage', data)\n        }\n\n        /**\n         * @function 向steps组件发出complete事件，告知steps组件步骤完成\n         */\n        const complete = () => {\n            ctx.emit('complete', data)\n        }\n\n        return {\n            prevPage, complete\n        }\n    }\n\n    \n}\n</script>\n\n<style scoped>\n    div {\n        width: 100%;\n        height: 100px;\n        border-radius: 10px;\n        margin-top: 10px;\n        box-shadow: 0px 0px 10px 5px #666666;\n    }\n</style>\n```\n\n#### 2.4.3 为子路由组件指定路由地址\n\n修改路由文件 `primevue-steps/src/router/index.js`，为TestView视图添加子路由\n\n```js\nimport { createRouter, createWebHistory } from \"vue-router\";\nimport HelloWorld from \"@/components/HelloWorld\"\nimport TestView from \"@/views/TestView\"\n// 导入子路由组件\nimport P1 from \"@/components/P1\"\nimport P2 from \"@/components/P2\"\nimport P3 from \"@/components/P3\"\n\n\nconst routes = [\n    {\n        name: \"index\",\n        path: \"/\",\n        component: HelloWorld\n    }, {\n        name: \"testView\",\n        path: \"/tv\",\n        component: TestView,\n        // setps组件子路由\n        children: [\n            {path: 'p1', component: P1},\n            {path: 'p2', component: P2},\n            {path: 'p3', component: P3},\n        ]\n    }\n]\n\nconst router = createRouter({\n    history: createWebHistory(),\n    routes\n})\n\nexport default router;\n```\n\n完成后刷新页面并访问路径 `/tv/p1`，即可看到步骤页\n\n![](/images/post/Use-Primevue-Steps-component-vue3/5.gif)\n\n\n## 3. 演示Demo\n\n文章中所用的测试Demo已经推送到github：[https://github.com/mangfu26/blog-share/tree/primevue-steps](https://github.com/mangfu26/blog-share/tree/primevue-steps)\n\n你可以使用以下命令克隆使用\n\n```sh\ngit clone -b primevue-steps https://github.com/mangfu26/blog-share.git primevue-steps\n```","slug":"Use-Primevue-Steps-component-vue3","published":1,"updated":"2022-08-02T03:26:17.137Z","_id":"cl6a4vey70000dcuca2ld8fkf","comments":1,"photos":[],"link":"","content":"<h1 id=\"PrimeVue框架–Steps组件使用\"><a href=\"#PrimeVue框架–Steps组件使用\" class=\"headerlink\" title=\"PrimeVue框架–Steps组件使用\"></a>PrimeVue框架–Steps组件使用</h1><h2 id=\"1-组件简介\"><a href=\"#1-组件简介\" class=\"headerlink\" title=\"1. 组件简介\"></a>1. 组件简介</h2><blockquote>\n<p><strong>PrimeVue</strong></p>\n<p>Steps 组件是向导工作流中步骤的指示器。</p>\n<p><a href=\"https://www.primefaces.org/primevue/steps\">https://www.primefaces.org/primevue/steps</a></p>\n</blockquote>\n<p>通常称为 <code>步骤条</code>, <code>步进条</code></p>\n<p>按理来说，组件的使用直接参考官方文档即可，不需要记录到博客。</p>\n<p>但是 PrimeVue 的步骤条与 Element 框架点区别，PrimeVue 的步骤条是基于 Vue Router 的，之前没有接触过，使用过程中踩了一两个坑，所以还是打算用博客的形式记录一下使用方法，供日后参考，而不是苦哈哈的再去研究官方文档💀</p>\n<h2 id=\"2-使用方法\"><a href=\"#2-使用方法\" class=\"headerlink\" title=\"2. 使用方法\"></a>2. 使用方法</h2><blockquote>\n<p><strong>小提示</strong>:</p>\n<p>所有代码都基于Vue3项目，所以确保您拥有一个vue3项目</p>\n<p>如果您没有，请使用 <a href=\"https://cli.vuejs.org/zh/\">Vue-CLI</a> 创建，参考：<a href=\"https://cli.vuejs.org/zh/guide/creating-a-project.html\">https://cli.vuejs.org/zh/guide/creating-a-project.html</a></p>\n</blockquote>\n<p><strong>创建一个Vue3项目</strong></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">[mf~/project/demo] $ vue create primevue-steps<br></code></pre></td></tr></table></figure>\n\n<p><strong>选择Vue3选项</strong></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">Vue CLI v4.5.15<br>┌──────────────────────────────────────────┐<br>│                                          │<br>│   New version available 4.5.15 → 5.0.8   │<br>│     Run npm i -g @vue/cli to update!     │<br>│                                          │<br>└──────────────────────────────────────────┘<br><br>? Please pick a preset: <br>  Default ([Vue 2] babel, eslint) <br>❯ Default (Vue 3) ([Vue 3] babel, eslint) <br>  Manually select features <br></code></pre></td></tr></table></figure>\n\n<p><strong>等待创建完成</strong></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">Vue CLI v4.5.15<br>✨  Creating project <span class=\"hljs-keyword\">in</span> /home/mf/project/demo/primevue-steps.<br>🗃  Initializing git repository...<br>⚙️  Installing CLI plugins. This might take a <span class=\"hljs-keyword\">while</span>...<br><br><br>added 1300 packages <span class=\"hljs-keyword\">in</span> 1m<br>🚀  Invoking generators...<br>📦  Installing additional dependencies...<br><br><br>added 71 packages <span class=\"hljs-keyword\">in</span> 13s<br>⚓  Running completion hooks...<br><br>📄  Generating README.md...<br><br>🎉  Successfully created project primevue-steps.<br>👉  Get started with the following commands:<br><br> $ <span class=\"hljs-built_in\">cd</span> primevue-steps<br> $ npm run serve<br><br> WARN  Skipped git commit due to missing username and email <span class=\"hljs-keyword\">in</span> git config, or failed to sign commit.<br>You will need to perform the initial commit yourself.<br></code></pre></td></tr></table></figure>\n\n<p>创建完成后，切换到项目目录(<code>例子中是 /home/mf/project/demo/primevue-steps</code>)</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\"><span class=\"hljs-built_in\">cd</span> primevue-steps<br></code></pre></td></tr></table></figure>\n\n\n<h3 id=\"2-1-安装-Vue-Router\"><a href=\"#2-1-安装-Vue-Router\" class=\"headerlink\" title=\"2.1 安装 Vue Router\"></a>2.1 安装 Vue Router</h3><p>由于 steps组件 是基于 Vue Router 的，所以使用前需要安装 Vue Router</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">npm install vue-router@4<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">[mf~/project/demo/primevue-steps] (master) $ npm install vue-router@4<br><br>added 2 packages, and audited 1374 packages <span class=\"hljs-keyword\">in</span> 18s<br><br>1 package is looking <span class=\"hljs-keyword\">for</span> funding<br>  run `npm fund` <span class=\"hljs-keyword\">for</span> details<br><br>25 vulnerabilities (11 moderate, 7 high, 7 critical)<br><br>To address issues that <span class=\"hljs-keyword\">do</span> not require attention, run:<br>  npm audit fix<br><br>To address all issues (including breaking changes), run:<br>  npm audit fix --force<br><br>Run `npm audit` <span class=\"hljs-keyword\">for</span> details.<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"2-2-安装-PrimeVue\"><a href=\"#2-2-安装-PrimeVue\" class=\"headerlink\" title=\"2.2 安装 PrimeVue\"></a>2.2 安装 PrimeVue</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">npm install primevue@^3.15.0 --save<br>npm install primeicons --save<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">[mf~/project/demo/primevue-steps] (master) $ npm install primevue@^3.15.0 --save<br><br>added 2 packages, and audited 1376 packages <span class=\"hljs-keyword\">in</span> 17s<br><br>1 package is looking <span class=\"hljs-keyword\">for</span> funding<br>  run `npm fund` <span class=\"hljs-keyword\">for</span> details<br><br>25 vulnerabilities (11 moderate, 7 high, 7 critical)<br><br>To address issues that <span class=\"hljs-keyword\">do</span> not require attention, run:<br>  npm audit fix<br><br>To address all issues (including breaking changes), run:<br>  npm audit fix --force<br><br>Run `npm audit` <span class=\"hljs-keyword\">for</span> details.<br>[mf~/project/demo/primevue-steps] (master) $ npm install primeicons --save<br><br>up to <span class=\"hljs-built_in\">date</span>, audited 1376 packages <span class=\"hljs-keyword\">in</span> 9s<br><br>1 package is looking <span class=\"hljs-keyword\">for</span> funding<br>  run `npm fund` <span class=\"hljs-keyword\">for</span> details<br><br>25 vulnerabilities (11 moderate, 7 high, 7 critical)<br><br>To address issues that <span class=\"hljs-keyword\">do</span> not require attention, run:<br>  npm audit fix<br><br>To address all issues (including breaking changes), run:<br>  npm audit fix --force<br><br>Run `npm audit` <span class=\"hljs-keyword\">for</span> details.<br>[mf~/project/demo/primevue-steps] (master) $ <br></code></pre></td></tr></table></figure>\n\n<h3 id=\"2-2-创建测试视图-view\"><a href=\"#2-2-创建测试视图-view\" class=\"headerlink\" title=\"2.2 创建测试视图(view)\"></a>2.2 创建测试视图(view)</h3><p>在 <code>primevue-steps/src/</code> 目录下创建目录 <code>views</code>，用于存储视图（<code>primevue-steps/src/views</code>），在此目录下创建视图文件 <code>TestView.vue</code></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span>&gt;</span>PrimeVue Steps 组件测试视图<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">    <span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> &#123;</span><br><span class=\"language-javascript\">        <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;TestView&#x27;</span>,</span><br><span class=\"language-javascript\">        <span class=\"hljs-attr\">components</span>: &#123;&#125;,</span><br><span class=\"language-javascript\">        <span class=\"hljs-title function_\">setup</span>(<span class=\"hljs-params\"></span>) &#123;</span><br><span class=\"language-javascript\">            </span><br><span class=\"language-javascript\">        &#125;</span><br><span class=\"language-javascript\">    &#125;</span><br><span class=\"language-javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"2-3-为项目引入路由并为测试视图创建一个路由\"><a href=\"#2-3-为项目引入路由并为测试视图创建一个路由\" class=\"headerlink\" title=\"2.3 为项目引入路由并为测试视图创建一个路由\"></a>2.3 为项目引入路由并为测试视图创建一个路由</h3><p>在 <code>primevue-steps/src/</code> 目录下创建目录 <code>router</code>，用于存储路由文件（<code>primevue-steps/src/router</code>），在此目录下创建路由文件 <code>index.js</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> &#123; createRouter, createWebHistory &#125; <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;vue-router&quot;</span>;<br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">HelloWorld</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@/components/HelloWorld&quot;</span><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">TestView</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@/views/TestView&quot;</span><br><br><span class=\"hljs-comment\">// 两个路由，根路由(/) 和 测试视图路由(/tv)</span><br><span class=\"hljs-comment\">// 根路由和默认的示例HelloWorld组件绑定，用于显示我们的首页</span><br><span class=\"hljs-comment\">// 测试视图路由和我们的测试视图绑定，用于显示我们的测试视图</span><br><span class=\"hljs-keyword\">const</span> routes = [<br>    &#123;<br>        <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;index&quot;</span>,<br>        <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">&quot;/&quot;</span>,<br>        <span class=\"hljs-attr\">component</span>: <span class=\"hljs-title class_\">HelloWorld</span><br>    &#125;, &#123;<br>        <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;testView&quot;</span>,<br>        <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">&quot;/tv&quot;</span>,<br>        <span class=\"hljs-attr\">component</span>: <span class=\"hljs-title class_\">TestView</span><br>    &#125;<br>]<br><br><span class=\"hljs-keyword\">const</span> router = <span class=\"hljs-title function_\">createRouter</span>(&#123;<br>    <span class=\"hljs-attr\">history</span>: <span class=\"hljs-title function_\">createWebHistory</span>(),<br>    routes<br>&#125;)<br><br><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> router;<br></code></pre></td></tr></table></figure>\n\n<p>路由文件创建完成，在 <code>primevue-steps/src/main.js</code> 文件中导入并使用路由</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> &#123; createApp &#125; <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;vue&#x27;</span><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">App</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;./App.vue&#x27;</span><br><span class=\"hljs-comment\">// 导入路由</span><br><span class=\"hljs-keyword\">import</span> router <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@/router&#x27;</span><br><span class=\"hljs-comment\">// 导入PrimeVue样式</span><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;primeicons/primeicons.css&#x27;</span><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;primevue/resources/primevue.min.css&#x27;</span><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;primevue/resources/themes/saga-blue/theme.css&#x27;</span><br><br><br><span class=\"hljs-title function_\">createApp</span>(<span class=\"hljs-title class_\">App</span>).<span class=\"hljs-title function_\">use</span>(router).<span class=\"hljs-title function_\">mount</span>(<span class=\"hljs-string\">&#x27;#app&#x27;</span>)<br></code></pre></td></tr></table></figure>\n\n<p>最后在 <code>primevue-steps/src/App.vue</code> 中注释掉默认内容，插入 <code>&lt;router-view&gt;&lt;/router-view&gt;</code> 标签，路由所对应的组件&#x2F;视图都将渲染到此处</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span><br>  <span class=\"hljs-comment\">&lt;!-- &lt;img alt=&quot;Vue logo&quot; src=&quot;./assets/logo.png&quot;&gt;</span><br><span class=\"hljs-comment\">  &lt;HelloWorld msg=&quot;Welcome to Your Vue.js App&quot;/&gt; --&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">router-view</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">router-view</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\"></span><br><span class=\"language-javascript\"><span class=\"hljs-comment\">// import HelloWorld from &#x27;./components/HelloWorld.vue&#x27;</span></span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> &#123;</span><br><span class=\"language-javascript\">  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;App&#x27;</span>,</span><br><span class=\"language-javascript\">  <span class=\"hljs-attr\">components</span>: &#123;</span><br><span class=\"language-javascript\">    <span class=\"hljs-comment\">// HelloWorld</span></span><br><span class=\"language-javascript\">  &#125;</span><br><span class=\"language-javascript\">&#125;</span><br><span class=\"language-javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><span class=\"language-css\"></span><br><span class=\"language-css\"><span class=\"hljs-selector-id\">#app</span> &#123;</span><br><span class=\"language-css\">  <span class=\"hljs-attribute\">font-family</span>: Avenir, Helvetica, Arial, sans-serif;</span><br><span class=\"language-css\">  -webkit-<span class=\"hljs-attribute\">font-smoothing</span>: antialiased;</span><br><span class=\"language-css\">  -moz-osx-<span class=\"hljs-attribute\">font-smoothing</span>: grayscale;</span><br><span class=\"language-css\">  <span class=\"hljs-attribute\">text-align</span>: center;</span><br><span class=\"language-css\">  <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">#2c3e50</span>;</span><br><span class=\"language-css\">  <span class=\"hljs-attribute\">margin-top</span>: <span class=\"hljs-number\">60px</span>;</span><br><span class=\"language-css\">&#125;</span><br><span class=\"language-css\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br><br></code></pre></td></tr></table></figure>\n\n<p>启动测试服务器</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">[mf~/project/demo/primevue-steps] (master) $ npm run serve<br><br> DONE  Compiled successfully <span class=\"hljs-keyword\">in</span> 300ms                                                                                                                                                                                11:39:34 AM<br><br><br>  App running at:<br>  - Local:   http://localhost:8081/ <br>  - Network: http://192.168.8.7:8081/<br><br><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/images/post/Use-Primevue-Steps-component-vue3/1.gif\"></p>\n<h3 id=\"2-4-在测试视图中引入Steps组件并使用\"><a href=\"#2-4-在测试视图中引入Steps组件并使用\" class=\"headerlink\" title=\"2.4 在测试视图中引入Steps组件并使用\"></a>2.4 在测试视图中引入Steps组件并使用</h3><blockquote>\n<p><strong>知识点：</strong></p>\n<p>PrimeVue中Steps组件的步骤组件切换使用嵌套路由实现，关系图如下：</p>\n</blockquote>\n<p><img src=\"/images/post/Use-Primevue-Steps-component-vue3/2.jpg\"></p>\n<h4 id=\"2-4-1-在测试视图中使用steps组件\"><a href=\"#2-4-1-在测试视图中使用steps组件\" class=\"headerlink\" title=\"2.4.1 在测试视图中使用steps组件\"></a>2.4.1 在测试视图中使用steps组件</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span>&gt;</span>PrimeVue Steps 组件测试视图<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span><br>    <span class=\"hljs-comment\">&lt;!-- </span><br><span class=\"hljs-comment\">        sreps组件本身 </span><br><span class=\"hljs-comment\">        :model=&quot;stepsItems&quot; 绑定步骤信息，每个步骤项为一个对象，指定步骤名称和要跳转的子路由地址</span><br><span class=\"hljs-comment\">        :readonly=&quot;true&quot; 只读步骤，步骤条不可点击，如果为false，则可以点击相应的步骤项跳转到的子路由</span><br><span class=\"hljs-comment\">    --&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Steps</span> <span class=\"hljs-attr\">:model</span>=<span class=\"hljs-string\">&quot;stepsItems&quot;</span> <span class=\"hljs-attr\">:readonly</span>=<span class=\"hljs-string\">&quot;true&quot;</span> /&gt;</span><br>    <span class=\"hljs-comment\">&lt;!-- </span><br><span class=\"hljs-comment\">        嵌套路由渲染区, 用于渲染步骤组件</span><br><span class=\"hljs-comment\">        :formData=&quot;formObject&quot; 向子路由传递数据。可选，一般用于给子路由的组件传递初始值，如果不需要可以忽略</span><br><span class=\"hljs-comment\">        @prevPage=&quot;prevPage($event)&quot; 监听子路由prevPage事件, 用于跳转到上一页(上一步)</span><br><span class=\"hljs-comment\">        @nextPage=&quot;nextPage($event)&quot; 监听子路由nextPage事件, 用于跳转到下一页(下一步)</span><br><span class=\"hljs-comment\">        @complete=&quot;complete&quot; 监听子路由complete事件，该事件触发时表示步骤完成</span><br><span class=\"hljs-comment\">    --&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">router-view</span> </span><br><span class=\"hljs-tag\">        <span class=\"hljs-attr\">v-slot</span>=<span class=\"hljs-string\">&quot;&#123; Component &#125;&quot;</span> </span><br><span class=\"hljs-tag\">        <span class=\"hljs-attr\">:formData</span>=<span class=\"hljs-string\">&quot;formObject&quot;</span> </span><br><span class=\"hljs-tag\">        @<span class=\"hljs-attr\">prevPage</span>=<span class=\"hljs-string\">&quot;prevPage($event)&quot;</span> </span><br><span class=\"hljs-tag\">        @<span class=\"hljs-attr\">nextPage</span>=<span class=\"hljs-string\">&quot;nextPage($event)&quot;</span></span><br><span class=\"hljs-tag\">        @<span class=\"hljs-attr\">complete</span>=<span class=\"hljs-string\">&quot;complete($event)&quot;</span></span><br><span class=\"hljs-tag\">    &gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">keep-alive</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">component</span> <span class=\"hljs-attr\">:is</span>=<span class=\"hljs-string\">&quot;Component&quot;</span> /&gt;</span><br>        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">keep-alive</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">router-view</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\"></span><br><span class=\"language-javascript\"><span class=\"hljs-keyword\">import</span> &#123; ref &#125; <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;vue&#x27;</span></span><br><span class=\"language-javascript\"><span class=\"hljs-comment\">// 导入router, 用于控制子路由</span></span><br><span class=\"language-javascript\"><span class=\"hljs-keyword\">import</span> &#123; useRouter &#125; <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;vue-router&#x27;</span></span><br><span class=\"language-javascript\"><span class=\"hljs-comment\">// 导入 steps 组件</span></span><br><span class=\"language-javascript\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Steps</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;primevue/steps&#x27;</span></span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> &#123;</span><br><span class=\"language-javascript\">    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;TestView&#x27;</span>,</span><br><span class=\"language-javascript\">    <span class=\"hljs-attr\">components</span>: &#123; <span class=\"hljs-title class_\">Steps</span> &#125;,</span><br><span class=\"language-javascript\">    <span class=\"hljs-title function_\">setup</span>(<span class=\"hljs-params\"></span>) &#123;</span><br><span class=\"language-javascript\">        <span class=\"hljs-comment\">// 路由实例, 控制子由跳转</span></span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">const</span> router = <span class=\"hljs-title function_\">useRouter</span>()</span><br><span class=\"language-javascript\">        <span class=\"hljs-comment\">// 步骤条信息</span></span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">const</span> stepsItems = <span class=\"hljs-title function_\">ref</span>([</span><br><span class=\"language-javascript\">            &#123; <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&#x27;步骤1&#x27;</span>, <span class=\"hljs-attr\">to</span>: <span class=\"hljs-string\">&#x27;/tv/p1&#x27;</span> &#125;,</span><br><span class=\"language-javascript\">            &#123; <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&#x27;步骤2&#x27;</span>, <span class=\"hljs-attr\">to</span>: <span class=\"hljs-string\">&#x27;/tv/p2&#x27;</span> &#125;,</span><br><span class=\"language-javascript\">            &#123; <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&#x27;步骤3&#x27;</span>, <span class=\"hljs-attr\">to</span>: <span class=\"hljs-string\">&#x27;/tv/p3&#x27;</span> &#125;,</span><br><span class=\"language-javascript\">        ])</span><br><span class=\"language-javascript\">        <span class=\"hljs-comment\">// 数据</span></span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">const</span> formObject = <span class=\"hljs-title function_\">ref</span>(&#123;</span><br><span class=\"language-javascript\">            <span class=\"hljs-attr\">msg</span>: <span class=\"hljs-string\">&#x27;Steps数据&#x27;</span></span><br><span class=\"language-javascript\">        &#125;)</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">        <span class=\"hljs-comment\">/**</span></span><br><span class=\"hljs-comment\"><span class=\"language-javascript\">         * <span class=\"hljs-doctag\">@function</span> 子路由事件处理函数, 跳转到下一页(下一个步骤)</span></span><br><span class=\"hljs-comment\"><span class=\"language-javascript\">         * <span class=\"hljs-doctag\">@param</span> &#123;<span class=\"hljs-type\">*</span>&#125; data 子路由组件传递的数据</span></span><br><span class=\"hljs-comment\"><span class=\"language-javascript\">         */</span></span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">nextPage</span> = (<span class=\"hljs-params\">data</span>) =&gt; &#123;</span><br><span class=\"language-javascript\">            <span class=\"hljs-comment\">// 这里进行子路由组件数据的处理</span></span><br><span class=\"language-javascript\">            <span class=\"hljs-comment\">// 这里为了演示只是向控制台打印传递的数据</span></span><br><span class=\"language-javascript\">            <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">info</span>(<span class=\"hljs-string\">`Steps: <span class=\"hljs-subst\">$&#123;stepsItems.value[data.value.index].label&#125;</span>传递的数据`</span>, data.<span class=\"hljs-property\">value</span>)</span><br><span class=\"language-javascript\">            <span class=\"hljs-comment\">// 跳转到下一个步骤, 下一个步骤的路由信息由stepsItems定义</span></span><br><span class=\"language-javascript\">            router.<span class=\"hljs-title function_\">push</span>(stepsItems.<span class=\"hljs-property\">value</span>[data.<span class=\"hljs-property\">value</span>.<span class=\"hljs-property\">index</span> + <span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">to</span>);</span><br><span class=\"language-javascript\">        &#125;</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">        <span class=\"hljs-comment\">/**</span></span><br><span class=\"hljs-comment\"><span class=\"language-javascript\">         * <span class=\"hljs-doctag\">@function</span> 子路由事件处理函数, 跳转到上一页(上一个步骤)</span></span><br><span class=\"hljs-comment\"><span class=\"language-javascript\">         * <span class=\"hljs-doctag\">@param</span> &#123;<span class=\"hljs-type\">*</span>&#125; data 子路由组件传递的数据</span></span><br><span class=\"hljs-comment\"><span class=\"language-javascript\">         */</span></span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">prevPage</span> = (<span class=\"hljs-params\">data</span>) =&gt; &#123;</span><br><span class=\"language-javascript\">            router.<span class=\"hljs-title function_\">push</span>(stepsItems.<span class=\"hljs-property\">value</span>[data.<span class=\"hljs-property\">value</span>.<span class=\"hljs-property\">index</span> - <span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">to</span>);</span><br><span class=\"language-javascript\">        &#125;;</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">        <span class=\"hljs-comment\">/**</span></span><br><span class=\"hljs-comment\"><span class=\"language-javascript\">         * <span class=\"hljs-doctag\">@function</span> 子路由事件处理函数, 步骤完成</span></span><br><span class=\"hljs-comment\"><span class=\"language-javascript\">         * <span class=\"hljs-doctag\">@param</span> &#123;<span class=\"hljs-type\">*</span>&#125; data 子路由组件传递的数据</span></span><br><span class=\"hljs-comment\"><span class=\"language-javascript\">         */</span></span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">complete</span> = (<span class=\"hljs-params\">data</span>) =&gt; &#123;</span><br><span class=\"language-javascript\">            <span class=\"hljs-comment\">// 这里做步骤完成后的操作, 这里为了演示只是进行了简单的提示,和打印控制台</span></span><br><span class=\"language-javascript\">            <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">info</span>(<span class=\"hljs-string\">`Steps: <span class=\"hljs-subst\">$&#123;stepsItems.value[data.value.index].label&#125;</span>传递的数据`</span>, data.<span class=\"hljs-property\">value</span>)</span><br><span class=\"language-javascript\">            <span class=\"hljs-title function_\">alert</span>(<span class=\"hljs-string\">&#x27;步骤完成&#x27;</span>)</span><br><span class=\"language-javascript\">        &#125;;</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">return</span> &#123;</span><br><span class=\"language-javascript\">            stepsItems, formObject,</span><br><span class=\"language-javascript\">            nextPage, prevPage, complete</span><br><span class=\"language-javascript\">        &#125;</span><br><span class=\"language-javascript\">    &#125;</span><br><span class=\"language-javascript\">&#125;</span><br><span class=\"language-javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>访问 <code>/tv</code> ,可以看到步骤条已经创建。</p>\n<p><img src=\"/images/post/Use-Primevue-Steps-component-vue3/3.png\"></p>\n<h4 id=\"2-4-2-创建子路由组件\"><a href=\"#2-4-2-创建子路由组件\" class=\"headerlink\" title=\"2.4.2 创建子路由组件\"></a>2.4.2 创建子路由组件</h4><p>在 <code>primevue-steps/src/components</code> 目录下创建路由文件三个组件提供个<code>steps</code>组件使用</p>\n<ul>\n<li>P1.vue</li>\n<li>P2.vue</li>\n<li>P3.vue</li>\n</ul>\n<p><img src=\"/images/post/Use-Primevue-Steps-component-vue3/4.png\"></p>\n<p><strong>P1.vue</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h4</span>&gt;</span>步骤一：/tv/p1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h4</span>&gt;</span><br>        <span class=\"hljs-comment\">&lt;!-- 下一页控制按钮 --&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">&quot;nextPage&quot;</span>&gt;</span>下一步<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\"></span><br><span class=\"language-javascript\"><span class=\"hljs-keyword\">import</span> &#123;ref&#125; <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;vue&#x27;</span></span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> &#123;</span><br><span class=\"language-javascript\">    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;P1&#x27;</span>,</span><br><span class=\"language-javascript\">    <span class=\"hljs-attr\">components</span>: &#123; &#125;,</span><br><span class=\"language-javascript\">    <span class=\"hljs-comment\">// 声明接收steps组件传递的数据</span></span><br><span class=\"language-javascript\">    <span class=\"hljs-attr\">props</span>: &#123;</span><br><span class=\"language-javascript\">        <span class=\"hljs-attr\">formData</span>: <span class=\"hljs-title class_\">Object</span></span><br><span class=\"language-javascript\">    &#125;,</span><br><span class=\"language-javascript\">    <span class=\"hljs-comment\">// 声明事件</span></span><br><span class=\"language-javascript\">    <span class=\"hljs-attr\">emits</span>: [<span class=\"hljs-string\">&#x27;prevPage&#x27;</span>, <span class=\"hljs-string\">&#x27;nextPage&#x27;</span>, <span class=\"hljs-string\">&#x27;complete&#x27;</span>],</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">    <span class=\"hljs-title function_\">setup</span>(<span class=\"hljs-params\">props, ctx</span>) &#123;</span><br><span class=\"language-javascript\">        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;步骤一, Steps传递的数据:&#x27;</span>, props.<span class=\"hljs-property\">formData</span>)</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">        <span class=\"hljs-comment\">// 当前组件的数据, nextPage事件发出时传递给Steps组件</span></span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">const</span> data = <span class=\"hljs-title function_\">ref</span>(&#123;</span><br><span class=\"language-javascript\">            <span class=\"hljs-attr\">formData</span>: &#123;</span><br><span class=\"language-javascript\">                <span class=\"hljs-attr\">msg</span>: <span class=\"hljs-string\">&#x27;我是步骤一&#x27;</span></span><br><span class=\"language-javascript\">            &#125;,</span><br><span class=\"language-javascript\">            <span class=\"hljs-attr\">index</span>: <span class=\"hljs-number\">0</span></span><br><span class=\"language-javascript\">        &#125;)</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">        <span class=\"hljs-comment\">/**</span></span><br><span class=\"hljs-comment\"><span class=\"language-javascript\">         * <span class=\"hljs-doctag\">@function</span> 向steps组件发出nextPage事件，让steps组件控制router跳转到下一页</span></span><br><span class=\"hljs-comment\"><span class=\"language-javascript\">         */</span></span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">nextPage</span> = (<span class=\"hljs-params\"></span>) =&gt; &#123;</span><br><span class=\"language-javascript\">            ctx.<span class=\"hljs-title function_\">emit</span>(<span class=\"hljs-string\">&#x27;nextPage&#x27;</span>, data)</span><br><span class=\"language-javascript\">        &#125;</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">return</span> &#123;</span><br><span class=\"language-javascript\">            nextPage</span><br><span class=\"language-javascript\">        &#125;</span><br><span class=\"language-javascript\">    &#125;</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">    </span><br><span class=\"language-javascript\">&#125;</span><br><span class=\"language-javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span> <span class=\"hljs-attr\">scoped</span>&gt;</span><span class=\"language-css\"></span><br><span class=\"language-css\">    <span class=\"hljs-selector-tag\">div</span> &#123;</span><br><span class=\"language-css\">        <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">100%</span>;</span><br><span class=\"language-css\">        <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">100px</span>;</span><br><span class=\"language-css\">        <span class=\"hljs-attribute\">border-radius</span>: <span class=\"hljs-number\">10px</span>;</span><br><span class=\"language-css\">        <span class=\"hljs-attribute\">margin-top</span>: <span class=\"hljs-number\">10px</span>;</span><br><span class=\"language-css\">        <span class=\"hljs-attribute\">box-shadow</span>: <span class=\"hljs-number\">0px</span> <span class=\"hljs-number\">0px</span> <span class=\"hljs-number\">10px</span> <span class=\"hljs-number\">5px</span> <span class=\"hljs-number\">#666666</span>;</span><br><span class=\"language-css\">    &#125;</span><br><span class=\"language-css\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p><strong>P2.vue</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h4</span>&gt;</span>步骤二：/tv/p2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h4</span>&gt;</span><br>        <span class=\"hljs-comment\">&lt;!-- 上一页,下一页控制按钮 --&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">&quot;prevPage&quot;</span>&gt;</span>上一步<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">&quot;nextPage&quot;</span>&gt;</span>下一步<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\"></span><br><span class=\"language-javascript\"><span class=\"hljs-keyword\">import</span> &#123;ref&#125; <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;vue&#x27;</span></span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> &#123;</span><br><span class=\"language-javascript\">    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;P2&#x27;</span>,</span><br><span class=\"language-javascript\">    <span class=\"hljs-attr\">components</span>: &#123; &#125;,</span><br><span class=\"language-javascript\">    <span class=\"hljs-comment\">// 声明接收steps组件传递的数据</span></span><br><span class=\"language-javascript\">    <span class=\"hljs-attr\">props</span>: &#123;</span><br><span class=\"language-javascript\">        <span class=\"hljs-attr\">formData</span>: <span class=\"hljs-title class_\">Object</span></span><br><span class=\"language-javascript\">    &#125;,</span><br><span class=\"language-javascript\">    <span class=\"hljs-comment\">// 声明事件</span></span><br><span class=\"language-javascript\">    <span class=\"hljs-attr\">emits</span>: [<span class=\"hljs-string\">&#x27;prevPage&#x27;</span>, <span class=\"hljs-string\">&#x27;nextPage&#x27;</span>, <span class=\"hljs-string\">&#x27;complete&#x27;</span>],</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">    <span class=\"hljs-title function_\">setup</span>(<span class=\"hljs-params\">props, ctx</span>) &#123;</span><br><span class=\"language-javascript\">        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;步骤二, Steps传递的数据:&#x27;</span>, props.<span class=\"hljs-property\">formData</span>)</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">        <span class=\"hljs-comment\">// 当前组件的数据, nextPage事件发出时传递给Steps组件</span></span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">const</span> data = <span class=\"hljs-title function_\">ref</span>(&#123;</span><br><span class=\"language-javascript\">            <span class=\"hljs-attr\">formData</span>: &#123;</span><br><span class=\"language-javascript\">                <span class=\"hljs-attr\">msg</span>: <span class=\"hljs-string\">&#x27;我是步骤二&#x27;</span></span><br><span class=\"language-javascript\">            &#125;,</span><br><span class=\"language-javascript\">            <span class=\"hljs-attr\">index</span>: <span class=\"hljs-number\">1</span></span><br><span class=\"language-javascript\">        &#125;)</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">        <span class=\"hljs-comment\">/**</span></span><br><span class=\"hljs-comment\"><span class=\"language-javascript\">         * <span class=\"hljs-doctag\">@function</span> 向steps组件发出nextPage事件，让steps组件控制router跳转到下一页</span></span><br><span class=\"hljs-comment\"><span class=\"language-javascript\">         */</span></span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">nextPage</span> = (<span class=\"hljs-params\"></span>) =&gt; &#123;</span><br><span class=\"language-javascript\">            ctx.<span class=\"hljs-title function_\">emit</span>(<span class=\"hljs-string\">&#x27;nextPage&#x27;</span>, data)</span><br><span class=\"language-javascript\">        &#125;</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">        <span class=\"hljs-comment\">/**</span></span><br><span class=\"hljs-comment\"><span class=\"language-javascript\">         * <span class=\"hljs-doctag\">@function</span> 向steps组件发出prevPage事件，让steps组件控制router跳转到上一页</span></span><br><span class=\"hljs-comment\"><span class=\"language-javascript\">         */</span></span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">prevPage</span> = (<span class=\"hljs-params\"></span>) =&gt; &#123;</span><br><span class=\"language-javascript\">            ctx.<span class=\"hljs-title function_\">emit</span>(<span class=\"hljs-string\">&#x27;prevPage&#x27;</span>, data)</span><br><span class=\"language-javascript\">        &#125;</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">return</span> &#123;</span><br><span class=\"language-javascript\">            nextPage, prevPage</span><br><span class=\"language-javascript\">        &#125;</span><br><span class=\"language-javascript\">    &#125;</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">    </span><br><span class=\"language-javascript\">&#125;</span><br><span class=\"language-javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span> <span class=\"hljs-attr\">scoped</span>&gt;</span><span class=\"language-css\"></span><br><span class=\"language-css\">    <span class=\"hljs-selector-tag\">div</span> &#123;</span><br><span class=\"language-css\">        <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">100%</span>;</span><br><span class=\"language-css\">        <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">100px</span>;</span><br><span class=\"language-css\">        <span class=\"hljs-attribute\">border-radius</span>: <span class=\"hljs-number\">10px</span>;</span><br><span class=\"language-css\">        <span class=\"hljs-attribute\">margin-top</span>: <span class=\"hljs-number\">10px</span>;</span><br><span class=\"language-css\">        <span class=\"hljs-attribute\">box-shadow</span>: <span class=\"hljs-number\">0px</span> <span class=\"hljs-number\">0px</span> <span class=\"hljs-number\">10px</span> <span class=\"hljs-number\">5px</span> <span class=\"hljs-number\">#666666</span>;</span><br><span class=\"language-css\">    &#125;</span><br><span class=\"language-css\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p><strong>P3.vue</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h4</span>&gt;</span>步骤三：/tv/p3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h4</span>&gt;</span><br>        <span class=\"hljs-comment\">&lt;!-- 上一页,下一页控制按钮 --&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">&quot;prevPage&quot;</span>&gt;</span>上一步<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">&quot;complete&quot;</span>&gt;</span>完成/确定<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\"></span><br><span class=\"language-javascript\"><span class=\"hljs-keyword\">import</span> &#123;ref&#125; <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;vue&#x27;</span></span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> &#123;</span><br><span class=\"language-javascript\">    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;P3&#x27;</span>,</span><br><span class=\"language-javascript\">    <span class=\"hljs-attr\">components</span>: &#123; &#125;,</span><br><span class=\"language-javascript\">    <span class=\"hljs-comment\">// 声明接收steps组件传递的数据</span></span><br><span class=\"language-javascript\">    <span class=\"hljs-attr\">props</span>: &#123;</span><br><span class=\"language-javascript\">        <span class=\"hljs-attr\">formData</span>: <span class=\"hljs-title class_\">Object</span></span><br><span class=\"language-javascript\">    &#125;,</span><br><span class=\"language-javascript\">    <span class=\"hljs-comment\">// 声明事件</span></span><br><span class=\"language-javascript\">    <span class=\"hljs-attr\">emits</span>: [<span class=\"hljs-string\">&#x27;prevPage&#x27;</span>, <span class=\"hljs-string\">&#x27;nextPage&#x27;</span>, <span class=\"hljs-string\">&#x27;complete&#x27;</span>],</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">    <span class=\"hljs-title function_\">setup</span>(<span class=\"hljs-params\">props, ctx</span>) &#123;</span><br><span class=\"language-javascript\">        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;步骤三, Steps传递的数据:&#x27;</span>, props.<span class=\"hljs-property\">formData</span>)</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">        <span class=\"hljs-comment\">// 当前组件的数据, nextPage事件发出时传递给Steps组件</span></span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">const</span> data = <span class=\"hljs-title function_\">ref</span>(&#123;</span><br><span class=\"language-javascript\">            <span class=\"hljs-attr\">formData</span>: &#123;</span><br><span class=\"language-javascript\">                <span class=\"hljs-attr\">msg</span>: <span class=\"hljs-string\">&#x27;我是步骤三&#x27;</span></span><br><span class=\"language-javascript\">            &#125;,</span><br><span class=\"language-javascript\">            <span class=\"hljs-attr\">index</span>: <span class=\"hljs-number\">2</span></span><br><span class=\"language-javascript\">        &#125;)</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">        <span class=\"hljs-comment\">/**</span></span><br><span class=\"hljs-comment\"><span class=\"language-javascript\">         * <span class=\"hljs-doctag\">@function</span> 向steps组件发出prevPage事件，让steps组件控制router跳转到下一页</span></span><br><span class=\"hljs-comment\"><span class=\"language-javascript\">         */</span></span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">prevPage</span> = (<span class=\"hljs-params\"></span>) =&gt; &#123;</span><br><span class=\"language-javascript\">            ctx.<span class=\"hljs-title function_\">emit</span>(<span class=\"hljs-string\">&#x27;prevPage&#x27;</span>, data)</span><br><span class=\"language-javascript\">        &#125;</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">        <span class=\"hljs-comment\">/**</span></span><br><span class=\"hljs-comment\"><span class=\"language-javascript\">         * <span class=\"hljs-doctag\">@function</span> 向steps组件发出complete事件，告知steps组件步骤完成</span></span><br><span class=\"hljs-comment\"><span class=\"language-javascript\">         */</span></span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">complete</span> = (<span class=\"hljs-params\"></span>) =&gt; &#123;</span><br><span class=\"language-javascript\">            ctx.<span class=\"hljs-title function_\">emit</span>(<span class=\"hljs-string\">&#x27;complete&#x27;</span>, data)</span><br><span class=\"language-javascript\">        &#125;</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">return</span> &#123;</span><br><span class=\"language-javascript\">            prevPage, complete</span><br><span class=\"language-javascript\">        &#125;</span><br><span class=\"language-javascript\">    &#125;</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">    </span><br><span class=\"language-javascript\">&#125;</span><br><span class=\"language-javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span> <span class=\"hljs-attr\">scoped</span>&gt;</span><span class=\"language-css\"></span><br><span class=\"language-css\">    <span class=\"hljs-selector-tag\">div</span> &#123;</span><br><span class=\"language-css\">        <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">100%</span>;</span><br><span class=\"language-css\">        <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">100px</span>;</span><br><span class=\"language-css\">        <span class=\"hljs-attribute\">border-radius</span>: <span class=\"hljs-number\">10px</span>;</span><br><span class=\"language-css\">        <span class=\"hljs-attribute\">margin-top</span>: <span class=\"hljs-number\">10px</span>;</span><br><span class=\"language-css\">        <span class=\"hljs-attribute\">box-shadow</span>: <span class=\"hljs-number\">0px</span> <span class=\"hljs-number\">0px</span> <span class=\"hljs-number\">10px</span> <span class=\"hljs-number\">5px</span> <span class=\"hljs-number\">#666666</span>;</span><br><span class=\"language-css\">    &#125;</span><br><span class=\"language-css\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"2-4-3-为子路由组件指定路由地址\"><a href=\"#2-4-3-为子路由组件指定路由地址\" class=\"headerlink\" title=\"2.4.3 为子路由组件指定路由地址\"></a>2.4.3 为子路由组件指定路由地址</h4><p>修改路由文件 <code>primevue-steps/src/router/index.js</code>，为TestView视图添加子路由</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> &#123; createRouter, createWebHistory &#125; <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;vue-router&quot;</span>;<br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">HelloWorld</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@/components/HelloWorld&quot;</span><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">TestView</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@/views/TestView&quot;</span><br><span class=\"hljs-comment\">// 导入子路由组件</span><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-variable constant_\">P1</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@/components/P1&quot;</span><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-variable constant_\">P2</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@/components/P2&quot;</span><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-variable constant_\">P3</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@/components/P3&quot;</span><br><br><br><span class=\"hljs-keyword\">const</span> routes = [<br>    &#123;<br>        <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;index&quot;</span>,<br>        <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">&quot;/&quot;</span>,<br>        <span class=\"hljs-attr\">component</span>: <span class=\"hljs-title class_\">HelloWorld</span><br>    &#125;, &#123;<br>        <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;testView&quot;</span>,<br>        <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">&quot;/tv&quot;</span>,<br>        <span class=\"hljs-attr\">component</span>: <span class=\"hljs-title class_\">TestView</span>,<br>        <span class=\"hljs-comment\">// setps组件子路由</span><br>        <span class=\"hljs-attr\">children</span>: [<br>            &#123;<span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">&#x27;p1&#x27;</span>, <span class=\"hljs-attr\">component</span>: <span class=\"hljs-variable constant_\">P1</span>&#125;,<br>            &#123;<span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">&#x27;p2&#x27;</span>, <span class=\"hljs-attr\">component</span>: <span class=\"hljs-variable constant_\">P2</span>&#125;,<br>            &#123;<span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">&#x27;p3&#x27;</span>, <span class=\"hljs-attr\">component</span>: <span class=\"hljs-variable constant_\">P3</span>&#125;,<br>        ]<br>    &#125;<br>]<br><br><span class=\"hljs-keyword\">const</span> router = <span class=\"hljs-title function_\">createRouter</span>(&#123;<br>    <span class=\"hljs-attr\">history</span>: <span class=\"hljs-title function_\">createWebHistory</span>(),<br>    routes<br>&#125;)<br><br><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> router;<br></code></pre></td></tr></table></figure>\n\n<p>完成后刷新页面并访问路径 <code>/tv/p1</code>，即可看到步骤页</p>\n<p><img src=\"/images/post/Use-Primevue-Steps-component-vue3/5.gif\"></p>\n<h2 id=\"3-演示Demo\"><a href=\"#3-演示Demo\" class=\"headerlink\" title=\"3. 演示Demo\"></a>3. 演示Demo</h2><p>文章中所用的测试Demo已经推送到github：<a href=\"https://github.com/mangfu26/blog-share/tree/primevue-steps\">https://github.com/mangfu26/blog-share/tree/primevue-steps</a></p>\n<p>你可以使用以下命令克隆使用</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">git <span class=\"hljs-built_in\">clone</span> -b primevue-steps https://github.com/mangfu26/blog-share.git primevue-steps<br></code></pre></td></tr></table></figure>","site":{"data":{}},"wordcount":12195,"excerpt":"","more":"<h1 id=\"PrimeVue框架–Steps组件使用\"><a href=\"#PrimeVue框架–Steps组件使用\" class=\"headerlink\" title=\"PrimeVue框架–Steps组件使用\"></a>PrimeVue框架–Steps组件使用</h1><h2 id=\"1-组件简介\"><a href=\"#1-组件简介\" class=\"headerlink\" title=\"1. 组件简介\"></a>1. 组件简介</h2><blockquote>\n<p><strong>PrimeVue</strong></p>\n<p>Steps 组件是向导工作流中步骤的指示器。</p>\n<p><a href=\"https://www.primefaces.org/primevue/steps\">https://www.primefaces.org/primevue/steps</a></p>\n</blockquote>\n<p>通常称为 <code>步骤条</code>, <code>步进条</code></p>\n<p>按理来说，组件的使用直接参考官方文档即可，不需要记录到博客。</p>\n<p>但是 PrimeVue 的步骤条与 Element 框架点区别，PrimeVue 的步骤条是基于 Vue Router 的，之前没有接触过，使用过程中踩了一两个坑，所以还是打算用博客的形式记录一下使用方法，供日后参考，而不是苦哈哈的再去研究官方文档💀</p>\n<h2 id=\"2-使用方法\"><a href=\"#2-使用方法\" class=\"headerlink\" title=\"2. 使用方法\"></a>2. 使用方法</h2><blockquote>\n<p><strong>小提示</strong>:</p>\n<p>所有代码都基于Vue3项目，所以确保您拥有一个vue3项目</p>\n<p>如果您没有，请使用 <a href=\"https://cli.vuejs.org/zh/\">Vue-CLI</a> 创建，参考：<a href=\"https://cli.vuejs.org/zh/guide/creating-a-project.html\">https://cli.vuejs.org/zh/guide/creating-a-project.html</a></p>\n</blockquote>\n<p><strong>创建一个Vue3项目</strong></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">[mf~/project/demo] $ vue create primevue-steps<br></code></pre></td></tr></table></figure>\n\n<p><strong>选择Vue3选项</strong></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">Vue CLI v4.5.15<br>┌──────────────────────────────────────────┐<br>│                                          │<br>│   New version available 4.5.15 → 5.0.8   │<br>│     Run npm i -g @vue/cli to update!     │<br>│                                          │<br>└──────────────────────────────────────────┘<br><br>? Please pick a preset: <br>  Default ([Vue 2] babel, eslint) <br>❯ Default (Vue 3) ([Vue 3] babel, eslint) <br>  Manually select features <br></code></pre></td></tr></table></figure>\n\n<p><strong>等待创建完成</strong></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">Vue CLI v4.5.15<br>✨  Creating project <span class=\"hljs-keyword\">in</span> /home/mf/project/demo/primevue-steps.<br>🗃  Initializing git repository...<br>⚙️  Installing CLI plugins. This might take a <span class=\"hljs-keyword\">while</span>...<br><br><br>added 1300 packages <span class=\"hljs-keyword\">in</span> 1m<br>🚀  Invoking generators...<br>📦  Installing additional dependencies...<br><br><br>added 71 packages <span class=\"hljs-keyword\">in</span> 13s<br>⚓  Running completion hooks...<br><br>📄  Generating README.md...<br><br>🎉  Successfully created project primevue-steps.<br>👉  Get started with the following commands:<br><br> $ <span class=\"hljs-built_in\">cd</span> primevue-steps<br> $ npm run serve<br><br> WARN  Skipped git commit due to missing username and email <span class=\"hljs-keyword\">in</span> git config, or failed to sign commit.<br>You will need to perform the initial commit yourself.<br></code></pre></td></tr></table></figure>\n\n<p>创建完成后，切换到项目目录(<code>例子中是 /home/mf/project/demo/primevue-steps</code>)</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\"><span class=\"hljs-built_in\">cd</span> primevue-steps<br></code></pre></td></tr></table></figure>\n\n\n<h3 id=\"2-1-安装-Vue-Router\"><a href=\"#2-1-安装-Vue-Router\" class=\"headerlink\" title=\"2.1 安装 Vue Router\"></a>2.1 安装 Vue Router</h3><p>由于 steps组件 是基于 Vue Router 的，所以使用前需要安装 Vue Router</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">npm install vue-router@4<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">[mf~/project/demo/primevue-steps] (master) $ npm install vue-router@4<br><br>added 2 packages, and audited 1374 packages <span class=\"hljs-keyword\">in</span> 18s<br><br>1 package is looking <span class=\"hljs-keyword\">for</span> funding<br>  run `npm fund` <span class=\"hljs-keyword\">for</span> details<br><br>25 vulnerabilities (11 moderate, 7 high, 7 critical)<br><br>To address issues that <span class=\"hljs-keyword\">do</span> not require attention, run:<br>  npm audit fix<br><br>To address all issues (including breaking changes), run:<br>  npm audit fix --force<br><br>Run `npm audit` <span class=\"hljs-keyword\">for</span> details.<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"2-2-安装-PrimeVue\"><a href=\"#2-2-安装-PrimeVue\" class=\"headerlink\" title=\"2.2 安装 PrimeVue\"></a>2.2 安装 PrimeVue</h3><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">npm install primevue@^3.15.0 --save<br>npm install primeicons --save<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">[mf~/project/demo/primevue-steps] (master) $ npm install primevue@^3.15.0 --save<br><br>added 2 packages, and audited 1376 packages <span class=\"hljs-keyword\">in</span> 17s<br><br>1 package is looking <span class=\"hljs-keyword\">for</span> funding<br>  run `npm fund` <span class=\"hljs-keyword\">for</span> details<br><br>25 vulnerabilities (11 moderate, 7 high, 7 critical)<br><br>To address issues that <span class=\"hljs-keyword\">do</span> not require attention, run:<br>  npm audit fix<br><br>To address all issues (including breaking changes), run:<br>  npm audit fix --force<br><br>Run `npm audit` <span class=\"hljs-keyword\">for</span> details.<br>[mf~/project/demo/primevue-steps] (master) $ npm install primeicons --save<br><br>up to <span class=\"hljs-built_in\">date</span>, audited 1376 packages <span class=\"hljs-keyword\">in</span> 9s<br><br>1 package is looking <span class=\"hljs-keyword\">for</span> funding<br>  run `npm fund` <span class=\"hljs-keyword\">for</span> details<br><br>25 vulnerabilities (11 moderate, 7 high, 7 critical)<br><br>To address issues that <span class=\"hljs-keyword\">do</span> not require attention, run:<br>  npm audit fix<br><br>To address all issues (including breaking changes), run:<br>  npm audit fix --force<br><br>Run `npm audit` <span class=\"hljs-keyword\">for</span> details.<br>[mf~/project/demo/primevue-steps] (master) $ <br></code></pre></td></tr></table></figure>\n\n<h3 id=\"2-2-创建测试视图-view\"><a href=\"#2-2-创建测试视图-view\" class=\"headerlink\" title=\"2.2 创建测试视图(view)\"></a>2.2 创建测试视图(view)</h3><p>在 <code>primevue-steps/src/</code> 目录下创建目录 <code>views</code>，用于存储视图（<code>primevue-steps/src/views</code>），在此目录下创建视图文件 <code>TestView.vue</code></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span>&gt;</span>PrimeVue Steps 组件测试视图<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">    <span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> &#123;</span><br><span class=\"language-javascript\">        <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;TestView&#x27;</span>,</span><br><span class=\"language-javascript\">        <span class=\"hljs-attr\">components</span>: &#123;&#125;,</span><br><span class=\"language-javascript\">        <span class=\"hljs-title function_\">setup</span>(<span class=\"hljs-params\"></span>) &#123;</span><br><span class=\"language-javascript\">            </span><br><span class=\"language-javascript\">        &#125;</span><br><span class=\"language-javascript\">    &#125;</span><br><span class=\"language-javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"2-3-为项目引入路由并为测试视图创建一个路由\"><a href=\"#2-3-为项目引入路由并为测试视图创建一个路由\" class=\"headerlink\" title=\"2.3 为项目引入路由并为测试视图创建一个路由\"></a>2.3 为项目引入路由并为测试视图创建一个路由</h3><p>在 <code>primevue-steps/src/</code> 目录下创建目录 <code>router</code>，用于存储路由文件（<code>primevue-steps/src/router</code>），在此目录下创建路由文件 <code>index.js</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> &#123; createRouter, createWebHistory &#125; <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;vue-router&quot;</span>;<br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">HelloWorld</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@/components/HelloWorld&quot;</span><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">TestView</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@/views/TestView&quot;</span><br><br><span class=\"hljs-comment\">// 两个路由，根路由(/) 和 测试视图路由(/tv)</span><br><span class=\"hljs-comment\">// 根路由和默认的示例HelloWorld组件绑定，用于显示我们的首页</span><br><span class=\"hljs-comment\">// 测试视图路由和我们的测试视图绑定，用于显示我们的测试视图</span><br><span class=\"hljs-keyword\">const</span> routes = [<br>    &#123;<br>        <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;index&quot;</span>,<br>        <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">&quot;/&quot;</span>,<br>        <span class=\"hljs-attr\">component</span>: <span class=\"hljs-title class_\">HelloWorld</span><br>    &#125;, &#123;<br>        <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;testView&quot;</span>,<br>        <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">&quot;/tv&quot;</span>,<br>        <span class=\"hljs-attr\">component</span>: <span class=\"hljs-title class_\">TestView</span><br>    &#125;<br>]<br><br><span class=\"hljs-keyword\">const</span> router = <span class=\"hljs-title function_\">createRouter</span>(&#123;<br>    <span class=\"hljs-attr\">history</span>: <span class=\"hljs-title function_\">createWebHistory</span>(),<br>    routes<br>&#125;)<br><br><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> router;<br></code></pre></td></tr></table></figure>\n\n<p>路由文件创建完成，在 <code>primevue-steps/src/main.js</code> 文件中导入并使用路由</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> &#123; createApp &#125; <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;vue&#x27;</span><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">App</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;./App.vue&#x27;</span><br><span class=\"hljs-comment\">// 导入路由</span><br><span class=\"hljs-keyword\">import</span> router <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@/router&#x27;</span><br><span class=\"hljs-comment\">// 导入PrimeVue样式</span><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;primeicons/primeicons.css&#x27;</span><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;primevue/resources/primevue.min.css&#x27;</span><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;primevue/resources/themes/saga-blue/theme.css&#x27;</span><br><br><br><span class=\"hljs-title function_\">createApp</span>(<span class=\"hljs-title class_\">App</span>).<span class=\"hljs-title function_\">use</span>(router).<span class=\"hljs-title function_\">mount</span>(<span class=\"hljs-string\">&#x27;#app&#x27;</span>)<br></code></pre></td></tr></table></figure>\n\n<p>最后在 <code>primevue-steps/src/App.vue</code> 中注释掉默认内容，插入 <code>&lt;router-view&gt;&lt;/router-view&gt;</code> 标签，路由所对应的组件&#x2F;视图都将渲染到此处</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span><br>  <span class=\"hljs-comment\">&lt;!-- &lt;img alt=&quot;Vue logo&quot; src=&quot;./assets/logo.png&quot;&gt;</span><br><span class=\"hljs-comment\">  &lt;HelloWorld msg=&quot;Welcome to Your Vue.js App&quot;/&gt; --&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">router-view</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">router-view</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\"></span><br><span class=\"language-javascript\"><span class=\"hljs-comment\">// import HelloWorld from &#x27;./components/HelloWorld.vue&#x27;</span></span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> &#123;</span><br><span class=\"language-javascript\">  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;App&#x27;</span>,</span><br><span class=\"language-javascript\">  <span class=\"hljs-attr\">components</span>: &#123;</span><br><span class=\"language-javascript\">    <span class=\"hljs-comment\">// HelloWorld</span></span><br><span class=\"language-javascript\">  &#125;</span><br><span class=\"language-javascript\">&#125;</span><br><span class=\"language-javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><span class=\"language-css\"></span><br><span class=\"language-css\"><span class=\"hljs-selector-id\">#app</span> &#123;</span><br><span class=\"language-css\">  <span class=\"hljs-attribute\">font-family</span>: Avenir, Helvetica, Arial, sans-serif;</span><br><span class=\"language-css\">  -webkit-<span class=\"hljs-attribute\">font-smoothing</span>: antialiased;</span><br><span class=\"language-css\">  -moz-osx-<span class=\"hljs-attribute\">font-smoothing</span>: grayscale;</span><br><span class=\"language-css\">  <span class=\"hljs-attribute\">text-align</span>: center;</span><br><span class=\"language-css\">  <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">#2c3e50</span>;</span><br><span class=\"language-css\">  <span class=\"hljs-attribute\">margin-top</span>: <span class=\"hljs-number\">60px</span>;</span><br><span class=\"language-css\">&#125;</span><br><span class=\"language-css\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br><br></code></pre></td></tr></table></figure>\n\n<p>启动测试服务器</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">[mf~/project/demo/primevue-steps] (master) $ npm run serve<br><br> DONE  Compiled successfully <span class=\"hljs-keyword\">in</span> 300ms                                                                                                                                                                                11:39:34 AM<br><br><br>  App running at:<br>  - Local:   http://localhost:8081/ <br>  - Network: http://192.168.8.7:8081/<br><br><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"/images/post/Use-Primevue-Steps-component-vue3/1.gif\"></p>\n<h3 id=\"2-4-在测试视图中引入Steps组件并使用\"><a href=\"#2-4-在测试视图中引入Steps组件并使用\" class=\"headerlink\" title=\"2.4 在测试视图中引入Steps组件并使用\"></a>2.4 在测试视图中引入Steps组件并使用</h3><blockquote>\n<p><strong>知识点：</strong></p>\n<p>PrimeVue中Steps组件的步骤组件切换使用嵌套路由实现，关系图如下：</p>\n</blockquote>\n<p><img src=\"/images/post/Use-Primevue-Steps-component-vue3/2.jpg\"></p>\n<h4 id=\"2-4-1-在测试视图中使用steps组件\"><a href=\"#2-4-1-在测试视图中使用steps组件\" class=\"headerlink\" title=\"2.4.1 在测试视图中使用steps组件\"></a>2.4.1 在测试视图中使用steps组件</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span>&gt;</span>PrimeVue Steps 组件测试视图<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span><br>    <span class=\"hljs-comment\">&lt;!-- </span><br><span class=\"hljs-comment\">        sreps组件本身 </span><br><span class=\"hljs-comment\">        :model=&quot;stepsItems&quot; 绑定步骤信息，每个步骤项为一个对象，指定步骤名称和要跳转的子路由地址</span><br><span class=\"hljs-comment\">        :readonly=&quot;true&quot; 只读步骤，步骤条不可点击，如果为false，则可以点击相应的步骤项跳转到的子路由</span><br><span class=\"hljs-comment\">    --&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Steps</span> <span class=\"hljs-attr\">:model</span>=<span class=\"hljs-string\">&quot;stepsItems&quot;</span> <span class=\"hljs-attr\">:readonly</span>=<span class=\"hljs-string\">&quot;true&quot;</span> /&gt;</span><br>    <span class=\"hljs-comment\">&lt;!-- </span><br><span class=\"hljs-comment\">        嵌套路由渲染区, 用于渲染步骤组件</span><br><span class=\"hljs-comment\">        :formData=&quot;formObject&quot; 向子路由传递数据。可选，一般用于给子路由的组件传递初始值，如果不需要可以忽略</span><br><span class=\"hljs-comment\">        @prevPage=&quot;prevPage($event)&quot; 监听子路由prevPage事件, 用于跳转到上一页(上一步)</span><br><span class=\"hljs-comment\">        @nextPage=&quot;nextPage($event)&quot; 监听子路由nextPage事件, 用于跳转到下一页(下一步)</span><br><span class=\"hljs-comment\">        @complete=&quot;complete&quot; 监听子路由complete事件，该事件触发时表示步骤完成</span><br><span class=\"hljs-comment\">    --&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">router-view</span> </span><br><span class=\"hljs-tag\">        <span class=\"hljs-attr\">v-slot</span>=<span class=\"hljs-string\">&quot;&#123; Component &#125;&quot;</span> </span><br><span class=\"hljs-tag\">        <span class=\"hljs-attr\">:formData</span>=<span class=\"hljs-string\">&quot;formObject&quot;</span> </span><br><span class=\"hljs-tag\">        @<span class=\"hljs-attr\">prevPage</span>=<span class=\"hljs-string\">&quot;prevPage($event)&quot;</span> </span><br><span class=\"hljs-tag\">        @<span class=\"hljs-attr\">nextPage</span>=<span class=\"hljs-string\">&quot;nextPage($event)&quot;</span></span><br><span class=\"hljs-tag\">        @<span class=\"hljs-attr\">complete</span>=<span class=\"hljs-string\">&quot;complete($event)&quot;</span></span><br><span class=\"hljs-tag\">    &gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">keep-alive</span>&gt;</span><br>            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">component</span> <span class=\"hljs-attr\">:is</span>=<span class=\"hljs-string\">&quot;Component&quot;</span> /&gt;</span><br>        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">keep-alive</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">router-view</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\"></span><br><span class=\"language-javascript\"><span class=\"hljs-keyword\">import</span> &#123; ref &#125; <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;vue&#x27;</span></span><br><span class=\"language-javascript\"><span class=\"hljs-comment\">// 导入router, 用于控制子路由</span></span><br><span class=\"language-javascript\"><span class=\"hljs-keyword\">import</span> &#123; useRouter &#125; <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;vue-router&#x27;</span></span><br><span class=\"language-javascript\"><span class=\"hljs-comment\">// 导入 steps 组件</span></span><br><span class=\"language-javascript\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">Steps</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;primevue/steps&#x27;</span></span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> &#123;</span><br><span class=\"language-javascript\">    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;TestView&#x27;</span>,</span><br><span class=\"language-javascript\">    <span class=\"hljs-attr\">components</span>: &#123; <span class=\"hljs-title class_\">Steps</span> &#125;,</span><br><span class=\"language-javascript\">    <span class=\"hljs-title function_\">setup</span>(<span class=\"hljs-params\"></span>) &#123;</span><br><span class=\"language-javascript\">        <span class=\"hljs-comment\">// 路由实例, 控制子由跳转</span></span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">const</span> router = <span class=\"hljs-title function_\">useRouter</span>()</span><br><span class=\"language-javascript\">        <span class=\"hljs-comment\">// 步骤条信息</span></span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">const</span> stepsItems = <span class=\"hljs-title function_\">ref</span>([</span><br><span class=\"language-javascript\">            &#123; <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&#x27;步骤1&#x27;</span>, <span class=\"hljs-attr\">to</span>: <span class=\"hljs-string\">&#x27;/tv/p1&#x27;</span> &#125;,</span><br><span class=\"language-javascript\">            &#123; <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&#x27;步骤2&#x27;</span>, <span class=\"hljs-attr\">to</span>: <span class=\"hljs-string\">&#x27;/tv/p2&#x27;</span> &#125;,</span><br><span class=\"language-javascript\">            &#123; <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&#x27;步骤3&#x27;</span>, <span class=\"hljs-attr\">to</span>: <span class=\"hljs-string\">&#x27;/tv/p3&#x27;</span> &#125;,</span><br><span class=\"language-javascript\">        ])</span><br><span class=\"language-javascript\">        <span class=\"hljs-comment\">// 数据</span></span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">const</span> formObject = <span class=\"hljs-title function_\">ref</span>(&#123;</span><br><span class=\"language-javascript\">            <span class=\"hljs-attr\">msg</span>: <span class=\"hljs-string\">&#x27;Steps数据&#x27;</span></span><br><span class=\"language-javascript\">        &#125;)</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">        <span class=\"hljs-comment\">/**</span></span><br><span class=\"hljs-comment\"><span class=\"language-javascript\">         * <span class=\"hljs-doctag\">@function</span> 子路由事件处理函数, 跳转到下一页(下一个步骤)</span></span><br><span class=\"hljs-comment\"><span class=\"language-javascript\">         * <span class=\"hljs-doctag\">@param</span> &#123;<span class=\"hljs-type\">*</span>&#125; data 子路由组件传递的数据</span></span><br><span class=\"hljs-comment\"><span class=\"language-javascript\">         */</span></span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">nextPage</span> = (<span class=\"hljs-params\">data</span>) =&gt; &#123;</span><br><span class=\"language-javascript\">            <span class=\"hljs-comment\">// 这里进行子路由组件数据的处理</span></span><br><span class=\"language-javascript\">            <span class=\"hljs-comment\">// 这里为了演示只是向控制台打印传递的数据</span></span><br><span class=\"language-javascript\">            <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">info</span>(<span class=\"hljs-string\">`Steps: <span class=\"hljs-subst\">$&#123;stepsItems.value[data.value.index].label&#125;</span>传递的数据`</span>, data.<span class=\"hljs-property\">value</span>)</span><br><span class=\"language-javascript\">            <span class=\"hljs-comment\">// 跳转到下一个步骤, 下一个步骤的路由信息由stepsItems定义</span></span><br><span class=\"language-javascript\">            router.<span class=\"hljs-title function_\">push</span>(stepsItems.<span class=\"hljs-property\">value</span>[data.<span class=\"hljs-property\">value</span>.<span class=\"hljs-property\">index</span> + <span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">to</span>);</span><br><span class=\"language-javascript\">        &#125;</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">        <span class=\"hljs-comment\">/**</span></span><br><span class=\"hljs-comment\"><span class=\"language-javascript\">         * <span class=\"hljs-doctag\">@function</span> 子路由事件处理函数, 跳转到上一页(上一个步骤)</span></span><br><span class=\"hljs-comment\"><span class=\"language-javascript\">         * <span class=\"hljs-doctag\">@param</span> &#123;<span class=\"hljs-type\">*</span>&#125; data 子路由组件传递的数据</span></span><br><span class=\"hljs-comment\"><span class=\"language-javascript\">         */</span></span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">prevPage</span> = (<span class=\"hljs-params\">data</span>) =&gt; &#123;</span><br><span class=\"language-javascript\">            router.<span class=\"hljs-title function_\">push</span>(stepsItems.<span class=\"hljs-property\">value</span>[data.<span class=\"hljs-property\">value</span>.<span class=\"hljs-property\">index</span> - <span class=\"hljs-number\">1</span>].<span class=\"hljs-property\">to</span>);</span><br><span class=\"language-javascript\">        &#125;;</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">        <span class=\"hljs-comment\">/**</span></span><br><span class=\"hljs-comment\"><span class=\"language-javascript\">         * <span class=\"hljs-doctag\">@function</span> 子路由事件处理函数, 步骤完成</span></span><br><span class=\"hljs-comment\"><span class=\"language-javascript\">         * <span class=\"hljs-doctag\">@param</span> &#123;<span class=\"hljs-type\">*</span>&#125; data 子路由组件传递的数据</span></span><br><span class=\"hljs-comment\"><span class=\"language-javascript\">         */</span></span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">complete</span> = (<span class=\"hljs-params\">data</span>) =&gt; &#123;</span><br><span class=\"language-javascript\">            <span class=\"hljs-comment\">// 这里做步骤完成后的操作, 这里为了演示只是进行了简单的提示,和打印控制台</span></span><br><span class=\"language-javascript\">            <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">info</span>(<span class=\"hljs-string\">`Steps: <span class=\"hljs-subst\">$&#123;stepsItems.value[data.value.index].label&#125;</span>传递的数据`</span>, data.<span class=\"hljs-property\">value</span>)</span><br><span class=\"language-javascript\">            <span class=\"hljs-title function_\">alert</span>(<span class=\"hljs-string\">&#x27;步骤完成&#x27;</span>)</span><br><span class=\"language-javascript\">        &#125;;</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">return</span> &#123;</span><br><span class=\"language-javascript\">            stepsItems, formObject,</span><br><span class=\"language-javascript\">            nextPage, prevPage, complete</span><br><span class=\"language-javascript\">        &#125;</span><br><span class=\"language-javascript\">    &#125;</span><br><span class=\"language-javascript\">&#125;</span><br><span class=\"language-javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>访问 <code>/tv</code> ,可以看到步骤条已经创建。</p>\n<p><img src=\"/images/post/Use-Primevue-Steps-component-vue3/3.png\"></p>\n<h4 id=\"2-4-2-创建子路由组件\"><a href=\"#2-4-2-创建子路由组件\" class=\"headerlink\" title=\"2.4.2 创建子路由组件\"></a>2.4.2 创建子路由组件</h4><p>在 <code>primevue-steps/src/components</code> 目录下创建路由文件三个组件提供个<code>steps</code>组件使用</p>\n<ul>\n<li>P1.vue</li>\n<li>P2.vue</li>\n<li>P3.vue</li>\n</ul>\n<p><img src=\"/images/post/Use-Primevue-Steps-component-vue3/4.png\"></p>\n<p><strong>P1.vue</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h4</span>&gt;</span>步骤一：/tv/p1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h4</span>&gt;</span><br>        <span class=\"hljs-comment\">&lt;!-- 下一页控制按钮 --&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">&quot;nextPage&quot;</span>&gt;</span>下一步<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\"></span><br><span class=\"language-javascript\"><span class=\"hljs-keyword\">import</span> &#123;ref&#125; <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;vue&#x27;</span></span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> &#123;</span><br><span class=\"language-javascript\">    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;P1&#x27;</span>,</span><br><span class=\"language-javascript\">    <span class=\"hljs-attr\">components</span>: &#123; &#125;,</span><br><span class=\"language-javascript\">    <span class=\"hljs-comment\">// 声明接收steps组件传递的数据</span></span><br><span class=\"language-javascript\">    <span class=\"hljs-attr\">props</span>: &#123;</span><br><span class=\"language-javascript\">        <span class=\"hljs-attr\">formData</span>: <span class=\"hljs-title class_\">Object</span></span><br><span class=\"language-javascript\">    &#125;,</span><br><span class=\"language-javascript\">    <span class=\"hljs-comment\">// 声明事件</span></span><br><span class=\"language-javascript\">    <span class=\"hljs-attr\">emits</span>: [<span class=\"hljs-string\">&#x27;prevPage&#x27;</span>, <span class=\"hljs-string\">&#x27;nextPage&#x27;</span>, <span class=\"hljs-string\">&#x27;complete&#x27;</span>],</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">    <span class=\"hljs-title function_\">setup</span>(<span class=\"hljs-params\">props, ctx</span>) &#123;</span><br><span class=\"language-javascript\">        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;步骤一, Steps传递的数据:&#x27;</span>, props.<span class=\"hljs-property\">formData</span>)</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">        <span class=\"hljs-comment\">// 当前组件的数据, nextPage事件发出时传递给Steps组件</span></span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">const</span> data = <span class=\"hljs-title function_\">ref</span>(&#123;</span><br><span class=\"language-javascript\">            <span class=\"hljs-attr\">formData</span>: &#123;</span><br><span class=\"language-javascript\">                <span class=\"hljs-attr\">msg</span>: <span class=\"hljs-string\">&#x27;我是步骤一&#x27;</span></span><br><span class=\"language-javascript\">            &#125;,</span><br><span class=\"language-javascript\">            <span class=\"hljs-attr\">index</span>: <span class=\"hljs-number\">0</span></span><br><span class=\"language-javascript\">        &#125;)</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">        <span class=\"hljs-comment\">/**</span></span><br><span class=\"hljs-comment\"><span class=\"language-javascript\">         * <span class=\"hljs-doctag\">@function</span> 向steps组件发出nextPage事件，让steps组件控制router跳转到下一页</span></span><br><span class=\"hljs-comment\"><span class=\"language-javascript\">         */</span></span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">nextPage</span> = (<span class=\"hljs-params\"></span>) =&gt; &#123;</span><br><span class=\"language-javascript\">            ctx.<span class=\"hljs-title function_\">emit</span>(<span class=\"hljs-string\">&#x27;nextPage&#x27;</span>, data)</span><br><span class=\"language-javascript\">        &#125;</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">return</span> &#123;</span><br><span class=\"language-javascript\">            nextPage</span><br><span class=\"language-javascript\">        &#125;</span><br><span class=\"language-javascript\">    &#125;</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">    </span><br><span class=\"language-javascript\">&#125;</span><br><span class=\"language-javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span> <span class=\"hljs-attr\">scoped</span>&gt;</span><span class=\"language-css\"></span><br><span class=\"language-css\">    <span class=\"hljs-selector-tag\">div</span> &#123;</span><br><span class=\"language-css\">        <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">100%</span>;</span><br><span class=\"language-css\">        <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">100px</span>;</span><br><span class=\"language-css\">        <span class=\"hljs-attribute\">border-radius</span>: <span class=\"hljs-number\">10px</span>;</span><br><span class=\"language-css\">        <span class=\"hljs-attribute\">margin-top</span>: <span class=\"hljs-number\">10px</span>;</span><br><span class=\"language-css\">        <span class=\"hljs-attribute\">box-shadow</span>: <span class=\"hljs-number\">0px</span> <span class=\"hljs-number\">0px</span> <span class=\"hljs-number\">10px</span> <span class=\"hljs-number\">5px</span> <span class=\"hljs-number\">#666666</span>;</span><br><span class=\"language-css\">    &#125;</span><br><span class=\"language-css\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p><strong>P2.vue</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h4</span>&gt;</span>步骤二：/tv/p2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h4</span>&gt;</span><br>        <span class=\"hljs-comment\">&lt;!-- 上一页,下一页控制按钮 --&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">&quot;prevPage&quot;</span>&gt;</span>上一步<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">&quot;nextPage&quot;</span>&gt;</span>下一步<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\"></span><br><span class=\"language-javascript\"><span class=\"hljs-keyword\">import</span> &#123;ref&#125; <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;vue&#x27;</span></span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> &#123;</span><br><span class=\"language-javascript\">    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;P2&#x27;</span>,</span><br><span class=\"language-javascript\">    <span class=\"hljs-attr\">components</span>: &#123; &#125;,</span><br><span class=\"language-javascript\">    <span class=\"hljs-comment\">// 声明接收steps组件传递的数据</span></span><br><span class=\"language-javascript\">    <span class=\"hljs-attr\">props</span>: &#123;</span><br><span class=\"language-javascript\">        <span class=\"hljs-attr\">formData</span>: <span class=\"hljs-title class_\">Object</span></span><br><span class=\"language-javascript\">    &#125;,</span><br><span class=\"language-javascript\">    <span class=\"hljs-comment\">// 声明事件</span></span><br><span class=\"language-javascript\">    <span class=\"hljs-attr\">emits</span>: [<span class=\"hljs-string\">&#x27;prevPage&#x27;</span>, <span class=\"hljs-string\">&#x27;nextPage&#x27;</span>, <span class=\"hljs-string\">&#x27;complete&#x27;</span>],</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">    <span class=\"hljs-title function_\">setup</span>(<span class=\"hljs-params\">props, ctx</span>) &#123;</span><br><span class=\"language-javascript\">        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;步骤二, Steps传递的数据:&#x27;</span>, props.<span class=\"hljs-property\">formData</span>)</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">        <span class=\"hljs-comment\">// 当前组件的数据, nextPage事件发出时传递给Steps组件</span></span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">const</span> data = <span class=\"hljs-title function_\">ref</span>(&#123;</span><br><span class=\"language-javascript\">            <span class=\"hljs-attr\">formData</span>: &#123;</span><br><span class=\"language-javascript\">                <span class=\"hljs-attr\">msg</span>: <span class=\"hljs-string\">&#x27;我是步骤二&#x27;</span></span><br><span class=\"language-javascript\">            &#125;,</span><br><span class=\"language-javascript\">            <span class=\"hljs-attr\">index</span>: <span class=\"hljs-number\">1</span></span><br><span class=\"language-javascript\">        &#125;)</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">        <span class=\"hljs-comment\">/**</span></span><br><span class=\"hljs-comment\"><span class=\"language-javascript\">         * <span class=\"hljs-doctag\">@function</span> 向steps组件发出nextPage事件，让steps组件控制router跳转到下一页</span></span><br><span class=\"hljs-comment\"><span class=\"language-javascript\">         */</span></span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">nextPage</span> = (<span class=\"hljs-params\"></span>) =&gt; &#123;</span><br><span class=\"language-javascript\">            ctx.<span class=\"hljs-title function_\">emit</span>(<span class=\"hljs-string\">&#x27;nextPage&#x27;</span>, data)</span><br><span class=\"language-javascript\">        &#125;</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">        <span class=\"hljs-comment\">/**</span></span><br><span class=\"hljs-comment\"><span class=\"language-javascript\">         * <span class=\"hljs-doctag\">@function</span> 向steps组件发出prevPage事件，让steps组件控制router跳转到上一页</span></span><br><span class=\"hljs-comment\"><span class=\"language-javascript\">         */</span></span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">prevPage</span> = (<span class=\"hljs-params\"></span>) =&gt; &#123;</span><br><span class=\"language-javascript\">            ctx.<span class=\"hljs-title function_\">emit</span>(<span class=\"hljs-string\">&#x27;prevPage&#x27;</span>, data)</span><br><span class=\"language-javascript\">        &#125;</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">return</span> &#123;</span><br><span class=\"language-javascript\">            nextPage, prevPage</span><br><span class=\"language-javascript\">        &#125;</span><br><span class=\"language-javascript\">    &#125;</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">    </span><br><span class=\"language-javascript\">&#125;</span><br><span class=\"language-javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span> <span class=\"hljs-attr\">scoped</span>&gt;</span><span class=\"language-css\"></span><br><span class=\"language-css\">    <span class=\"hljs-selector-tag\">div</span> &#123;</span><br><span class=\"language-css\">        <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">100%</span>;</span><br><span class=\"language-css\">        <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">100px</span>;</span><br><span class=\"language-css\">        <span class=\"hljs-attribute\">border-radius</span>: <span class=\"hljs-number\">10px</span>;</span><br><span class=\"language-css\">        <span class=\"hljs-attribute\">margin-top</span>: <span class=\"hljs-number\">10px</span>;</span><br><span class=\"language-css\">        <span class=\"hljs-attribute\">box-shadow</span>: <span class=\"hljs-number\">0px</span> <span class=\"hljs-number\">0px</span> <span class=\"hljs-number\">10px</span> <span class=\"hljs-number\">5px</span> <span class=\"hljs-number\">#666666</span>;</span><br><span class=\"language-css\">    &#125;</span><br><span class=\"language-css\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p><strong>P3.vue</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h4</span>&gt;</span>步骤三：/tv/p3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h4</span>&gt;</span><br>        <span class=\"hljs-comment\">&lt;!-- 上一页,下一页控制按钮 --&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">&quot;prevPage&quot;</span>&gt;</span>上一步<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> @<span class=\"hljs-attr\">click</span>=<span class=\"hljs-string\">&quot;complete&quot;</span>&gt;</span>完成/确定<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\"></span><br><span class=\"language-javascript\"><span class=\"hljs-keyword\">import</span> &#123;ref&#125; <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;vue&#x27;</span></span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> &#123;</span><br><span class=\"language-javascript\">    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;P3&#x27;</span>,</span><br><span class=\"language-javascript\">    <span class=\"hljs-attr\">components</span>: &#123; &#125;,</span><br><span class=\"language-javascript\">    <span class=\"hljs-comment\">// 声明接收steps组件传递的数据</span></span><br><span class=\"language-javascript\">    <span class=\"hljs-attr\">props</span>: &#123;</span><br><span class=\"language-javascript\">        <span class=\"hljs-attr\">formData</span>: <span class=\"hljs-title class_\">Object</span></span><br><span class=\"language-javascript\">    &#125;,</span><br><span class=\"language-javascript\">    <span class=\"hljs-comment\">// 声明事件</span></span><br><span class=\"language-javascript\">    <span class=\"hljs-attr\">emits</span>: [<span class=\"hljs-string\">&#x27;prevPage&#x27;</span>, <span class=\"hljs-string\">&#x27;nextPage&#x27;</span>, <span class=\"hljs-string\">&#x27;complete&#x27;</span>],</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">    <span class=\"hljs-title function_\">setup</span>(<span class=\"hljs-params\">props, ctx</span>) &#123;</span><br><span class=\"language-javascript\">        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;步骤三, Steps传递的数据:&#x27;</span>, props.<span class=\"hljs-property\">formData</span>)</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">        <span class=\"hljs-comment\">// 当前组件的数据, nextPage事件发出时传递给Steps组件</span></span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">const</span> data = <span class=\"hljs-title function_\">ref</span>(&#123;</span><br><span class=\"language-javascript\">            <span class=\"hljs-attr\">formData</span>: &#123;</span><br><span class=\"language-javascript\">                <span class=\"hljs-attr\">msg</span>: <span class=\"hljs-string\">&#x27;我是步骤三&#x27;</span></span><br><span class=\"language-javascript\">            &#125;,</span><br><span class=\"language-javascript\">            <span class=\"hljs-attr\">index</span>: <span class=\"hljs-number\">2</span></span><br><span class=\"language-javascript\">        &#125;)</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">        <span class=\"hljs-comment\">/**</span></span><br><span class=\"hljs-comment\"><span class=\"language-javascript\">         * <span class=\"hljs-doctag\">@function</span> 向steps组件发出prevPage事件，让steps组件控制router跳转到下一页</span></span><br><span class=\"hljs-comment\"><span class=\"language-javascript\">         */</span></span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">prevPage</span> = (<span class=\"hljs-params\"></span>) =&gt; &#123;</span><br><span class=\"language-javascript\">            ctx.<span class=\"hljs-title function_\">emit</span>(<span class=\"hljs-string\">&#x27;prevPage&#x27;</span>, data)</span><br><span class=\"language-javascript\">        &#125;</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">        <span class=\"hljs-comment\">/**</span></span><br><span class=\"hljs-comment\"><span class=\"language-javascript\">         * <span class=\"hljs-doctag\">@function</span> 向steps组件发出complete事件，告知steps组件步骤完成</span></span><br><span class=\"hljs-comment\"><span class=\"language-javascript\">         */</span></span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">complete</span> = (<span class=\"hljs-params\"></span>) =&gt; &#123;</span><br><span class=\"language-javascript\">            ctx.<span class=\"hljs-title function_\">emit</span>(<span class=\"hljs-string\">&#x27;complete&#x27;</span>, data)</span><br><span class=\"language-javascript\">        &#125;</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">return</span> &#123;</span><br><span class=\"language-javascript\">            prevPage, complete</span><br><span class=\"language-javascript\">        &#125;</span><br><span class=\"language-javascript\">    &#125;</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">    </span><br><span class=\"language-javascript\">&#125;</span><br><span class=\"language-javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span> <span class=\"hljs-attr\">scoped</span>&gt;</span><span class=\"language-css\"></span><br><span class=\"language-css\">    <span class=\"hljs-selector-tag\">div</span> &#123;</span><br><span class=\"language-css\">        <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">100%</span>;</span><br><span class=\"language-css\">        <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">100px</span>;</span><br><span class=\"language-css\">        <span class=\"hljs-attribute\">border-radius</span>: <span class=\"hljs-number\">10px</span>;</span><br><span class=\"language-css\">        <span class=\"hljs-attribute\">margin-top</span>: <span class=\"hljs-number\">10px</span>;</span><br><span class=\"language-css\">        <span class=\"hljs-attribute\">box-shadow</span>: <span class=\"hljs-number\">0px</span> <span class=\"hljs-number\">0px</span> <span class=\"hljs-number\">10px</span> <span class=\"hljs-number\">5px</span> <span class=\"hljs-number\">#666666</span>;</span><br><span class=\"language-css\">    &#125;</span><br><span class=\"language-css\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"2-4-3-为子路由组件指定路由地址\"><a href=\"#2-4-3-为子路由组件指定路由地址\" class=\"headerlink\" title=\"2.4.3 为子路由组件指定路由地址\"></a>2.4.3 为子路由组件指定路由地址</h4><p>修改路由文件 <code>primevue-steps/src/router/index.js</code>，为TestView视图添加子路由</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> &#123; createRouter, createWebHistory &#125; <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;vue-router&quot;</span>;<br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">HelloWorld</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@/components/HelloWorld&quot;</span><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-title class_\">TestView</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@/views/TestView&quot;</span><br><span class=\"hljs-comment\">// 导入子路由组件</span><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-variable constant_\">P1</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@/components/P1&quot;</span><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-variable constant_\">P2</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@/components/P2&quot;</span><br><span class=\"hljs-keyword\">import</span> <span class=\"hljs-variable constant_\">P3</span> <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@/components/P3&quot;</span><br><br><br><span class=\"hljs-keyword\">const</span> routes = [<br>    &#123;<br>        <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;index&quot;</span>,<br>        <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">&quot;/&quot;</span>,<br>        <span class=\"hljs-attr\">component</span>: <span class=\"hljs-title class_\">HelloWorld</span><br>    &#125;, &#123;<br>        <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;testView&quot;</span>,<br>        <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">&quot;/tv&quot;</span>,<br>        <span class=\"hljs-attr\">component</span>: <span class=\"hljs-title class_\">TestView</span>,<br>        <span class=\"hljs-comment\">// setps组件子路由</span><br>        <span class=\"hljs-attr\">children</span>: [<br>            &#123;<span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">&#x27;p1&#x27;</span>, <span class=\"hljs-attr\">component</span>: <span class=\"hljs-variable constant_\">P1</span>&#125;,<br>            &#123;<span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">&#x27;p2&#x27;</span>, <span class=\"hljs-attr\">component</span>: <span class=\"hljs-variable constant_\">P2</span>&#125;,<br>            &#123;<span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">&#x27;p3&#x27;</span>, <span class=\"hljs-attr\">component</span>: <span class=\"hljs-variable constant_\">P3</span>&#125;,<br>        ]<br>    &#125;<br>]<br><br><span class=\"hljs-keyword\">const</span> router = <span class=\"hljs-title function_\">createRouter</span>(&#123;<br>    <span class=\"hljs-attr\">history</span>: <span class=\"hljs-title function_\">createWebHistory</span>(),<br>    routes<br>&#125;)<br><br><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> router;<br></code></pre></td></tr></table></figure>\n\n<p>完成后刷新页面并访问路径 <code>/tv/p1</code>，即可看到步骤页</p>\n<p><img src=\"/images/post/Use-Primevue-Steps-component-vue3/5.gif\"></p>\n<h2 id=\"3-演示Demo\"><a href=\"#3-演示Demo\" class=\"headerlink\" title=\"3. 演示Demo\"></a>3. 演示Demo</h2><p>文章中所用的测试Demo已经推送到github：<a href=\"https://github.com/mangfu26/blog-share/tree/primevue-steps\">https://github.com/mangfu26/blog-share/tree/primevue-steps</a></p>\n<p>你可以使用以下命令克隆使用</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">git <span class=\"hljs-built_in\">clone</span> -b primevue-steps https://github.com/mangfu26/blog-share.git primevue-steps<br></code></pre></td></tr></table></figure>"},{"layout":"post","title":"Docker容器/etc/hosts文件被重置Bug","index_img":"/images/post/bug-diary-cover.png","date":"2022-08-16T08:13:34.000Z","_content":"\n## 1. Bug发现\n\n前些日子，公司有个将Awvs14打包为一个独立的Docker容器并暴露接口和数据库给其他服务做测试的需求\n\n出于测试目的，便在 [🔰雨苁ℒ🔰](https://www.ddosi.org/) 大佬的博客中找了个AWVS14的Linux破解版\n\n具体的破解教程以及破解文件等可以参考：[Awvs破解版14.7.220228146|awvs cracked](https://www.ddosi.org/awvs-14-7/)，本篇日记只专注Bug记录\n\n根据大佬提供的安装教程一路走下来顺顺利利安装完成\n\n接下来自然而然的就是导出容器推送到服务器进行测试\n\n> 小提示：\n>\n> 容器内安装Awvs需要安装Awvs所需的依赖，可以根据Awvs版本去查看官方的文档安装依赖，在本篇日记中容器使用的是 `ubuntu20.04` 基础镜像\n> \n> Awvs的依赖安装如下：\n>\n> ```shell\n> apt install -y libxdamage1 libgtk-3-0 libasound2 libnss3 libxss1 libx11-xcb1 libxcb-dri3-0 libgbm1 libdrm2 libxshmfence1 sudo\n> ```\n\n但是推送到服务器后使用 `docker run` 命令启动容器时怪事发生了，扫描任务一直提示启动失败\n\n排除Awvs容器的输出发现每当任务启动时都会提示许可证错误，起初以为是破解文件的问题（因为安装后就直接打包推送到服务器测试，没有在本地启动测试过）\n\n于是重新构建一个容器，在本地测试没问题后推送到服务器，但任务启也是一直失败，错误原因也同样是许可证错误\n\n........\n\n有怀疑过是网络问题，有怀疑过Docker版本问题，有怀疑过是Awvs许可证与Mac地址相关等等，耽搁了一个周，焦头烂额准备放弃之际打算对比下本地容器和测试服务上的容器内部文件有什么不一样\n\n之前从未怀疑过是容器文件不一致导致的Bug，因为在我的认知里，容器导出后再导入再运行内部文件是不会变化的，就像传统虚拟机一样\n\n但是对比过后，发现测试服务器上的 `/etc/hosts` 文件与本地打包的容器不一致\n\n根据大佬的 Awvs14 Linux 版安装教程，在第6步时需要修改 `/etc/hosts` 文件\n\n![](images/post/docker-container-etc-hosts-file-reset-bug/01.png)\n\n这一步在正常的Linux操作系统上操作是没问题的，所以理所当然的以为打包后的 `/etc/hosts` 文件也不会改变\n\n由于 `/etc/hosts` 中与破解相关的内容被清除了，所以AWVS任务因为许可证问题启动失败也是情理之中了\n\n\n## 2. 为什么 /etc/hosts 会被重置？\n\n参考Docker官方文档：[https://docs.docker.com/engine/reference/run/#managing-etchosts](https://docs.docker.com/engine/reference/run/#managing-etchosts)\n\n![](images/post/docker-container-etc-hosts-file-reset-bug/02.png)\n\n> 你的容器在/etc/hosts中会有几行，它们定义了容器本身的主机名以及localhost和其他一些常见的东西。--add-host标志可以用来向/etc/hosts添加额外的行。\n>\n> 如果一个容器被连接到默认的桥接网络并与其他容器链接，那么该容器的/etc/hosts文件就会用被链接的容器的名称进行更新。\n>\n> 由于Docker可能会实时更新容器的/etc/hosts文件，所以可能会出现这样的情况：容器内的进程最终会读取一个空的或不完整的/etc/hosts文件。在大多数情况下，再次重试读取应该可以解决问题。\n\n也就是说Docker会对 `/etc/hosts` 文件进行管理并且会不定时更新\n\n我猜测是我启动测试容器时docker会检查网络并更新 `/etc/hosts` 文件导致破解内容被清除导致\n\n\n## 3. Bug解决\n\n### 3.1 --add-host\n\n> 如果你只是对已有镜像做简单修改，建议使用此种方式\n\n创建容器时使用 `docker run` 命令的 `--add-host` 参数指定 /etc/hosts 内容\n\n命令格式：\n\n```shell\n# host : 主机名称\n# ip   : 主机IP地址\ndocker run --add-host host:ip\n```\n\n\n### 3.2 使用启动脚本\n\n> 如果你使用Dockerfile构建镜像且使用启动脚本做初始化操作时建议使用此种方式\n\n第二种方式是构建镜像时指定一个启动脚本，每次启动容器前检查一次 `/etc/hosts` 文件内容完整性\n\n以AWVS破解教程为基础，以下为一个shell启动脚本例子：\n\n该启动脚本会在容器启动时执行，脚本会检查 `/etc/hosts` 文件中是否存在破解内容\n\n127.0.0.1 updates.acunetix.com\n127.0.0.1 erp.acunetix.com\n\n```bash\n#!/bin/bash\n\n# 每次启动前都检查 /etc/hosts 文件, 确保屏蔽了AWVS更新检查\n# 防止容器迁移后 /etc/hosts 文件内容丢失造成的扫描任务启动失败\nhost1CheckResult=`cat /etc/hosts | grep updates.acunetix.com | tr -s [:space:]`\nhost2CheckResult=`cat /etc/hosts | grep erp.acunetix.com | tr -s [:space:]`\nif [ -z \"$host1CheckResult\" ];then\n   echo \"127.0.0.1 updates.acunetix.com\" >> /etc/hosts\nfi\nif [ -z \"$host2CheckResult\" ];then\n    echo \"127.0.0.1 erp.acunetix.com\" >> /etc/hosts\nfi\n\n# 启动AWVS\nsu - acunetix -c \"cd /home/acunetix/.acunetix/ && ./start.sh\"\n```\n\n将此脚本保存为 `start.sh`\n\n\n## 4. 一些参考命令 \n\n### 4.1 将启动脚本附加到已有容器 \n\n将脚本复制到容器中 \n\n```shell\ndocker cp start.sh 容器名称:脚本存储目录\n# 例子\ndocker cp start.sh awvs-14:/root/\n```\n\n给脚本添加执行权限 \n\n```shell\ndocker exec 容器名称 chmod +x 脚本路径\n# 例子\ndocker exec awvs-14 chmod +x /root/start.sh\n```\n\n停止容器\n\n```shell\ndocker stop 容器名称\n# 例子\ndocker stop awvs-14\n```\n\n将容器提交为新镜像\n\n```shell\ndocker commit 容器名称 镜像名称:tag\n# 例子\ndocker commit awvs-14 awvs:14\n```\n\n以提交的镜像作为基础启动一个新镜像，并以 `start.sh` 作为启动脚本\n\n```shell\ndocker run -itd --name awvs-14-new awvs:14 /root/start.sh\n```\n\n### 4.2 使用Dockerfile构建并启动\n\n```dockerfile\nFROM ubuntu:20.04\n\nWORKDIR /root/\nCOPY start.sh ./\n\nRUN chmod +x ./start.sh\n\nCMD ./start.sh\n```\n\n构建镜像\n\n```shell\ndocker build -t awvs:14 .\n```\n\n以镜像为基础启动容器\n\n```shell\ndocker run -itd --name awvs-14-new awvs:14 \n```","source":"_posts/docker-container-etc-hosts-file-reset-bug.md","raw":"---\nlayout: post\ntitle: Docker容器/etc/hosts文件被重置Bug\nindex_img: /images/post/bug-diary-cover.png\ndate: 2022-08-16 16:13:34\ncategories:\n- Bug日记\ntags:\n- Docker\n- Bug\n---\n\n## 1. Bug发现\n\n前些日子，公司有个将Awvs14打包为一个独立的Docker容器并暴露接口和数据库给其他服务做测试的需求\n\n出于测试目的，便在 [🔰雨苁ℒ🔰](https://www.ddosi.org/) 大佬的博客中找了个AWVS14的Linux破解版\n\n具体的破解教程以及破解文件等可以参考：[Awvs破解版14.7.220228146|awvs cracked](https://www.ddosi.org/awvs-14-7/)，本篇日记只专注Bug记录\n\n根据大佬提供的安装教程一路走下来顺顺利利安装完成\n\n接下来自然而然的就是导出容器推送到服务器进行测试\n\n> 小提示：\n>\n> 容器内安装Awvs需要安装Awvs所需的依赖，可以根据Awvs版本去查看官方的文档安装依赖，在本篇日记中容器使用的是 `ubuntu20.04` 基础镜像\n> \n> Awvs的依赖安装如下：\n>\n> ```shell\n> apt install -y libxdamage1 libgtk-3-0 libasound2 libnss3 libxss1 libx11-xcb1 libxcb-dri3-0 libgbm1 libdrm2 libxshmfence1 sudo\n> ```\n\n但是推送到服务器后使用 `docker run` 命令启动容器时怪事发生了，扫描任务一直提示启动失败\n\n排除Awvs容器的输出发现每当任务启动时都会提示许可证错误，起初以为是破解文件的问题（因为安装后就直接打包推送到服务器测试，没有在本地启动测试过）\n\n于是重新构建一个容器，在本地测试没问题后推送到服务器，但任务启也是一直失败，错误原因也同样是许可证错误\n\n........\n\n有怀疑过是网络问题，有怀疑过Docker版本问题，有怀疑过是Awvs许可证与Mac地址相关等等，耽搁了一个周，焦头烂额准备放弃之际打算对比下本地容器和测试服务上的容器内部文件有什么不一样\n\n之前从未怀疑过是容器文件不一致导致的Bug，因为在我的认知里，容器导出后再导入再运行内部文件是不会变化的，就像传统虚拟机一样\n\n但是对比过后，发现测试服务器上的 `/etc/hosts` 文件与本地打包的容器不一致\n\n根据大佬的 Awvs14 Linux 版安装教程，在第6步时需要修改 `/etc/hosts` 文件\n\n![](images/post/docker-container-etc-hosts-file-reset-bug/01.png)\n\n这一步在正常的Linux操作系统上操作是没问题的，所以理所当然的以为打包后的 `/etc/hosts` 文件也不会改变\n\n由于 `/etc/hosts` 中与破解相关的内容被清除了，所以AWVS任务因为许可证问题启动失败也是情理之中了\n\n\n## 2. 为什么 /etc/hosts 会被重置？\n\n参考Docker官方文档：[https://docs.docker.com/engine/reference/run/#managing-etchosts](https://docs.docker.com/engine/reference/run/#managing-etchosts)\n\n![](images/post/docker-container-etc-hosts-file-reset-bug/02.png)\n\n> 你的容器在/etc/hosts中会有几行，它们定义了容器本身的主机名以及localhost和其他一些常见的东西。--add-host标志可以用来向/etc/hosts添加额外的行。\n>\n> 如果一个容器被连接到默认的桥接网络并与其他容器链接，那么该容器的/etc/hosts文件就会用被链接的容器的名称进行更新。\n>\n> 由于Docker可能会实时更新容器的/etc/hosts文件，所以可能会出现这样的情况：容器内的进程最终会读取一个空的或不完整的/etc/hosts文件。在大多数情况下，再次重试读取应该可以解决问题。\n\n也就是说Docker会对 `/etc/hosts` 文件进行管理并且会不定时更新\n\n我猜测是我启动测试容器时docker会检查网络并更新 `/etc/hosts` 文件导致破解内容被清除导致\n\n\n## 3. Bug解决\n\n### 3.1 --add-host\n\n> 如果你只是对已有镜像做简单修改，建议使用此种方式\n\n创建容器时使用 `docker run` 命令的 `--add-host` 参数指定 /etc/hosts 内容\n\n命令格式：\n\n```shell\n# host : 主机名称\n# ip   : 主机IP地址\ndocker run --add-host host:ip\n```\n\n\n### 3.2 使用启动脚本\n\n> 如果你使用Dockerfile构建镜像且使用启动脚本做初始化操作时建议使用此种方式\n\n第二种方式是构建镜像时指定一个启动脚本，每次启动容器前检查一次 `/etc/hosts` 文件内容完整性\n\n以AWVS破解教程为基础，以下为一个shell启动脚本例子：\n\n该启动脚本会在容器启动时执行，脚本会检查 `/etc/hosts` 文件中是否存在破解内容\n\n127.0.0.1 updates.acunetix.com\n127.0.0.1 erp.acunetix.com\n\n```bash\n#!/bin/bash\n\n# 每次启动前都检查 /etc/hosts 文件, 确保屏蔽了AWVS更新检查\n# 防止容器迁移后 /etc/hosts 文件内容丢失造成的扫描任务启动失败\nhost1CheckResult=`cat /etc/hosts | grep updates.acunetix.com | tr -s [:space:]`\nhost2CheckResult=`cat /etc/hosts | grep erp.acunetix.com | tr -s [:space:]`\nif [ -z \"$host1CheckResult\" ];then\n   echo \"127.0.0.1 updates.acunetix.com\" >> /etc/hosts\nfi\nif [ -z \"$host2CheckResult\" ];then\n    echo \"127.0.0.1 erp.acunetix.com\" >> /etc/hosts\nfi\n\n# 启动AWVS\nsu - acunetix -c \"cd /home/acunetix/.acunetix/ && ./start.sh\"\n```\n\n将此脚本保存为 `start.sh`\n\n\n## 4. 一些参考命令 \n\n### 4.1 将启动脚本附加到已有容器 \n\n将脚本复制到容器中 \n\n```shell\ndocker cp start.sh 容器名称:脚本存储目录\n# 例子\ndocker cp start.sh awvs-14:/root/\n```\n\n给脚本添加执行权限 \n\n```shell\ndocker exec 容器名称 chmod +x 脚本路径\n# 例子\ndocker exec awvs-14 chmod +x /root/start.sh\n```\n\n停止容器\n\n```shell\ndocker stop 容器名称\n# 例子\ndocker stop awvs-14\n```\n\n将容器提交为新镜像\n\n```shell\ndocker commit 容器名称 镜像名称:tag\n# 例子\ndocker commit awvs-14 awvs:14\n```\n\n以提交的镜像作为基础启动一个新镜像，并以 `start.sh` 作为启动脚本\n\n```shell\ndocker run -itd --name awvs-14-new awvs:14 /root/start.sh\n```\n\n### 4.2 使用Dockerfile构建并启动\n\n```dockerfile\nFROM ubuntu:20.04\n\nWORKDIR /root/\nCOPY start.sh ./\n\nRUN chmod +x ./start.sh\n\nCMD ./start.sh\n```\n\n构建镜像\n\n```shell\ndocker build -t awvs:14 .\n```\n\n以镜像为基础启动容器\n\n```shell\ndocker run -itd --name awvs-14-new awvs:14 \n```","slug":"docker-container-etc-hosts-file-reset-bug","published":1,"updated":"2022-08-16T10:35:25.921Z","_id":"cl6vxs6yt00002suc9q8yhj3l","comments":1,"photos":[],"link":"","content":"<h2 id=\"1-Bug发现\"><a href=\"#1-Bug发现\" class=\"headerlink\" title=\"1. Bug发现\"></a>1. Bug发现</h2><p>前些日子，公司有个将Awvs14打包为一个独立的Docker容器并暴露接口和数据库给其他服务做测试的需求</p>\n<p>出于测试目的，便在 <a href=\"https://www.ddosi.org/\">🔰雨苁ℒ🔰</a> 大佬的博客中找了个AWVS14的Linux破解版</p>\n<p>具体的破解教程以及破解文件等可以参考：<a href=\"https://www.ddosi.org/awvs-14-7/\">Awvs破解版14.7.220228146|awvs cracked</a>，本篇日记只专注Bug记录</p>\n<p>根据大佬提供的安装教程一路走下来顺顺利利安装完成</p>\n<p>接下来自然而然的就是导出容器推送到服务器进行测试</p>\n<blockquote>\n<p>小提示：</p>\n<p>容器内安装Awvs需要安装Awvs所需的依赖，可以根据Awvs版本去查看官方的文档安装依赖，在本篇日记中容器使用的是 <code>ubuntu20.04</code> 基础镜像</p>\n<p>Awvs的依赖安装如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">apt install -y libxdamage1 libgtk-3-0 libasound2 libnss3 libxss1 libx11-xcb1 libxcb-dri3-0 libgbm1 libdrm2 libxshmfence1 sudo<br></code></pre></td></tr></table></figure>\n</blockquote>\n<p>但是推送到服务器后使用 <code>docker run</code> 命令启动容器时怪事发生了，扫描任务一直提示启动失败</p>\n<p>排除Awvs容器的输出发现每当任务启动时都会提示许可证错误，起初以为是破解文件的问题（因为安装后就直接打包推送到服务器测试，没有在本地启动测试过）</p>\n<p>于是重新构建一个容器，在本地测试没问题后推送到服务器，但任务启也是一直失败，错误原因也同样是许可证错误</p>\n<p>……..</p>\n<p>有怀疑过是网络问题，有怀疑过Docker版本问题，有怀疑过是Awvs许可证与Mac地址相关等等，耽搁了一个周，焦头烂额准备放弃之际打算对比下本地容器和测试服务上的容器内部文件有什么不一样</p>\n<p>之前从未怀疑过是容器文件不一致导致的Bug，因为在我的认知里，容器导出后再导入再运行内部文件是不会变化的，就像传统虚拟机一样</p>\n<p>但是对比过后，发现测试服务器上的 <code>/etc/hosts</code> 文件与本地打包的容器不一致</p>\n<p>根据大佬的 Awvs14 Linux 版安装教程，在第6步时需要修改 <code>/etc/hosts</code> 文件</p>\n<p><img src=\"/images/post/docker-container-etc-hosts-file-reset-bug/01.png\"></p>\n<p>这一步在正常的Linux操作系统上操作是没问题的，所以理所当然的以为打包后的 <code>/etc/hosts</code> 文件也不会改变</p>\n<p>由于 <code>/etc/hosts</code> 中与破解相关的内容被清除了，所以AWVS任务因为许可证问题启动失败也是情理之中了</p>\n<h2 id=\"2-为什么-x2F-etc-x2F-hosts-会被重置？\"><a href=\"#2-为什么-x2F-etc-x2F-hosts-会被重置？\" class=\"headerlink\" title=\"2. 为什么 &#x2F;etc&#x2F;hosts 会被重置？\"></a>2. 为什么 &#x2F;etc&#x2F;hosts 会被重置？</h2><p>参考Docker官方文档：<a href=\"https://docs.docker.com/engine/reference/run/#managing-etchosts\">https://docs.docker.com/engine/reference/run/#managing-etchosts</a></p>\n<p><img src=\"/images/post/docker-container-etc-hosts-file-reset-bug/02.png\"></p>\n<blockquote>\n<p>你的容器在&#x2F;etc&#x2F;hosts中会有几行，它们定义了容器本身的主机名以及localhost和其他一些常见的东西。–add-host标志可以用来向&#x2F;etc&#x2F;hosts添加额外的行。</p>\n<p>如果一个容器被连接到默认的桥接网络并与其他容器链接，那么该容器的&#x2F;etc&#x2F;hosts文件就会用被链接的容器的名称进行更新。</p>\n<p>由于Docker可能会实时更新容器的&#x2F;etc&#x2F;hosts文件，所以可能会出现这样的情况：容器内的进程最终会读取一个空的或不完整的&#x2F;etc&#x2F;hosts文件。在大多数情况下，再次重试读取应该可以解决问题。</p>\n</blockquote>\n<p>也就是说Docker会对 <code>/etc/hosts</code> 文件进行管理并且会不定时更新</p>\n<p>我猜测是我启动测试容器时docker会检查网络并更新 <code>/etc/hosts</code> 文件导致破解内容被清除导致</p>\n<h2 id=\"3-Bug解决\"><a href=\"#3-Bug解决\" class=\"headerlink\" title=\"3. Bug解决\"></a>3. Bug解决</h2><h3 id=\"3-1-–add-host\"><a href=\"#3-1-–add-host\" class=\"headerlink\" title=\"3.1 –add-host\"></a>3.1 –add-host</h3><blockquote>\n<p>如果你只是对已有镜像做简单修改，建议使用此种方式</p>\n</blockquote>\n<p>创建容器时使用 <code>docker run</code> 命令的 <code>--add-host</code> 参数指定 &#x2F;etc&#x2F;hosts 内容</p>\n<p>命令格式：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">host : 主机名称</span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">ip   : 主机IP地址</span><br>docker run --add-host host:ip<br></code></pre></td></tr></table></figure>\n\n\n<h3 id=\"3-2-使用启动脚本\"><a href=\"#3-2-使用启动脚本\" class=\"headerlink\" title=\"3.2 使用启动脚本\"></a>3.2 使用启动脚本</h3><blockquote>\n<p>如果你使用Dockerfile构建镜像且使用启动脚本做初始化操作时建议使用此种方式</p>\n</blockquote>\n<p>第二种方式是构建镜像时指定一个启动脚本，每次启动容器前检查一次 <code>/etc/hosts</code> 文件内容完整性</p>\n<p>以AWVS破解教程为基础，以下为一个shell启动脚本例子：</p>\n<p>该启动脚本会在容器启动时执行，脚本会检查 <code>/etc/hosts</code> 文件中是否存在破解内容</p>\n<p>127.0.0.1 updates.acunetix.com<br>127.0.0.1 erp.acunetix.com</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-meta\">#!/bin/bash</span><br><br><span class=\"hljs-comment\"># 每次启动前都检查 /etc/hosts 文件, 确保屏蔽了AWVS更新检查</span><br><span class=\"hljs-comment\"># 防止容器迁移后 /etc/hosts 文件内容丢失造成的扫描任务启动失败</span><br>host1CheckResult=`<span class=\"hljs-built_in\">cat</span> /etc/hosts | grep updates.acunetix.com | <span class=\"hljs-built_in\">tr</span> -s [:space:]`<br>host2CheckResult=`<span class=\"hljs-built_in\">cat</span> /etc/hosts | grep erp.acunetix.com | <span class=\"hljs-built_in\">tr</span> -s [:space:]`<br><span class=\"hljs-keyword\">if</span> [ -z <span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$host1CheckResult</span>&quot;</span> ];<span class=\"hljs-keyword\">then</span><br>   <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;127.0.0.1 updates.acunetix.com&quot;</span> &gt;&gt; /etc/hosts<br><span class=\"hljs-keyword\">fi</span><br><span class=\"hljs-keyword\">if</span> [ -z <span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$host2CheckResult</span>&quot;</span> ];<span class=\"hljs-keyword\">then</span><br>    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;127.0.0.1 erp.acunetix.com&quot;</span> &gt;&gt; /etc/hosts<br><span class=\"hljs-keyword\">fi</span><br><br><span class=\"hljs-comment\"># 启动AWVS</span><br>su - acunetix -c <span class=\"hljs-string\">&quot;cd /home/acunetix/.acunetix/ &amp;&amp; ./start.sh&quot;</span><br></code></pre></td></tr></table></figure>\n\n<p>将此脚本保存为 <code>start.sh</code></p>\n<h2 id=\"4-一些参考命令\"><a href=\"#4-一些参考命令\" class=\"headerlink\" title=\"4. 一些参考命令\"></a>4. 一些参考命令</h2><h3 id=\"4-1-将启动脚本附加到已有容器\"><a href=\"#4-1-将启动脚本附加到已有容器\" class=\"headerlink\" title=\"4.1 将启动脚本附加到已有容器\"></a>4.1 将启动脚本附加到已有容器</h3><p>将脚本复制到容器中 </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">docker cp start.sh 容器名称:脚本存储目录<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">例子</span><br>docker cp start.sh awvs-14:/root/<br></code></pre></td></tr></table></figure>\n\n<p>给脚本添加执行权限 </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">docker exec 容器名称 chmod +x 脚本路径<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">例子</span><br>docker exec awvs-14 chmod +x /root/start.sh<br></code></pre></td></tr></table></figure>\n\n<p>停止容器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">docker stop 容器名称<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">例子</span><br>docker stop awvs-14<br></code></pre></td></tr></table></figure>\n\n<p>将容器提交为新镜像</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">docker commit 容器名称 镜像名称:tag<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">例子</span><br>docker commit awvs-14 awvs:14<br></code></pre></td></tr></table></figure>\n\n<p>以提交的镜像作为基础启动一个新镜像，并以 <code>start.sh</code> 作为启动脚本</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">docker run -itd --name awvs-14-new awvs:14 /root/start.sh<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"4-2-使用Dockerfile构建并启动\"><a href=\"#4-2-使用Dockerfile构建并启动\" class=\"headerlink\" title=\"4.2 使用Dockerfile构建并启动\"></a>4.2 使用Dockerfile构建并启动</h3><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dockerfile\"><span class=\"hljs-keyword\">FROM</span> ubuntu:<span class=\"hljs-number\">20.04</span><br><br><span class=\"hljs-keyword\">WORKDIR</span><span class=\"language-bash\"> /root/</span><br><span class=\"hljs-keyword\">COPY</span><span class=\"language-bash\"> start.sh ./</span><br><br><span class=\"hljs-keyword\">RUN</span><span class=\"language-bash\"> <span class=\"hljs-built_in\">chmod</span> +x ./start.sh</span><br><br><span class=\"hljs-keyword\">CMD</span><span class=\"language-bash\"> ./start.sh</span><br></code></pre></td></tr></table></figure>\n\n<p>构建镜像</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">docker build -t awvs:14 .<br></code></pre></td></tr></table></figure>\n\n<p>以镜像为基础启动容器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">docker run -itd --name awvs-14-new awvs:14 <br></code></pre></td></tr></table></figure>","site":{"data":{}},"wordcount":2880,"excerpt":"","more":"<h2 id=\"1-Bug发现\"><a href=\"#1-Bug发现\" class=\"headerlink\" title=\"1. Bug发现\"></a>1. Bug发现</h2><p>前些日子，公司有个将Awvs14打包为一个独立的Docker容器并暴露接口和数据库给其他服务做测试的需求</p>\n<p>出于测试目的，便在 <a href=\"https://www.ddosi.org/\">🔰雨苁ℒ🔰</a> 大佬的博客中找了个AWVS14的Linux破解版</p>\n<p>具体的破解教程以及破解文件等可以参考：<a href=\"https://www.ddosi.org/awvs-14-7/\">Awvs破解版14.7.220228146|awvs cracked</a>，本篇日记只专注Bug记录</p>\n<p>根据大佬提供的安装教程一路走下来顺顺利利安装完成</p>\n<p>接下来自然而然的就是导出容器推送到服务器进行测试</p>\n<blockquote>\n<p>小提示：</p>\n<p>容器内安装Awvs需要安装Awvs所需的依赖，可以根据Awvs版本去查看官方的文档安装依赖，在本篇日记中容器使用的是 <code>ubuntu20.04</code> 基础镜像</p>\n<p>Awvs的依赖安装如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">apt install -y libxdamage1 libgtk-3-0 libasound2 libnss3 libxss1 libx11-xcb1 libxcb-dri3-0 libgbm1 libdrm2 libxshmfence1 sudo<br></code></pre></td></tr></table></figure>\n</blockquote>\n<p>但是推送到服务器后使用 <code>docker run</code> 命令启动容器时怪事发生了，扫描任务一直提示启动失败</p>\n<p>排除Awvs容器的输出发现每当任务启动时都会提示许可证错误，起初以为是破解文件的问题（因为安装后就直接打包推送到服务器测试，没有在本地启动测试过）</p>\n<p>于是重新构建一个容器，在本地测试没问题后推送到服务器，但任务启也是一直失败，错误原因也同样是许可证错误</p>\n<p>……..</p>\n<p>有怀疑过是网络问题，有怀疑过Docker版本问题，有怀疑过是Awvs许可证与Mac地址相关等等，耽搁了一个周，焦头烂额准备放弃之际打算对比下本地容器和测试服务上的容器内部文件有什么不一样</p>\n<p>之前从未怀疑过是容器文件不一致导致的Bug，因为在我的认知里，容器导出后再导入再运行内部文件是不会变化的，就像传统虚拟机一样</p>\n<p>但是对比过后，发现测试服务器上的 <code>/etc/hosts</code> 文件与本地打包的容器不一致</p>\n<p>根据大佬的 Awvs14 Linux 版安装教程，在第6步时需要修改 <code>/etc/hosts</code> 文件</p>\n<p><img src=\"/images/post/docker-container-etc-hosts-file-reset-bug/01.png\"></p>\n<p>这一步在正常的Linux操作系统上操作是没问题的，所以理所当然的以为打包后的 <code>/etc/hosts</code> 文件也不会改变</p>\n<p>由于 <code>/etc/hosts</code> 中与破解相关的内容被清除了，所以AWVS任务因为许可证问题启动失败也是情理之中了</p>\n<h2 id=\"2-为什么-x2F-etc-x2F-hosts-会被重置？\"><a href=\"#2-为什么-x2F-etc-x2F-hosts-会被重置？\" class=\"headerlink\" title=\"2. 为什么 &#x2F;etc&#x2F;hosts 会被重置？\"></a>2. 为什么 &#x2F;etc&#x2F;hosts 会被重置？</h2><p>参考Docker官方文档：<a href=\"https://docs.docker.com/engine/reference/run/#managing-etchosts\">https://docs.docker.com/engine/reference/run/#managing-etchosts</a></p>\n<p><img src=\"/images/post/docker-container-etc-hosts-file-reset-bug/02.png\"></p>\n<blockquote>\n<p>你的容器在&#x2F;etc&#x2F;hosts中会有几行，它们定义了容器本身的主机名以及localhost和其他一些常见的东西。–add-host标志可以用来向&#x2F;etc&#x2F;hosts添加额外的行。</p>\n<p>如果一个容器被连接到默认的桥接网络并与其他容器链接，那么该容器的&#x2F;etc&#x2F;hosts文件就会用被链接的容器的名称进行更新。</p>\n<p>由于Docker可能会实时更新容器的&#x2F;etc&#x2F;hosts文件，所以可能会出现这样的情况：容器内的进程最终会读取一个空的或不完整的&#x2F;etc&#x2F;hosts文件。在大多数情况下，再次重试读取应该可以解决问题。</p>\n</blockquote>\n<p>也就是说Docker会对 <code>/etc/hosts</code> 文件进行管理并且会不定时更新</p>\n<p>我猜测是我启动测试容器时docker会检查网络并更新 <code>/etc/hosts</code> 文件导致破解内容被清除导致</p>\n<h2 id=\"3-Bug解决\"><a href=\"#3-Bug解决\" class=\"headerlink\" title=\"3. Bug解决\"></a>3. Bug解决</h2><h3 id=\"3-1-–add-host\"><a href=\"#3-1-–add-host\" class=\"headerlink\" title=\"3.1 –add-host\"></a>3.1 –add-host</h3><blockquote>\n<p>如果你只是对已有镜像做简单修改，建议使用此种方式</p>\n</blockquote>\n<p>创建容器时使用 <code>docker run</code> 命令的 <code>--add-host</code> 参数指定 &#x2F;etc&#x2F;hosts 内容</p>\n<p>命令格式：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">host : 主机名称</span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">ip   : 主机IP地址</span><br>docker run --add-host host:ip<br></code></pre></td></tr></table></figure>\n\n\n<h3 id=\"3-2-使用启动脚本\"><a href=\"#3-2-使用启动脚本\" class=\"headerlink\" title=\"3.2 使用启动脚本\"></a>3.2 使用启动脚本</h3><blockquote>\n<p>如果你使用Dockerfile构建镜像且使用启动脚本做初始化操作时建议使用此种方式</p>\n</blockquote>\n<p>第二种方式是构建镜像时指定一个启动脚本，每次启动容器前检查一次 <code>/etc/hosts</code> 文件内容完整性</p>\n<p>以AWVS破解教程为基础，以下为一个shell启动脚本例子：</p>\n<p>该启动脚本会在容器启动时执行，脚本会检查 <code>/etc/hosts</code> 文件中是否存在破解内容</p>\n<p>127.0.0.1 updates.acunetix.com<br>127.0.0.1 erp.acunetix.com</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-meta\">#!/bin/bash</span><br><br><span class=\"hljs-comment\"># 每次启动前都检查 /etc/hosts 文件, 确保屏蔽了AWVS更新检查</span><br><span class=\"hljs-comment\"># 防止容器迁移后 /etc/hosts 文件内容丢失造成的扫描任务启动失败</span><br>host1CheckResult=`<span class=\"hljs-built_in\">cat</span> /etc/hosts | grep updates.acunetix.com | <span class=\"hljs-built_in\">tr</span> -s [:space:]`<br>host2CheckResult=`<span class=\"hljs-built_in\">cat</span> /etc/hosts | grep erp.acunetix.com | <span class=\"hljs-built_in\">tr</span> -s [:space:]`<br><span class=\"hljs-keyword\">if</span> [ -z <span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$host1CheckResult</span>&quot;</span> ];<span class=\"hljs-keyword\">then</span><br>   <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;127.0.0.1 updates.acunetix.com&quot;</span> &gt;&gt; /etc/hosts<br><span class=\"hljs-keyword\">fi</span><br><span class=\"hljs-keyword\">if</span> [ -z <span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$host2CheckResult</span>&quot;</span> ];<span class=\"hljs-keyword\">then</span><br>    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;127.0.0.1 erp.acunetix.com&quot;</span> &gt;&gt; /etc/hosts<br><span class=\"hljs-keyword\">fi</span><br><br><span class=\"hljs-comment\"># 启动AWVS</span><br>su - acunetix -c <span class=\"hljs-string\">&quot;cd /home/acunetix/.acunetix/ &amp;&amp; ./start.sh&quot;</span><br></code></pre></td></tr></table></figure>\n\n<p>将此脚本保存为 <code>start.sh</code></p>\n<h2 id=\"4-一些参考命令\"><a href=\"#4-一些参考命令\" class=\"headerlink\" title=\"4. 一些参考命令\"></a>4. 一些参考命令</h2><h3 id=\"4-1-将启动脚本附加到已有容器\"><a href=\"#4-1-将启动脚本附加到已有容器\" class=\"headerlink\" title=\"4.1 将启动脚本附加到已有容器\"></a>4.1 将启动脚本附加到已有容器</h3><p>将脚本复制到容器中 </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">docker cp start.sh 容器名称:脚本存储目录<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">例子</span><br>docker cp start.sh awvs-14:/root/<br></code></pre></td></tr></table></figure>\n\n<p>给脚本添加执行权限 </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">docker exec 容器名称 chmod +x 脚本路径<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">例子</span><br>docker exec awvs-14 chmod +x /root/start.sh<br></code></pre></td></tr></table></figure>\n\n<p>停止容器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">docker stop 容器名称<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">例子</span><br>docker stop awvs-14<br></code></pre></td></tr></table></figure>\n\n<p>将容器提交为新镜像</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">docker commit 容器名称 镜像名称:tag<br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">例子</span><br>docker commit awvs-14 awvs:14<br></code></pre></td></tr></table></figure>\n\n<p>以提交的镜像作为基础启动一个新镜像，并以 <code>start.sh</code> 作为启动脚本</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">docker run -itd --name awvs-14-new awvs:14 /root/start.sh<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"4-2-使用Dockerfile构建并启动\"><a href=\"#4-2-使用Dockerfile构建并启动\" class=\"headerlink\" title=\"4.2 使用Dockerfile构建并启动\"></a>4.2 使用Dockerfile构建并启动</h3><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dockerfile\"><span class=\"hljs-keyword\">FROM</span> ubuntu:<span class=\"hljs-number\">20.04</span><br><br><span class=\"hljs-keyword\">WORKDIR</span><span class=\"language-bash\"> /root/</span><br><span class=\"hljs-keyword\">COPY</span><span class=\"language-bash\"> start.sh ./</span><br><br><span class=\"hljs-keyword\">RUN</span><span class=\"language-bash\"> <span class=\"hljs-built_in\">chmod</span> +x ./start.sh</span><br><br><span class=\"hljs-keyword\">CMD</span><span class=\"language-bash\"> ./start.sh</span><br></code></pre></td></tr></table></figure>\n\n<p>构建镜像</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">docker build -t awvs:14 .<br></code></pre></td></tr></table></figure>\n\n<p>以镜像为基础启动容器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">docker run -itd --name awvs-14-new awvs:14 <br></code></pre></td></tr></table></figure>"},{"layout":"post","title":"Docker 引擎安装","index_img":"/images/post/docker-cover.png","date":"2022-10-08T03:52:18.000Z","_content":"\n## 各操作系统的 Docker 引擎安装\n\n### Ubuntu\n\n旧版本的Docker称为 `docker`, `docker.io` 或 `docker-engine` 如果已安装，请卸载它们：\n\n```bash\nsudo apt-get remove docker docker-engine docker.io containerd runc\n```\n\n在新主机上首次安装 Docker 引擎之前，需要设置Docker存储库。之后可以从存储库安装和更新Docker。\n```bash\n# 更新apt包索引并安装包，以允许apt通过HTTPS使用存储库\nsudo apt-get update\nsudo apt-get install ca-certificates curl gnupg lsb-release \n```\n\n```bash\n# 添加Docker的官方GPG密钥\nsudo mkdir -p /etc/apt/keyrings\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg\n```\n\n```bash\n# 设置存储库\necho \\\n  \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\\n  $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\n```\n\n安装 Docker 引擎\n```bash\nsudo apt-get update\n# 如果不需要 docker compose 编排工具, 可将 docker-compose-plugin 移除\nsudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin\n```\n\n## 非 root 用户使用 docker \n\n每次使用 Docker 都需要 `sudo` root 权限，有些许不方便，可以配置常用用户使用 Docker\n\n```bash\n# 创建 docker 组\nsudo groupadd docker\n\n# 将当前用户加入 docker 组, $USER 保存的是当前用户的名称, 需要添加其他用户的将 $USER \n# 替换为目标用户名称\nsudo usermod -G docker $USER\n\n# 重启 Docker 服务\nsudo service docker restart\n```","source":"_posts/docker-engine-install.md","raw":"---\nlayout: post\ntitle: Docker 引擎安装\nindex_img: /images/post/docker-cover.png\ndate: 2022-10-08 11:52:18\ncategories:\n- 建设\ntags: \n- Docker\n---\n\n## 各操作系统的 Docker 引擎安装\n\n### Ubuntu\n\n旧版本的Docker称为 `docker`, `docker.io` 或 `docker-engine` 如果已安装，请卸载它们：\n\n```bash\nsudo apt-get remove docker docker-engine docker.io containerd runc\n```\n\n在新主机上首次安装 Docker 引擎之前，需要设置Docker存储库。之后可以从存储库安装和更新Docker。\n```bash\n# 更新apt包索引并安装包，以允许apt通过HTTPS使用存储库\nsudo apt-get update\nsudo apt-get install ca-certificates curl gnupg lsb-release \n```\n\n```bash\n# 添加Docker的官方GPG密钥\nsudo mkdir -p /etc/apt/keyrings\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg\n```\n\n```bash\n# 设置存储库\necho \\\n  \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\\n  $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\n```\n\n安装 Docker 引擎\n```bash\nsudo apt-get update\n# 如果不需要 docker compose 编排工具, 可将 docker-compose-plugin 移除\nsudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin\n```\n\n## 非 root 用户使用 docker \n\n每次使用 Docker 都需要 `sudo` root 权限，有些许不方便，可以配置常用用户使用 Docker\n\n```bash\n# 创建 docker 组\nsudo groupadd docker\n\n# 将当前用户加入 docker 组, $USER 保存的是当前用户的名称, 需要添加其他用户的将 $USER \n# 替换为目标用户名称\nsudo usermod -G docker $USER\n\n# 重启 Docker 服务\nsudo service docker restart\n```","slug":"docker-engine-install","published":1,"updated":"2022-10-29T04:23:48.557Z","_id":"cl8zdst070000h4uc8pav5btz","comments":1,"photos":[],"link":"","content":"<h2 id=\"各操作系统的-Docker-引擎安装\"><a href=\"#各操作系统的-Docker-引擎安装\" class=\"headerlink\" title=\"各操作系统的 Docker 引擎安装\"></a>各操作系统的 Docker 引擎安装</h2><h3 id=\"Ubuntu\"><a href=\"#Ubuntu\" class=\"headerlink\" title=\"Ubuntu\"></a>Ubuntu</h3><p>旧版本的Docker称为 <code>docker</code>, <code>docker.io</code> 或 <code>docker-engine</code> 如果已安装，请卸载它们：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo apt-get remove docker docker-engine docker.io containerd runc<br></code></pre></td></tr></table></figure>\n\n<p>在新主机上首次安装 Docker 引擎之前，需要设置Docker存储库。之后可以从存储库安装和更新Docker。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 更新apt包索引并安装包，以允许apt通过HTTPS使用存储库</span><br>sudo apt-get update<br>sudo apt-get install ca-certificates curl gnupg lsb-release <br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 添加Docker的官方GPG密钥</span><br>sudo <span class=\"hljs-built_in\">mkdir</span> -p /etc/apt/keyrings<br>curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 设置存储库</span><br><span class=\"hljs-built_in\">echo</span> \\<br>  <span class=\"hljs-string\">&quot;deb [arch=<span class=\"hljs-subst\">$(dpkg --print-architecture)</span> signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\</span><br><span class=\"hljs-string\">  <span class=\"hljs-subst\">$(lsb_release -cs)</span> stable&quot;</span> | sudo <span class=\"hljs-built_in\">tee</span> /etc/apt/sources.list.d/docker.list &gt; /dev/null<br></code></pre></td></tr></table></figure>\n\n<p>安装 Docker 引擎</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo apt-get update<br><span class=\"hljs-comment\"># 如果不需要 docker compose 编排工具, 可将 docker-compose-plugin 移除</span><br>sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"非-root-用户使用-docker\"><a href=\"#非-root-用户使用-docker\" class=\"headerlink\" title=\"非 root 用户使用 docker\"></a>非 root 用户使用 docker</h2><p>每次使用 Docker 都需要 <code>sudo</code> root 权限，有些许不方便，可以配置常用用户使用 Docker</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 创建 docker 组</span><br>sudo groupadd docker<br><br><span class=\"hljs-comment\"># 将当前用户加入 docker 组, $USER 保存的是当前用户的名称, 需要添加其他用户的将 $USER </span><br><span class=\"hljs-comment\"># 替换为目标用户名称</span><br>sudo usermod -G docker <span class=\"hljs-variable\">$USER</span><br><br><span class=\"hljs-comment\"># 重启 Docker 服务</span><br>sudo service docker restart<br></code></pre></td></tr></table></figure>","site":{"data":{}},"wordcount":1034,"excerpt":"","more":"<h2 id=\"各操作系统的-Docker-引擎安装\"><a href=\"#各操作系统的-Docker-引擎安装\" class=\"headerlink\" title=\"各操作系统的 Docker 引擎安装\"></a>各操作系统的 Docker 引擎安装</h2><h3 id=\"Ubuntu\"><a href=\"#Ubuntu\" class=\"headerlink\" title=\"Ubuntu\"></a>Ubuntu</h3><p>旧版本的Docker称为 <code>docker</code>, <code>docker.io</code> 或 <code>docker-engine</code> 如果已安装，请卸载它们：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo apt-get remove docker docker-engine docker.io containerd runc<br></code></pre></td></tr></table></figure>\n\n<p>在新主机上首次安装 Docker 引擎之前，需要设置Docker存储库。之后可以从存储库安装和更新Docker。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 更新apt包索引并安装包，以允许apt通过HTTPS使用存储库</span><br>sudo apt-get update<br>sudo apt-get install ca-certificates curl gnupg lsb-release <br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 添加Docker的官方GPG密钥</span><br>sudo <span class=\"hljs-built_in\">mkdir</span> -p /etc/apt/keyrings<br>curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg<br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 设置存储库</span><br><span class=\"hljs-built_in\">echo</span> \\<br>  <span class=\"hljs-string\">&quot;deb [arch=<span class=\"hljs-subst\">$(dpkg --print-architecture)</span> signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\</span><br><span class=\"hljs-string\">  <span class=\"hljs-subst\">$(lsb_release -cs)</span> stable&quot;</span> | sudo <span class=\"hljs-built_in\">tee</span> /etc/apt/sources.list.d/docker.list &gt; /dev/null<br></code></pre></td></tr></table></figure>\n\n<p>安装 Docker 引擎</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">sudo apt-get update<br><span class=\"hljs-comment\"># 如果不需要 docker compose 编排工具, 可将 docker-compose-plugin 移除</span><br>sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"非-root-用户使用-docker\"><a href=\"#非-root-用户使用-docker\" class=\"headerlink\" title=\"非 root 用户使用 docker\"></a>非 root 用户使用 docker</h2><p>每次使用 Docker 都需要 <code>sudo</code> root 权限，有些许不方便，可以配置常用用户使用 Docker</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 创建 docker 组</span><br>sudo groupadd docker<br><br><span class=\"hljs-comment\"># 将当前用户加入 docker 组, $USER 保存的是当前用户的名称, 需要添加其他用户的将 $USER </span><br><span class=\"hljs-comment\"># 替换为目标用户名称</span><br>sudo usermod -G docker <span class=\"hljs-variable\">$USER</span><br><br><span class=\"hljs-comment\"># 重启 Docker 服务</span><br>sudo service docker restart<br></code></pre></td></tr></table></figure>"},{"layout":"post","title":"搭建私有pypi","index_img":"/images/post/pypi-cover.png","date":"2022-10-29T03:42:41.000Z","_content":"> 环境：\n> 操作系统: ubuntu:20.04\n\n## 1、安装 Python3 + pip\n\n```shell\napt update\napt install -y python3 python3-pip\n```\n\n\n## 2、安装 pypiserver\n\n```shell\npython3 -m pip install pypiserver\n```\n\n如果网络错误，无法访问官方 pypi ，可以使用国内镜像 pypi 站点\n\n例如 阿里云 pypi：[https://mirrors.aliyun.com/pypi/simple/](https://mirrors.aliyun.com/pypi/simple/)\n\n```shell\npython3 -m pip install pypiserver -i https://mirrors.aliyun.com/pypi/simple/\n```\n\n## 3、无认证方式启动\n\n安装完成后可以使用以下命令启动一个无需 用户/密码 认证的 pypi 服务\n```shell\npypi-server\n```\n\npypiserver 默认监听 8080 端口，访问 http://youip:8080 ，如果可以看到欢迎页面，表示服务启动成功\n\n![](images/post/ce25d5b1573d11ed95612cfda1215af5.png)\n\n> 如果你想自定义端口，请使用 -p 参数指定\n\n```shell\npypi-server -p 8000\n```\n\n## 4、带认证方式启动\n\n### 4.1、使用 htpasswd 生成密码文件\n\n> htpasswd 命令是 Apache 的 Web 服务器内置工具，用于创建和更新储存用户名、域和用户基本认证的密码文件。\n\n如果提示命令不存在，使用以下命令安装 htpasswd\n\n```shell\napt install -y apache2-utils\n```\n\n使用以下命令在当前用户家目录生成密码文件 `.pypipasswd`\n认证用户名为 `pypi`\n\n```shell\nhtpasswd -c ~/.pypipasswd pypi\n```\n\n生成过程中提示输入用户密码，请为 `pypi` 用户设置一个访问密码\n```shell\nroot@98fabb4b0b64:~# htpasswd -c ~/.pypipasswd pypi\nNew password: \nRe-type new password: \nAdding password for user pypi\n```\n\n### 4.2、使用密码文件启动带验证的 pypi 服务\n\n```shell\npypi-server -P ~/.pypipasswd \n```\n\n如果报以下错误：\n\n```shell\napache.passlib library is not available. You must install pypiserver with the optional 'passlib' dependency (`pip install pypiserver['passlib']`) in order to use password authentication\n```\n\n执行以下命令安装 `pypiserver['passlib']` 后尝试再次启动 pypi 服务\n\n```shell\npython3 -m pip install pypiserver['passlib']\n```\n","source":"_posts/搭建私有pypi.md","raw":"---\nlayout: post\ntitle: 搭建私有pypi\nindex_img: /images/post/pypi-cover.png\ndate: 2022-10-29 11:42:41\ncategories:\n- 建设\ntags: \n- python\n- pypi\n---\n> 环境：\n> 操作系统: ubuntu:20.04\n\n## 1、安装 Python3 + pip\n\n```shell\napt update\napt install -y python3 python3-pip\n```\n\n\n## 2、安装 pypiserver\n\n```shell\npython3 -m pip install pypiserver\n```\n\n如果网络错误，无法访问官方 pypi ，可以使用国内镜像 pypi 站点\n\n例如 阿里云 pypi：[https://mirrors.aliyun.com/pypi/simple/](https://mirrors.aliyun.com/pypi/simple/)\n\n```shell\npython3 -m pip install pypiserver -i https://mirrors.aliyun.com/pypi/simple/\n```\n\n## 3、无认证方式启动\n\n安装完成后可以使用以下命令启动一个无需 用户/密码 认证的 pypi 服务\n```shell\npypi-server\n```\n\npypiserver 默认监听 8080 端口，访问 http://youip:8080 ，如果可以看到欢迎页面，表示服务启动成功\n\n![](images/post/ce25d5b1573d11ed95612cfda1215af5.png)\n\n> 如果你想自定义端口，请使用 -p 参数指定\n\n```shell\npypi-server -p 8000\n```\n\n## 4、带认证方式启动\n\n### 4.1、使用 htpasswd 生成密码文件\n\n> htpasswd 命令是 Apache 的 Web 服务器内置工具，用于创建和更新储存用户名、域和用户基本认证的密码文件。\n\n如果提示命令不存在，使用以下命令安装 htpasswd\n\n```shell\napt install -y apache2-utils\n```\n\n使用以下命令在当前用户家目录生成密码文件 `.pypipasswd`\n认证用户名为 `pypi`\n\n```shell\nhtpasswd -c ~/.pypipasswd pypi\n```\n\n生成过程中提示输入用户密码，请为 `pypi` 用户设置一个访问密码\n```shell\nroot@98fabb4b0b64:~# htpasswd -c ~/.pypipasswd pypi\nNew password: \nRe-type new password: \nAdding password for user pypi\n```\n\n### 4.2、使用密码文件启动带验证的 pypi 服务\n\n```shell\npypi-server -P ~/.pypipasswd \n```\n\n如果报以下错误：\n\n```shell\napache.passlib library is not available. You must install pypiserver with the optional 'passlib' dependency (`pip install pypiserver['passlib']`) in order to use password authentication\n```\n\n执行以下命令安装 `pypiserver['passlib']` 后尝试再次启动 pypi 服务\n\n```shell\npython3 -m pip install pypiserver['passlib']\n```\n","slug":"搭建私有pypi","published":1,"updated":"2022-10-29T04:19:05.945Z","_id":"cl9tdr2370000a8uc0gef09s8","comments":1,"photos":[],"link":"","content":"<blockquote>\n<p>环境：<br>操作系统: ubuntu:20.04</p>\n</blockquote>\n<h2 id=\"1、安装-Python3-pip\"><a href=\"#1、安装-Python3-pip\" class=\"headerlink\" title=\"1、安装 Python3 + pip\"></a>1、安装 Python3 + pip</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">apt update<br>apt install -y python3 python3-pip<br></code></pre></td></tr></table></figure>\n\n\n<h2 id=\"2、安装-pypiserver\"><a href=\"#2、安装-pypiserver\" class=\"headerlink\" title=\"2、安装 pypiserver\"></a>2、安装 pypiserver</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">python3 -m pip install pypiserver<br></code></pre></td></tr></table></figure>\n\n<p>如果网络错误，无法访问官方 pypi ，可以使用国内镜像 pypi 站点</p>\n<p>例如 阿里云 pypi：<a href=\"https://mirrors.aliyun.com/pypi/simple/\">https://mirrors.aliyun.com/pypi/simple/</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">python3 -m pip install pypiserver -i https://mirrors.aliyun.com/pypi/simple/<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"3、无认证方式启动\"><a href=\"#3、无认证方式启动\" class=\"headerlink\" title=\"3、无认证方式启动\"></a>3、无认证方式启动</h2><p>安装完成后可以使用以下命令启动一个无需 用户&#x2F;密码 认证的 pypi 服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">pypi-server<br></code></pre></td></tr></table></figure>\n\n<p>pypiserver 默认监听 8080 端口，访问 <a href=\"http://youip:8080/\">http://youip:8080</a> ，如果可以看到欢迎页面，表示服务启动成功</p>\n<p><img src=\"/images/post/ce25d5b1573d11ed95612cfda1215af5.png\"></p>\n<blockquote>\n<p>如果你想自定义端口，请使用 -p 参数指定</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">pypi-server -p 8000<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"4、带认证方式启动\"><a href=\"#4、带认证方式启动\" class=\"headerlink\" title=\"4、带认证方式启动\"></a>4、带认证方式启动</h2><h3 id=\"4-1、使用-htpasswd-生成密码文件\"><a href=\"#4-1、使用-htpasswd-生成密码文件\" class=\"headerlink\" title=\"4.1、使用 htpasswd 生成密码文件\"></a>4.1、使用 htpasswd 生成密码文件</h3><blockquote>\n<p>htpasswd 命令是 Apache 的 Web 服务器内置工具，用于创建和更新储存用户名、域和用户基本认证的密码文件。</p>\n</blockquote>\n<p>如果提示命令不存在，使用以下命令安装 htpasswd</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">apt install -y apache2-utils<br></code></pre></td></tr></table></figure>\n\n<p>使用以下命令在当前用户家目录生成密码文件 <code>.pypipasswd</code><br>认证用户名为 <code>pypi</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">htpasswd -c ~/.pypipasswd pypi<br></code></pre></td></tr></table></figure>\n\n<p>生成过程中提示输入用户密码，请为 <code>pypi</code> 用户设置一个访问密码</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">root@98fabb4b0b64:~# htpasswd -c ~/.pypipasswd pypi<br>New password: <br>Re-type new password: <br>Adding password for user pypi<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"4-2、使用密码文件启动带验证的-pypi-服务\"><a href=\"#4-2、使用密码文件启动带验证的-pypi-服务\" class=\"headerlink\" title=\"4.2、使用密码文件启动带验证的 pypi 服务\"></a>4.2、使用密码文件启动带验证的 pypi 服务</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">pypi-server -P ~/.pypipasswd <br></code></pre></td></tr></table></figure>\n\n<p>如果报以下错误：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">apache.passlib library is not available. You must install pypiserver with the optional &#x27;passlib&#x27; dependency (`pip install pypiserver[&#x27;passlib&#x27;]`) in order to use password authentication<br></code></pre></td></tr></table></figure>\n\n<p>执行以下命令安装 <code>pypiserver[&#39;passlib&#39;]</code> 后尝试再次启动 pypi 服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">python3 -m pip install pypiserver[&#x27;passlib&#x27;]<br></code></pre></td></tr></table></figure>\n","site":{"data":{}},"wordcount":1113,"excerpt":"","more":"<blockquote>\n<p>环境：<br>操作系统: ubuntu:20.04</p>\n</blockquote>\n<h2 id=\"1、安装-Python3-pip\"><a href=\"#1、安装-Python3-pip\" class=\"headerlink\" title=\"1、安装 Python3 + pip\"></a>1、安装 Python3 + pip</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">apt update<br>apt install -y python3 python3-pip<br></code></pre></td></tr></table></figure>\n\n\n<h2 id=\"2、安装-pypiserver\"><a href=\"#2、安装-pypiserver\" class=\"headerlink\" title=\"2、安装 pypiserver\"></a>2、安装 pypiserver</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">python3 -m pip install pypiserver<br></code></pre></td></tr></table></figure>\n\n<p>如果网络错误，无法访问官方 pypi ，可以使用国内镜像 pypi 站点</p>\n<p>例如 阿里云 pypi：<a href=\"https://mirrors.aliyun.com/pypi/simple/\">https://mirrors.aliyun.com/pypi/simple/</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">python3 -m pip install pypiserver -i https://mirrors.aliyun.com/pypi/simple/<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"3、无认证方式启动\"><a href=\"#3、无认证方式启动\" class=\"headerlink\" title=\"3、无认证方式启动\"></a>3、无认证方式启动</h2><p>安装完成后可以使用以下命令启动一个无需 用户&#x2F;密码 认证的 pypi 服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">pypi-server<br></code></pre></td></tr></table></figure>\n\n<p>pypiserver 默认监听 8080 端口，访问 <a href=\"http://youip:8080/\">http://youip:8080</a> ，如果可以看到欢迎页面，表示服务启动成功</p>\n<p><img src=\"/images/post/ce25d5b1573d11ed95612cfda1215af5.png\"></p>\n<blockquote>\n<p>如果你想自定义端口，请使用 -p 参数指定</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">pypi-server -p 8000<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"4、带认证方式启动\"><a href=\"#4、带认证方式启动\" class=\"headerlink\" title=\"4、带认证方式启动\"></a>4、带认证方式启动</h2><h3 id=\"4-1、使用-htpasswd-生成密码文件\"><a href=\"#4-1、使用-htpasswd-生成密码文件\" class=\"headerlink\" title=\"4.1、使用 htpasswd 生成密码文件\"></a>4.1、使用 htpasswd 生成密码文件</h3><blockquote>\n<p>htpasswd 命令是 Apache 的 Web 服务器内置工具，用于创建和更新储存用户名、域和用户基本认证的密码文件。</p>\n</blockquote>\n<p>如果提示命令不存在，使用以下命令安装 htpasswd</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">apt install -y apache2-utils<br></code></pre></td></tr></table></figure>\n\n<p>使用以下命令在当前用户家目录生成密码文件 <code>.pypipasswd</code><br>认证用户名为 <code>pypi</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">htpasswd -c ~/.pypipasswd pypi<br></code></pre></td></tr></table></figure>\n\n<p>生成过程中提示输入用户密码，请为 <code>pypi</code> 用户设置一个访问密码</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">root@98fabb4b0b64:~# htpasswd -c ~/.pypipasswd pypi<br>New password: <br>Re-type new password: <br>Adding password for user pypi<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"4-2、使用密码文件启动带验证的-pypi-服务\"><a href=\"#4-2、使用密码文件启动带验证的-pypi-服务\" class=\"headerlink\" title=\"4.2、使用密码文件启动带验证的 pypi 服务\"></a>4.2、使用密码文件启动带验证的 pypi 服务</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">pypi-server -P ~/.pypipasswd <br></code></pre></td></tr></table></figure>\n\n<p>如果报以下错误：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">apache.passlib library is not available. You must install pypiserver with the optional &#x27;passlib&#x27; dependency (`pip install pypiserver[&#x27;passlib&#x27;]`) in order to use password authentication<br></code></pre></td></tr></table></figure>\n\n<p>执行以下命令安装 <code>pypiserver[&#39;passlib&#39;]</code> 后尝试再次启动 pypi 服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">python3 -m pip install pypiserver[&#x27;passlib&#x27;]<br></code></pre></td></tr></table></figure>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cl4i928gt000030ucewgs01w0","category_id":"cl4i94ysv000330ucdfh751oq","_id":"cl4i94ysw000530uceewu5i7n"},{"post_id":"cl4i997bq000730uc840z3753","category_id":"cl4i9bdr0000c30uc37w78sn8","_id":"cl4i9bdr1000e30uc4qr04662"},{"post_id":"cl6a4vey70000dcuca2ld8fkf","category_id":"cl4i9bdr0000c30uc37w78sn8","_id":"cl6a5ea4s0002hwuc1a9z4bxi"},{"post_id":"cl6a4vey70000dcuca2ld8fkf","category_id":"cl6a5ea4p0000hwuc4i56bqlc","_id":"cl6a5ea4s0003hwuc17e1g0a1"},{"post_id":"cl6a4vey70000dcuca2ld8fkf","category_id":"cl6a5ea4r0001hwuc6iudauh0","_id":"cl6a5ea4s0004hwuccp794az0"},{"post_id":"cl4i997bq000730uc840z3753","category_id":"cl6vw8gnr0000uouccwjagptd","_id":"cl6vw8gnz0001uouc7i601qnh"},{"post_id":"cl6vxs6yt00002suc9q8yhj3l","category_id":"cl6vxs6yy00012sucf9ih51jd","_id":"cl6vxs6z200042suc5umn4492"},{"post_id":"cl9tdr2370000a8uc0gef09s8","category_id":"cl9tdr23e0001a8ucayec86d1","_id":"cl9tdr23i0004a8uc5akn4jyx"},{"post_id":"cl8zdst070000h4uc8pav5btz","category_id":"cl9tdr23e0001a8ucayec86d1","_id":"cl9teaifa0000h0ucavk5dug6"}],"PostTag":[{"post_id":"cl4i928gt000030ucewgs01w0","tag_id":"cl4i92t74000130uca1yf0dvt","_id":"cl4i92t75000230uc0s8p1alg"},{"post_id":"cl4i997bq000730uc840z3753","tag_id":"cl4i9ayyx000830ucdw134i7k","_id":"cl4i9ayyx000930uc70my8af1"},{"post_id":"cl4i997bq000730uc840z3753","tag_id":"cl4i9b18h000a30ucc6tlgm3e","_id":"cl4i9b18i000b30ucbmsx56tx"},{"post_id":"cl6a4vey70000dcuca2ld8fkf","tag_id":"cl6a4veyj0002dcucdsubedzi","_id":"cl6a4veym0005dcucaal42fdw"},{"post_id":"cl6a4vey70000dcuca2ld8fkf","tag_id":"cl6a4veyk0003dcuc9baw9ymd","_id":"cl6a4veyn0006dcuc4vrn8iyw"},{"post_id":"cl6vxs6yt00002suc9q8yhj3l","tag_id":"cl6vxs6z000022suc26128fm2","_id":"cl6vxs6z300052suc4j9h6nat"},{"post_id":"cl6vxs6yt00002suc9q8yhj3l","tag_id":"cl6vxs6z200032succeh642kq","_id":"cl6vxs6z300062suc2t4m68po"},{"post_id":"cl8zdst070000h4uc8pav5btz","tag_id":"cl6vxs6z000022suc26128fm2","_id":"cl8zdst0e0001h4ucahoo9fvb"},{"post_id":"cl9tdr2370000a8uc0gef09s8","tag_id":"cl9tdr23g0002a8uc83ql5cm7","_id":"cl9tdr23i0005a8ucfo6zc7yf"},{"post_id":"cl9tdr2370000a8uc0gef09s8","tag_id":"cl9tdr23h0003a8uc9hq519re","_id":"cl9tdr23i0006a8ucbfdp1e5s"}],"Tag":[{"name":"网易云","_id":"cl4i92t74000130uca1yf0dvt"},{"name":"selenium","_id":"cl4i9ayyx000830ucdw134i7k"},{"name":"爬虫","_id":"cl4i9b18h000a30ucc6tlgm3e"},{"name":"前端","_id":"cl6a4veyj0002dcucdsubedzi"},{"name":"PrimeVue","_id":"cl6a4veyk0003dcuc9baw9ymd"},{"name":"Docker","_id":"cl6vxs6z000022suc26128fm2"},{"name":"Bug","_id":"cl6vxs6z200032succeh642kq"},{"name":"VMware","_id":"cl8zbanv900015suc413xf845"},{"name":"ESXI","_id":"cl8zbanvg00035suc32g3balk"},{"name":"python","_id":"cl9tdr23g0002a8uc83ql5cm7"},{"name":"pypi","_id":"cl9tdr23h0003a8uc9hq519re"}]}}